"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[940],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,h=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return n?a.createElement(h,l(l({ref:t},c),{},{components:n})):a.createElement(h,l({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9698:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:9},l="Function Challenges",i={unversionedId:"3 Javascript/functions-scope-docs/function-challenges",id:"3 Javascript/functions-scope-docs/function-challenges",title:"Function Challenges",description:"Now that you know the basics of how functions work, let's try a few challenges.",source:"@site/docs/3 Javascript/03-functions-scope-docs/09-function-challenges.md",sourceDirName:"3 Javascript/03-functions-scope-docs",slug:"/3 Javascript/functions-scope-docs/function-challenges",permalink:"/fundamentals/3 Javascript/functions-scope-docs/function-challenges",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Immediately Invoked Function Expressions (IIFE)",permalink:"/fundamentals/3 Javascript/functions-scope-docs/immediately-invoked-functions"},next:{title:"Execution context",permalink:"/fundamentals/3 Javascript/functions-scope-docs/execution-context"}},s={},u=[{value:"Challenge 1",id:"challenge-1",level:3},{value:"Challenge 2",id:"challenge-2",level:3},{value:"Challenge 3",id:"challenge-3",level:3}],c={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"function-challenges"},"Function Challenges"),(0,r.kt)("p",null,"Now that you know the basics of how functions work, let's try a few challenges."),(0,r.kt)("h3",{id:"challenge-1"},"Challenge 1"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Instructions:")),(0,r.kt)("p",null,"Create a function called ",(0,r.kt)("inlineCode",{parentName:"p"},"getCelsius()")," that takes a temperature in Fahrenheit as an argument and returns the temperature in celsius."),(0,r.kt)("p",null,"For bonus points, write it as a one line arrow function"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Expected Result:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"console.log(getCelsius(32)) // 0\n")),(0,r.kt)("p",null,"You can make the output look prettier by putting it into a string. You can even add ",(0,r.kt)("inlineCode",{parentName:"p"},"\\xB0")," (degrees) and a ",(0,r.kt)("inlineCode",{parentName:"p"},"C")," in front of the celsius temperature."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"console.log(`The temperature is ${getCelsius(32)} \\xB0C`)\n// The temperature is 0 \xb0C\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Hints:")),(0,r.kt)("p",null,"The formula for Fahrenheit to Celsius is ",(0,r.kt)("inlineCode",{parentName:"p"},"(F - 32) * 5 / 9"),". Read more about the formula ",(0,r.kt)("a",{parentName:"p",href:"https://www.cuemath.com/fahrenheit-to-celsius-formula/"},"here")," if needed."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click For Solution"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const getCelsius = (fahrenheit) => {\n  const celsius = ((fahrenheit - 32) * 5) / 9\n  return Math.round(celsius)\n}\n\nconsole.log(`The temperature is ${getCelsius(32)} \\xB0C`) // The temperature is 0 \xb0C\n"))),(0,r.kt)("h3",{id:"challenge-2"},"Challenge 2"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Instructions:")),(0,r.kt)("p",null,"Create an arrow function called ",(0,r.kt)("inlineCode",{parentName:"p"},"minMax()")," that takes in an array of numbers and returns an object with the minimum and maximum numbers in the array."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Expected Result:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"console.log(minMax([1, 2, 3, 4, 5]))\n// { min: 1, max: 5 }\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Hints:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"You can use ",(0,r.kt)("inlineCode",{parentName:"li"},"Math.min()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Math.max()")," to get the min and max of a list of numbers."),(0,r.kt)("li",{parentName:"ol"},"You can use the Spread ",(0,r.kt)("inlineCode",{parentName:"li"},"...")," operator to spread the values of an array into separate arguments.")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click For Solution"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function minMax(arr) {\n  const min = Math.min(...arr)\n  const max = Math.max(...arr)\n\n  return {\n    min,\n    max,\n  }\n}\n\nconsole.log(minMax([55, 32, 43, 54, 65, 76, 87, 98, 109]))\n// { min: 32, max: 109 }\n"))),(0,r.kt)("h3",{id:"challenge-3"},"Challenge 3"),(0,r.kt)("p",null,"Create an IIFE (Immediately Invoked Function Expression) that takes in the length and width of a rectangle outputs it to the console in a message as soon as the page loads."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Expected Result:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// On page load\nThe area of a rectangle with a length of 10 and a width of 5 is 50.\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Hints:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The area of a rectangle is ",(0,r.kt)("inlineCode",{parentName:"li"},"length * width"),". These should get passed into the IIFE as arguments."),(0,r.kt)("li",{parentName:"ol"},"You do not have to return anything from this function, just log to the console.")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click For Solution"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},";((length, width) => {\n  const area = length * width\n\n  const output = `The area of a rectangle with a length of ${length} and a width of ${width} is ${area}.`\n\n  console.log(output)\n})(10, 5)\n"))))}m.isMDXComponent=!0}}]);