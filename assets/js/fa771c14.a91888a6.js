"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[6820],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,f=c["".concat(d,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(f,o(o({ref:t},s),{},{components:n})):a.createElement(f,o({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7818:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:46},o="Build a Pokemon Card 2",l={unversionedId:"6 React Native Expo CLI/Section 6: Exercise One/46 Build a Pokemon Card 2",id:"6 React Native Expo CLI/Section 6: Exercise One/46 Build a Pokemon Card 2",title:"Build a Pokemon Card 2",description:"=> Intro",source:"@site/docs/6 React Native Expo CLI/Section 6: Exercise One/46 Build a Pokemon Card 2.md",sourceDirName:"6 React Native Expo CLI/Section 6: Exercise One",slug:"/6 React Native Expo CLI/Section 6: Exercise One/46 Build a Pokemon Card 2",permalink:"/fundamentals/6 React Native Expo CLI/Section 6: Exercise One/46 Build a Pokemon Card 2",draft:!1,tags:[],version:"current",sidebarPosition:46,frontMatter:{sidebar_position:46},sidebar:"tutorialSidebar",previous:{title:"Build a Pokemon Card 1",permalink:"/fundamentals/6 React Native Expo CLI/Section 6: Exercise One/45 Build a Pokemon Card 1"},next:{title:"Build a Pokemon Card 3",permalink:"/fundamentals/6 React Native Expo CLI/Section 6: Exercise One/47 Build a Pokemon Card 3"}},d={},p=[{value:"<strong>=&gt;</strong> Intro",id:"-intro",level:3},{value:"Step 6: Styling with Stylesheet API",id:"step-6-styling-with-stylesheet-api",level:3},{value:"Add Card Styling",id:"add-card-styling",level:3},{value:"Define Card Styles",id:"define-card-styles",level:3},{value:"Adding Shadow Effect",id:"adding-shadow-effect",level:3}],s={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"build-a-pokemon-card-2"},"Build a Pokemon Card 2"),(0,r.kt)("blockquote",null),(0,r.kt)("h3",{id:"-intro"},(0,r.kt)("strong",{parentName:"h3"},"=>")," Intro"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In Part 1, we set up our container, added a background color, utilized SafeAreaView for iOS, and applied top padding for Android using the Platform module.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Now, in this video, our focus shifts towards styling our card component. Let's pick up where we left off and move on to Step 6."))),(0,r.kt)("h3",{id:"step-6-styling-with-stylesheet-api"},"Step 6: Styling with Stylesheet API"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"in ",(0,r.kt)("inlineCode",{parentName:"p"},"PokemonCard.js"),", Import the Stylesheet API from React Native.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},".create()")," method to define styles and assign them to the ",(0,r.kt)("inlineCode",{parentName:"p"},"styles")," constant."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, StyleSheet } from 'react-native'\n\nexport default function PokemonCard() {\n  return (\n    <View>\n      <Text>Pokemon Card</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({})\n")),(0,r.kt)("h3",{id:"add-card-styling"},"Add Card Styling"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Create a new key called ",(0,r.kt)("inlineCode",{parentName:"p"},"card")," within the ",(0,r.kt)("inlineCode",{parentName:"p"},"styles")," object.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Apply styling to the View component using the defined ",(0,r.kt)("inlineCode",{parentName:"p"},"card")," style."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, StyleSheet } from 'react-native'\n\nexport default function PokemonCard() {\n  return (\n    <View style={styles.card}>\n      <Text>Pokemon Card</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {},\n})\n")),(0,r.kt)("h3",{id:"define-card-styles"},"Define Card Styles"),(0,r.kt)("p",null,"For the card, let's start with these styles:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Background color: white,")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Border radius: 16,")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"borderWidth: 2,")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Padding: 16, (for creating spacing within the card)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Margin: 16, (for spacing between the cards)"))),(0,r.kt)("h3",{id:"adding-shadow-effect"},"Adding Shadow Effect"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"for the card Shadow effect we rely on the ",(0,r.kt)("inlineCode",{parentName:"p"},"Platform")," module")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Import the ",(0,r.kt)("inlineCode",{parentName:"p"},"Platform")," module from React Native.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Utilize (spread)",(0,r.kt)("inlineCode",{parentName:"p"},"...Platform.select()")," to apply platform-specific shadow properties."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, StyleSheet, Platform } from 'react-native'\n\nexport default function PokemonCard() {\n  return (\n    <View style={styles.card}>\n      <Text>Pokemon Card</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 16,\n    borderWidth: 2,\n    padding: 16,\n    margin: 16,\n    ...Platform.select({\n      ios: {},\n      android: {},\n    }),\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Define shadow properties for both ",(0,r.kt)("inlineCode",{parentName:"li"},"ios")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Android")," within the ",(0,r.kt)("inlineCode",{parentName:"li"},"card")," style.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, StyleSheet, Platform } from 'react-native'\n\nexport default function PokemonCard() {\n  return (\n    <View style={styles.card}>\n      <Text>Pokemon Card</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 16,\n    borderWidth: 2,\n    padding: 16,\n    margin: 16,\n    ...Platform.select({\n      ios: {\n        shadowOffset: { width: 2, height: 2 },\n        shadowColor: '333',\n        shadowOpacity: 0.3,\n        shadowRadius: 4,\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n  },\n})\n")),(0,r.kt)("p",null,"And that's it! Taking a look at our UI, the card component should now have a visually appealing appearance."))}u.isMDXComponent=!0}}]);