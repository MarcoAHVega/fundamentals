"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[338],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>g});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(t),c=r,g=u["".concat(s,".").concat(c)]||u[c]||m[c]||o;return t?a.createElement(g,i(i({ref:n},d),{},{components:t})):a.createElement(g,i({ref:n},d))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},8059:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const o={sidebar_position:62},i="Login Form",l={unversionedId:"6 React Native Expo CLI/Section 8: Inputs and Forms/62 Login Form",id:"6 React Native Expo CLI/Section 8: Inputs and Forms/62 Login Form",title:"Login Form",description:"Login Form",source:"@site/docs/6 React Native Expo CLI/Section 8: Inputs and Forms/62 Login Form.md",sourceDirName:"6 React Native Expo CLI/Section 8: Inputs and Forms",slug:"/6 React Native Expo CLI/Section 8: Inputs and Forms/62 Login Form",permalink:"/fundamentals/6 React Native Expo CLI/Section 8: Inputs and Forms/62 Login Form",draft:!1,tags:[],version:"current",sidebarPosition:62,frontMatter:{sidebar_position:62},sidebar:"tutorialSidebar",previous:{title:"Switch",permalink:"/fundamentals/6 React Native Expo CLI/Section 8: Inputs and Forms/61 Switch"},next:{title:"KeyboardAvoidingView",permalink:"/fundamentals/6 React Native Expo CLI/Section 8: Inputs and Forms/63 KeyboardAvoidingView"}},s={},p=[{value:"<strong>Login Form</strong>",id:"login-form-1",level:2},{value:"<strong>=&gt;</strong> Intro",id:"-intro",level:3},{value:"<strong>=&gt;</strong> Setting Up the Component",id:"-setting-up-the-component",level:3},{value:"<strong>=&gt;</strong> Creating the Main Container",id:"-creating-the-main-container",level:3},{value:"<strong>=&gt;</strong> Form Container",id:"-form-container",level:3},{value:"<strong>=&gt;</strong> Adding Labels and Inputs",id:"-adding-labels-and-inputs",level:3},{value:"<strong>=&gt;</strong> Adding a Submit Button",id:"-adding-a-submit-button",level:3},{value:"<strong>=&gt;</strong> Managing Form State",id:"-managing-form-state",level:3}],d={toc:p},u="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"login-form"},"Login Form"),(0,r.kt)("h2",{id:"login-form-1"},(0,r.kt)("strong",{parentName:"h2"},"Login Form")),(0,r.kt)("blockquote",null),(0,r.kt)("h3",{id:"-intro"},(0,r.kt)("strong",{parentName:"h3"},"=>")," Intro"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Welcome back! In our previous videos, we have covered inputs in React Native.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Now, let's talk about forms.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"We're going to be learning this through a series of four videos where we will be building a login form from scratch.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In this particular video, our focus will be on building the user interface for our login form.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This means we'll be writing the JSX and styling it."))),(0,r.kt)("h3",{id:"-setting-up-the-component"},(0,r.kt)("strong",{parentName:"h3"},"=>")," Setting Up the Component"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"I have reset the app component to minimal code.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"We have imports for ",(0,r.kt)("inlineCode",{parentName:"p"},"View"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Text"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"TextInput"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Button"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"StyleSheet"),". The JSX is empty."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, TextInput, Button, StyleSheet } from 'react-native'\n\nexport default function App() {\n  return ()\n}\n\nconst styles = StyleSheet.create({})\n\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Now, let's add the elements for the login form.")),(0,r.kt)("h3",{id:"-creating-the-main-container"},(0,r.kt)("strong",{parentName:"h3"},"=>")," Creating the Main Container"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"First things first, we'll begin with a ",(0,r.kt)("inlineCode",{parentName:"p"},"View")," component.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Think of this as our main container, and of course, we're going to apply some container styles to make it look neat.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"style")," is equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"styles.container"),", and we're going to define the container styles: ",(0,r.kt)("inlineCode",{parentName:"p"},"flex")," set to ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"justifyContent")," set to ",(0,r.kt)("inlineCode",{parentName:"p"},"center"),", a bit of padding in the horizontal direction, and a slightly gray background color."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, TextInput, Button, StyleSheet } from 'react-native'\n\nexport default function App() {\n  return <View style={styles.container}></View>\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    backgroundColor: '#f5f5f5',\n  },\n})\n")),(0,r.kt)("h3",{id:"-form-container"},(0,r.kt)("strong",{parentName:"h3"},"=>")," Form Container"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Next, inside this container, let's nest another ",(0,r.kt)("inlineCode",{parentName:"p"},"View")," component.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This will act as our form container, and you guessed it, we're going to style it using form styles.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"style")," is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"styles.form"),", and we're going to specify a white background color, padding, border radius, shadow color, shadow offset, shadow opacity, shadow radius, and elevation. This is specifically for Android."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, TextInput, Button, StyleSheet } from 'react-native'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <View style={styles.form}></View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    backgroundColor: '#f5f5f5',\n  },\n  form: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n})\n")),(0,r.kt)("h3",{id:"-adding-labels-and-inputs"},(0,r.kt)("strong",{parentName:"h3"},"=>")," Adding Labels and Inputs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Now it's time to add our labels and inputs. We'll need one for username and one for the password.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'For our inputs, let\'s add a placeholder to guide our users: "Enter your username" and "Enter your password."')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For the password input, always use ",(0,r.kt)("inlineCode",{parentName:"p"},"secureTextEntry")," to keep passwords hidden."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, TextInput, Button, StyleSheet } from 'react-native'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <View style={styles.form}>\n        <Text>Username</Text>\n        <TextInput placeholder='Enter your username' />\n        <Text>Password</Text>\n        <TextInput\n          placeholder='Enter your password'\n          secureTextEntry\n        />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    backgroundColor: '#f5f5f5',\n  },\n  form: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Let's style these components: For the label, ",(0,r.kt)("inlineCode",{parentName:"li"},"style")," is equal to ",(0,r.kt)("inlineCode",{parentName:"li"},"styles.label"),", and for the text input, ",(0,r.kt)("inlineCode",{parentName:"li"},"style")," is equal to ",(0,r.kt)("inlineCode",{parentName:"li"},"styles.input"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, TextInput, Button, StyleSheet } from 'react-native'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <View style={styles.form}>\n        <Text style={styles.label}>Username</Text>\n        <TextInput\n          style={styles.input}\n          placeholder='Enter your username'\n        />\n        <Text style={styles.label}>Password</Text>\n        <TextInput\n          style={styles.input}\n          placeholder='Enter your password'\n          secureTextEntry\n        />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    backgroundColor: '#f5f5f5',\n  },\n  form: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For the label, we set font size, margin bottom, font weight,")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"and for the input, we define height, border color, border width, margin bottom, padding, and border radius."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, TextInput, Button, StyleSheet } from 'react-native'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <View style={styles.form}>\n        <Text style={styles.label}>Username</Text>\n        <TextInput\n          style={styles.input}\n          placeholder='Enter your username'\n        />\n        <Text style={styles.label}>Password</Text>\n        <TextInput\n          style={styles.input}\n          placeholder='Enter your password'\n          secureTextEntry\n        />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    backgroundColor: '#f5f5f5',\n  },\n  form: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 5,\n    fontWeight: 'bold',\n  },\n  input: {\n    height: 40,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    marginBottom: 15,\n    padding: 10,\n    borderRadius: 5,\n  },\n})\n")),(0,r.kt)("h3",{id:"-adding-a-submit-button"},(0,r.kt)("strong",{parentName:"h3"},"=>")," Adding a Submit Button"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Moving on, we will add a button that users can click to submit this form data.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'We will title it "Login," and as for the ',(0,r.kt)("inlineCode",{parentName:"p"},"onPress")," prop, we will leave it empty for now. We'll tackle that in an upcoming video."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, TextInput, Button, StyleSheet } from 'react-native'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <View style={styles.form}>\n        <Text style={styles.label}>Username</Text>\n        <TextInput\n          style={styles.input}\n          placeholder='Enter your username'\n        />\n        <Text style={styles.label}>Password</Text>\n        <TextInput\n          style={styles.input}\n          placeholder='Enter your password'\n          secureTextEntry\n        />\n        <Button\n          title='Login'\n          onPress={() => {}}\n        />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    backgroundColor: '#f5f5f5',\n  },\n  form: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 5,\n    fontWeight: 'bold',\n  },\n  input: {\n    height: 40,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    marginBottom: 15,\n    padding: 10,\n    borderRadius: 5,\n  },\n})\n")),(0,r.kt)("h3",{id:"-managing-form-state"},(0,r.kt)("strong",{parentName:"h3"},"=>")," Managing Form State"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If we save the file and take a look at the UI, we can see our login form with username, password, and the login button.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For our final step, we're going to manage the form state using the ",(0,r.kt)("inlineCode",{parentName:"p"},"useState")," hook.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Let's import it at the top."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useState } from 'react'\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"We'll then create two state variables:")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"username")," (empty string as the default value)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"and ",(0,r.kt)("inlineCode",{parentName:"p"},"password")," (empty string as the default value)."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, TextInput, Button, StyleSheet } from 'react-native'\nimport { useState } from 'react'\n\nexport default function App() {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.form}>\n        <Text style={styles.label}>Username</Text>\n        <TextInput\n          style={styles.input}\n          placeholder='Enter your username'\n        />\n        <Text style={styles.label}>Password</Text>\n        <TextInput\n          style={styles.input}\n          placeholder='Enter your password'\n          secureTextEntry\n        />\n        <Button\n          title='Login'\n          onPress={() => {}}\n        />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    backgroundColor: '#f5f5f5',\n  },\n  form: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 5,\n    fontWeight: 'bold',\n  },\n  input: {\n    height: 40,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    marginBottom: 15,\n    padding: 10,\n    borderRadius: 5,\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"On the text inputs, we add ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," is equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"username")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"onChangeText")," is equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"setUsername"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Similarly, ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," is equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"password"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"onChangeText")," is equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"setPassword"),"."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, TextInput, Button, StyleSheet } from 'react-native'\nimport { useState } from 'react'\n\nexport default function App() {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.form}>\n        <Text style={styles.label}>Username</Text>\n        <TextInput\n          style={styles.input}\n          placeholder='Enter your username'\n          value={username}\n          onChangeText={setUsername}\n        />\n        <Text style={styles.label}>Password</Text>\n        <TextInput\n          style={styles.input}\n          placeholder='Enter your password'\n          secureTextEntry\n          value={password}\n          onChangeText={setPassword}\n        />\n        <Button\n          title='Login'\n          onPress={() => {}}\n        />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    backgroundColor: '#f5f5f5',\n  },\n  form: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 5,\n    fontWeight: 'bold',\n  },\n  input: {\n    height: 40,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    marginBottom: 15,\n    padding: 10,\n    borderRadius: 5,\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We can now manage our form state seamlessly.")))}m.isMDXComponent=!0}}]);