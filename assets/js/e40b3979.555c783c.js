"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[4703],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>B});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},x="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),x=c(n),d=r,B=x["".concat(s,".").concat(d)]||x[d]||p[d]||l;return n?o.createElement(B,a(a({ref:t},u),{},{components:n})):o.createElement(B,a({ref:t},u))}));function B(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[x]="string"==typeof e?e:r,a[1]=i;for(var c=2;c<l;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2303:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const l={sidebar_position:29},a="Justify Content",i={unversionedId:"6 React Native Expo CLI/Section 4: Layout/29 justifyContent",id:"6 React Native Expo CLI/Section 4: Layout/29 justifyContent",title:"Justify Content",description:"=> Intro",source:"@site/docs/6 React Native Expo CLI/Section 4: Layout/29 justifyContent.md",sourceDirName:"6 React Native Expo CLI/Section 4: Layout",slug:"/6 React Native Expo CLI/Section 4: Layout/29 justifyContent",permalink:"/fundamentals/6 React Native Expo CLI/Section 4: Layout/29 justifyContent",draft:!1,tags:[],version:"current",sidebarPosition:29,frontMatter:{sidebar_position:29},sidebar:"tutorialSidebar",previous:{title:"Flex Direction",permalink:"/fundamentals/6 React Native Expo CLI/Section 4: Layout/28 flexDirection"},next:{title:"AlignItems",permalink:"/fundamentals/6 React Native Expo CLI/Section 4: Layout/30 alignItems"}},s={},c=[{value:"<strong>=&gt;</strong> Intro",id:"-intro",level:3},{value:"Setting Justify Content",id:"setting-justify-content",level:3},{value:"Default Value",id:"default-value",level:3},{value:"Flex Start",id:"flex-start",level:3},{value:"Flex End",id:"flex-end",level:3},{value:"Center",id:"center",level:3},{value:"Additional Values",id:"additional-values",level:3},{value:"Space Between",id:"space-between",level:3},{value:"Space Around",id:"space-around",level:3},{value:"Space Evenly",id:"space-evenly",level:3},{value:"Horizontal Alignment with Flex Direction",id:"horizontal-alignment-with-flex-direction",level:3},{value:"Summary",id:"summary",level:3}],u={toc:c},x="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(x,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"justify-content"},"Justify Content"),(0,r.kt)("blockquote",null),(0,r.kt)("h3",{id:"-intro"},(0,r.kt)("strong",{parentName:"h3"},"=>")," Intro"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In this video, we will focus on the justify content property, which defines the alignment along the main axis.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"let's start with the previous code"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      {/* <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box> */}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("h3",{id:"setting-justify-content"},"Setting Justify Content"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Justify content is a property you set on the container to control the alignment of its items.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Let's add ",(0,r.kt)("inlineCode",{parentName:"p"},"justifyContent")," to the container styles."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      {/* <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box> */}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: '',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("h3",{id:"default-value"},"Default Value"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"By default, justify content is set to the value ",(0,r.kt)("inlineCode",{parentName:"p"},"flex-start")," .")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This places the flex items at the beginning of the main axis, which, in this case, is at the top of the view."))),(0,r.kt)("h3",{id:"flex-start"},"Flex Start"),(0,r.kt)("p",null,"When justify content is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"flex-start")," , there is no difference in the placement of the items."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      {/* <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box> */}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"They are still placed at the top of the view.")),(0,r.kt)("h3",{id:"flex-end"},"Flex End"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Setting justify content to ",(0,r.kt)("inlineCode",{parentName:"li"},"flex-end")," causes the flex items to be placed at the end of the main axis.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      {/* <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box> */}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In this case, the items are now placed at the bottom of the view.")),(0,r.kt)("h3",{id:"center"},"Center"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To align the content at the center of the main axis, set the value to ",(0,r.kt)("inlineCode",{parentName:"li"},"center")," .")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      {/* <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box> */}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This will place the content in the middle of the view.")),(0,r.kt)("h3",{id:"additional-values"},"Additional Values"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Flexbox provides additional values that control how the extra space is distributed within the container.")),(0,r.kt)("h3",{id:"space-between"},"Space Between"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"One such value is ",(0,r.kt)("inlineCode",{parentName:"li"},"space-between")," .")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      {/* <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box> */}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-between',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This evenly splits the extra space left out between the flex items.")),(0,r.kt)("h3",{id:"space-around"},"Space Around"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For scenarios where you want space before the first item and after the last item, the value is ",(0,r.kt)("inlineCode",{parentName:"li"},"space-around")," .")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      {/* <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box> */}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-around',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This adds space at the beginning and end, equal to half of the space between the flex items.")),(0,r.kt)("h3",{id:"space-evenly"},"Space Evenly"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If you want the same space at the start and end of the items as well, the value you are looking for is ",(0,r.kt)("inlineCode",{parentName:"li"},"space-evenly")," .")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      {/* <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box> */}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-evenly',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This equally distributes the extra space within the container.")),(0,r.kt)("h3",{id:"horizontal-alignment-with-flex-direction"},"Horizontal Alignment with Flex Direction"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"It's important to note that the justify content property aligns items based on the main axis.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If the flex direction is set to row (which changes the main axis from left to right),"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      {/* <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box> */}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"justify content deals with horizontal alignment.")),(0,r.kt)("h3",{id:"summary"},"Summary"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In summary, the justify content property is used to align items and distribute any extra space in the container.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The alignment is always along the main axis. The possible values are ",(0,r.kt)("inlineCode",{parentName:"p"},"flex-start")," , ",(0,r.kt)("inlineCode",{parentName:"p"},"flex-end")," , ",(0,r.kt)("inlineCode",{parentName:"p"},"center")," , ",(0,r.kt)("inlineCode",{parentName:"p"},"space-between")," , ",(0,r.kt)("inlineCode",{parentName:"p"},"space-around")," , and ",(0,r.kt)("inlineCode",{parentName:"p"},"space-evenly")," ."))))}p.isMDXComponent=!0}}]);