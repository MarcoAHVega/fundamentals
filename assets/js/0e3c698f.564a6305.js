"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[6400],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),u=o,f=p["".concat(l,".").concat(u)]||p[u]||m[u]||a;return n?i.createElement(f,r(r({ref:t},d),{},{components:n})):i.createElement(f,r({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,r[1]=s;for(var c=2;c<a;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3680:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=n(7462),o=(n(7294),n(3905));const a={sidebar_position:11},r="Update Item & Reset State",s={unversionedId:"3 Javascript/shopping-list-project-docs/update-item-reset-state",id:"3 Javascript/shopping-list-project-docs/update-item-reset-state",title:"Update Item & Reset State",description:"We can now set the app to 'edit mode' by clicking on an item. Now we need to add the ability to update the item.",source:"@site/docs/3 Javascript/08-shopping-list-project-docs/11-update-item-reset-state.md",sourceDirName:"3 Javascript/08-shopping-list-project-docs",slug:"/3 Javascript/shopping-list-project-docs/update-item-reset-state",permalink:"/fundamentals/3 Javascript/shopping-list-project-docs/update-item-reset-state",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Set Edit Mode",permalink:"/fundamentals/3 Javascript/shopping-list-project-docs/set-edit-mode"},next:{title:"Prevent Duplicate Entries",permalink:"/fundamentals/3 Javascript/shopping-list-project-docs/prevent-duplicate-entries"}},l={},c=[{value:"checking to see if we are in edit mode in the <code>onAddItemSubmit()</code> function.",id:"checking-to-see-if-we-are-in-edit-mode-in-the-onadditemsubmit-function",level:3},{value:"To make sure that the UI is reset, we will call the <code>checkUI()</code> function.",id:"to-make-sure-that-the-ui-is-reset-we-will-call-the-checkui-function",level:3}],d={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"update-item--reset-state"},"Update Item & Reset State"),(0,o.kt)("p",null,"We can now set the app to 'edit mode' by clicking on an item. Now we need to add the ability to update the item."),(0,o.kt)("h3",{id:"checking-to-see-if-we-are-in-edit-mode-in-the-onadditemsubmit-function"},"checking to see if we are in edit mode in the ",(0,o.kt)("inlineCode",{parentName:"h3"},"onAddItemSubmit()")," function."),(0,o.kt)("p",null,"We can do this by checking to see if we are in edit mode in the ",(0,o.kt)("inlineCode",{parentName:"p"},"onAddItemSubmit()")," function. If we are, then we will update the item, otherwise we will add a new item."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function onAddItemSubmit(e) {\n  e.preventDefault()\n\n  const newItem = itemInput.value\n\n  // Validate Input\n  if (newItem === '') {\n    alert('Please add an item')\n    return\n  }\n\n  // Check for edit mode\n  if (isEditMode) {\n    const itemToEdit = itemList.querySelector('.edit-mode')\n\n    removeItemFromStorage(itemToEdit.textContent)\n    itemToEdit.classList.remove('edit-mode')\n    itemToEdit.remove()\n    isEditMode = false\n  }\n\n  // Create item DOM element\n  addItemToDOM(newItem)\n\n  // Add item to local storage\n  addItemToStorage(newItem)\n\n  checkUI()\n\n  itemInput.value = ''\n}\n")),(0,o.kt)("p",null,"You can not directly update an item in local storage, so we are basically removing the item and adding a new one. We are also removing the ",(0,o.kt)("inlineCode",{parentName:"p"},"edit-mode")," class from the item element and setting the edit state to false."),(0,o.kt)("h3",{id:"to-make-sure-that-the-ui-is-reset-we-will-call-the-checkui-function"},"To make sure that the UI is reset, we will call the ",(0,o.kt)("inlineCode",{parentName:"h3"},"checkUI()")," function."),(0,o.kt)("p",null,"I am also going to add the following to the ",(0,o.kt)("inlineCode",{parentName:"p"},"checkUI()")," function:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function checkUI() {\n  itemInput.value = ''\n\n  const items = itemList.querySelectorAll('li')\n\n  if (items.length === 0) {\n    clearBtn.style.display = 'none'\n    itemFilter.style.display = 'none'\n  } else {\n    clearBtn.style.display = 'block'\n    itemFilter.style.display = 'block'\n  }\n\n  formBtn.innerHTML = '<i class=\"fa-solid fa-plus\"></i> Add Item'\n  formBtn.style.backgroundColor = '#333'\n\n  isEditMode = false\n}\n")),(0,o.kt)("p",null,"Just to make sure we set the button back and set edit mode to false whenever we run this function."))}m.isMDXComponent=!0}}]);