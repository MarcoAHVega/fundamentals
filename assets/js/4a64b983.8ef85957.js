"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[2814],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=o.createContext({}),s=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return o.createElement(p.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(t),u=r,g=m["".concat(p,".").concat(u)]||m[u]||d[u]||a;return t?o.createElement(g,l(l({ref:n},c),{},{components:t})):o.createElement(g,l({ref:n},c))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=u;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<a;s++)l[s]=t[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7750:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var o=t(7462),r=(t(7294),t(3905));const a={sidebar_position:4},l="Split-screen components",i={unversionedId:"10 React Design Patterns/4 Split-screen components",id:"10 React Design Patterns/4 Split-screen components",title:"Split-screen components",description:"Introduction",source:"@site/docs/10 React Design Patterns/4 Split-screen components.md",sourceDirName:"10 React Design Patterns",slug:"/10 React Design Patterns/4 Split-screen components",permalink:"/fundamentals/10 React Design Patterns/4 Split-screen components",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"What are layout components?",permalink:"/fundamentals/10 React Design Patterns/3 What are layout components"},next:{title:"Split-screen component improvements",permalink:"/fundamentals/10 React Design Patterns/5 Split-screen component improvements"}},p={},s=[{value:"Introduction",id:"introduction",level:3},{value:"Creating the Split Screen Component",id:"creating-the-split-screen-component",level:3},{value:"Adding Styles with Styled Components",id:"adding-styles-with-styled-components",level:3},{value:"Implementing the Split Screen Component",id:"implementing-the-split-screen-component",level:3},{value:"Conclusion",id:"conclusion",level:3}],c={toc:s},m="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"split-screen-components"},"Split-screen components"),(0,r.kt)("h3",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"In this example, we will create a split-screen layout using layout components."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"We will start with ",(0,r.kt)("inlineCode",{parentName:"p"},"a basic Create React App application"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To style our components, we will use a package called styled-components."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install styled-components\n")),(0,r.kt)("h3",{id:"creating-the-split-screen-component"},"Creating the Split Screen Component"),(0,r.kt)("p",null,"To begin, let's create a new file called ",(0,r.kt)("inlineCode",{parentName:"p"},"SplitScreen.js")," that will contain our split screen layout component. The component will have two props: ",(0,r.kt)("inlineCode",{parentName:"p"},"left")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"right")," , representing the components to be displayed on the left and right sides of the split screen, respectively."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export const SplitScreen = ({ left, right }) => {\n  return (\n    <div>\n      <div>{left}</div>\n      <div>{right}</div>\n    </div>\n  )\n}\n")),(0,r.kt)("h3",{id:"adding-styles-with-styled-components"},"Adding Styles with Styled Components"),(0,r.kt)("p",null,"To add styles to our split screen component, we will use styled components. First, let's import the ",(0,r.kt)("inlineCode",{parentName:"p"},"styled")," package."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import styled from 'styled-components'\n")),(0,r.kt)("p",null,"Next, we will define the styles for our container and pane components. The container component will have the ",(0,r.kt)("inlineCode",{parentName:"p"},"display: flex")," property, and the pane component will have the ",(0,r.kt)("inlineCode",{parentName:"p"},"flex: 1")," property to ensure equal spacing."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const Container = styled.div`\n  display: flex;\n\nconst Pane = styled.div`\nflex: 1\n")),(0,r.kt)("p",null,"Now, we can replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"div")," elements in our split screen component with the styled components."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export const SplitScreen = ({ left, right }) => {\n  return (\n    <Container>\n      <Pane>{left}</Pane>\n      <Pane>{right}</Pane>\n    </Container>\n  )\n}\n")),(0,r.kt)("h3",{id:"implementing-the-split-screen-component"},"Implementing the Split Screen Component"),(0,r.kt)("p",null,"To see how our split screen component works, let's use it in our app. First, import the ",(0,r.kt)("inlineCode",{parentName:"p"},"SplitScreen")," component.\nimport { SplitScreen } from './split-screen';\nIn our app component, define two simple components: ",(0,r.kt)("inlineCode",{parentName:"p"},"LeftHandComponent")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"RightHandComponent")," . These components will be displayed on the left and right sides of the split screen, respectively."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const LeftHandComponent = () => {\n  return <h1 style={{ backgroundColor: 'green' }}>Left</h1>\n}\nconst RightHandComponent = () => {\n  return <p style={{ backgroundColor: 'red' }}>Right</p>\n}\n")),(0,r.kt)("p",null,"Now, let's render the ",(0,r.kt)("inlineCode",{parentName:"p"},"SplitScreen")," component and pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"LeftHandComponent")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"RightHandComponent")," as props."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"function App() {\n  return (\n    <div className='App'>\n      <SplitScreen left={<LeftHandComponent />} right={<RightHandComponent />} />\n    </div>\n  )\n}\n")),(0,r.kt)("h3",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"By using the ",(0,r.kt)("inlineCode",{parentName:"p"},"SplitScreen")," component, we can create a split-screen layout with components displayed on the left and right sides. The ",(0,r.kt)("inlineCode",{parentName:"p"},"styled-components")," package allows us to easily add styles to our components."))}d.isMDXComponent=!0}}]);