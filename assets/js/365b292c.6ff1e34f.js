"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[8700],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=m(n),d=r,k=s["".concat(p,".").concat(d)]||s[d]||c[d]||i;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:r,o[1]=l;for(var m=2;m<i;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8e3:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:9},o="Text Component",l={unversionedId:"6 React Native/9 Text",id:"6 React Native/9 Text",title:"Text Component",description:"- The text component is a component for displaying text.",source:"@site/docs/6 React Native/9 Text.md",sourceDirName:"6 React Native",slug:"/6 React Native/9 Text",permalink:"/fundamentals/6 React Native/9 Text",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"View Component",permalink:"/fundamentals/6 React Native/8 View"},next:{title:"Image Component",permalink:"/fundamentals/6 React Native/10 Image"}},p={},m=[{value:"Understanding the Text Component",id:"understanding-the-text-component",level:3},{value:"Improving the Position",id:"improving-the-position",level:3},{value:"Styling and Layout",id:"styling-and-layout",level:3},{value:"Nesting Text Components",id:"nesting-text-components",level:3},{value:"Summary",id:"summary",level:3}],u={toc:m},s="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"text-component"},"Text Component"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The text component is a component for displaying text.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"It supports nesting, styling, and touch handling.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Depending on the target platform, ",(0,r.kt)("inlineCode",{parentName:"p"},"React Native will translate this component to either a UI text view for iOS, a text view for Android, or a paragraph tag for the web.")))),(0,r.kt)("h3",{id:"understanding-the-text-component"},"Understanding the Text Component"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Let's return to VS Code and understand more.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To start, let's write some code within the outer view component.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'Delete the two nested views and instead add the text "Hello World".'))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View } from 'react-native'\n\nfunction App() {\n  return <View style={{ flex: 1, backgroundColor: 'plum' }}>Hello World</View>\n}\n\nexport default App\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"When we save the file, ",(0,r.kt)("inlineCode",{parentName:"p"},"we see an error."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This error occurs because ",(0,r.kt)("inlineCode",{parentName:"p"},"in React Native, all text nodes must be wrapped inside a text component"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Directly placing text under a view is not allowed.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This is a common error you will run into when starting with React Native.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},'To fix this error, we need to import the text component from React Native and wrap the "Hello World" text with it.')))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, Text } from 'react-native'\n\nfunction App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum' }}>\n      <Text>Hello World</Text>\n    </View>\n  )\n}\n\nexport default App\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Once we make this change and save the file, we can now see the text being displayed in the simulator and the emulator.")),(0,r.kt)("h3",{id:"improving-the-position"},"Improving the Position"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Now the position of the text is a little awkward, so let's add some padding for now on the outer view container.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Add a padding of 60."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, Text } from 'react-native'\n\nfunction App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <Text>Hello World</Text>\n    </View>\n  )\n}\n\nexport default App\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Save the file.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'This is much better. We\'re able to clearly see the "Hello World" text. Not perfect, but better.'))),(0,r.kt)("h3",{id:"styling-and-layout"},"Styling and Layout"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"As mentioned in the previous video, there is much more to learn about styling and layout with these components.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"We will cover these topics in detail in the upcoming sections."))),(0,r.kt)("h3",{id:"nesting-text-components"},"Nesting Text Components"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Next, let's explore nesting text components.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'For example, suppose we want to display the word "Hello" in white color.')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'To achieve this, we can wrap the "Hello" text with another pair of text component tags.')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'On this inner text component, we can add a style prop, which is an object, and set the color property to a value of "white".'))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, Text } from 'react-native'\nfunction App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <Text>\n        <Text style={{ color: 'white' }}>Hello</Text> World\n      </Text>\n    </View>\n  )\n}\nexport default App\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'By doing this, the word "Hello" will appear in white color, while "World" remains in black.')),(0,r.kt)("h3",{id:"summary"},"Summary"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In this video, we learned that the text component is essential for displaying text in React Native.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Remember that every text node within a view must be wrapped with the text component.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Additionally, nesting of text components is allowed."))))}c.isMDXComponent=!0}}]);