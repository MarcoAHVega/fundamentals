"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[8683],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(n),d=r,f=c["".concat(p,".").concat(d)]||c[d]||u[d]||i;return n?a.createElement(f,o(o({ref:t},m),{},{components:n})):a.createElement(f,o({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7834:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:3},o="The Fundamentals of Stylesheet",l={unversionedId:"13 React Native CLI/06 Fundamentals of Stylesheet",id:"13 React Native CLI/06 Fundamentals of Stylesheet",title:"The Fundamentals of Stylesheet",description:"Setting Up the Environment",source:"@site/docs/13 React Native CLI/06 Fundamentals of Stylesheet.md",sourceDirName:"13 React Native CLI",slug:"/13 React Native CLI/06 Fundamentals of Stylesheet",permalink:"/fundamentals/13 React Native CLI/06 Fundamentals of Stylesheet",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Rewrite React Native App",permalink:"/fundamentals/13 React Native CLI/05 Rewrite React Native App"}},p={},s=[{value:"Setting Up the Environment",id:"setting-up-the-environment",level:3},{value:"Creating the <code>appPro</code> Component",id:"creating-the-apppro-component",level:3},{value:"Using TypeScript",id:"using-typescript",level:3},{value:"Using Color Schemes",id:"using-color-schemes",level:3},{value:"Styling with StyleSheet",id:"styling-with-stylesheet",level:3},{value:"Testing Dark Mode",id:"testing-dark-mode",level:3},{value:"Understanding Flexbox",id:"understanding-flexbox",level:3},{value:"Conclusion and Assignment",id:"conclusion-and-assignment",level:3}],m={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"the-fundamentals-of-stylesheet"},"The Fundamentals of Stylesheet"),(0,r.kt)("h3",{id:"setting-up-the-environment"},"Setting Up the Environment"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Recap of the previous video (Hello World app)."),(0,r.kt)("li",{parentName:"ul"},"Creating a new file on the root directory and name it ",(0,r.kt)("inlineCode",{parentName:"li"},"AppPro.tsx")),(0,r.kt)("li",{parentName:"ul"},"Importing React and React Native."),(0,r.kt)("li",{parentName:"ul"},"Exporting the app component.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport {} from 'react-native'\n\nexport default AppPro\n")),(0,r.kt)("h3",{id:"creating-the-apppro-component"},"Creating the ",(0,r.kt)("inlineCode",{parentName:"h3"},"appPro")," Component"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Creating a new function component ",(0,r.kt)("inlineCode",{parentName:"li"},"appPro"),"."),(0,r.kt)("li",{parentName:"ul"},"Setting up the basic structure for the app.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport {} from 'react-native'\n\nfunction AppPro() {}\n\nexport default AppPro\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"edit the index.js file")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"/**\n * @format\n */\n\nimport { AppRegistry } from 'react-native'\n// import App from './App';\nimport AppPro from './AppPro'\nimport { name as appName } from './app.json'\n\nAppRegistry.registerComponent(appName, () => AppPro)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"add ",(0,r.kt)("inlineCode",{parentName:"li"},"SafeAreaView")," ",(0,r.kt)("inlineCode",{parentName:"li"},"View"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Text"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"StyleSheet"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"useColorScheme")," to AppPro")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { SafeAreaView, View, Text, StyleSheet, useColorScheme } from 'react-native'\n\nfunction AppPro() {\n  return (\n    <SafeAreaView>\n      <View>\n        <Text>Hello</Text>\n      </View>\n    </SafeAreaView>\n  )\n}\n\nexport default AppPro\n")),(0,r.kt)("h3",{id:"using-typescript"},"Using TypeScript"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Introduction to TypeScript."),(0,r.kt)("li",{parentName:"ul"},"Specifying that the component should return a JSX element ",(0,r.kt)("inlineCode",{parentName:"li"},"function AppPro(): JSX.Element {}"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { SafeAreaView, View, Text, StyleSheet, useColorScheme } from 'react-native'\n\nfunction AppPro(): JSX.Element {\n  return (\n    <SafeAreaView>\n      <View>\n        <Text>Hello</Text>\n      </View>\n    </SafeAreaView>\n  )\n}\n\nexport default AppPro\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Declaring a variable ",(0,r.kt)("inlineCode",{parentName:"li"},"const isDarkMode = useColorScheme"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { SafeAreaView, View, Text, StyleSheet, useColorScheme } from 'react-native'\n\nfunction AppPro(): JSX.Element {\n  const isDarkMode = useColorScheme\n  return (\n    <SafeAreaView>\n      <View>\n        <Text>Hello</Text>\n      </View>\n    </SafeAreaView>\n  )\n}\n\nexport default AppPro\n")),(0,r.kt)("h3",{id:"using-color-schemes"},"Using Color Schemes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Introducing ",(0,r.kt)("inlineCode",{parentName:"li"},"useColorScheme")," for dark mode.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { SafeAreaView, View, Text, StyleSheet, useColorScheme } from 'react-native'\n\nfunction AppPro(): JSX.Element {\n  const isDarkMode = useColorScheme() === 'dark'\n  return (\n    <SafeAreaView>\n      <View>\n        <Text>Hello</Text>\n      </View>\n    </SafeAreaView>\n  )\n}\n\nexport default AppPro\n")),(0,r.kt)("h3",{id:"styling-with-stylesheet"},"Styling with StyleSheet"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Importing ",(0,r.kt)("inlineCode",{parentName:"li"},"StyleSheet")," from React Native."),(0,r.kt)("li",{parentName:"ul"},"Creating a stylesheet object."),(0,r.kt)("li",{parentName:"ul"},"Defining a ",(0,r.kt)("inlineCode",{parentName:"li"},"container")," style with flex and alignment."),(0,r.kt)("li",{parentName:"ul"},"Applying styles to the ",(0,r.kt)("inlineCode",{parentName:"li"},"SafeAreaView"),"component.")),(0,r.kt)("h3",{id:"testing-dark-mode"},"Testing Dark Mode"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Demonstrating how to toggle dark mode."),(0,r.kt)("li",{parentName:"ul"},"Showing that styles change based on dark mode.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { SafeAreaView, View, Text, StyleSheet, useColorScheme } from 'react-native'\n\nfunction AppPro(): JSX.Element {\n  const isDarkMode = useColorScheme() === 'dark'\n  return (\n    <SafeAreaView style={isDarkMode ? styles.containerDark : styles.container}>\n      <View>\n        <Text style={isDarkMode ? styles.whiteText : styles.blackText}>Hello World</Text>\n      </View>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ffffff',\n  },\n  containerDark: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#000000',\n  },\n  whiteText: {\n    color: '#ffffff',\n  },\n  blackText: {\n    color: '#000000',\n  },\n})\n\nexport default AppPro\n")),(0,r.kt)("h3",{id:"understanding-flexbox"},"Understanding Flexbox"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Explanation of flexbox and its properties."),(0,r.kt)("li",{parentName:"ul"},"Clarifying ",(0,r.kt)("inlineCode",{parentName:"li"},"alignItems")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"justifyContent")," in React Native."),(0,r.kt)("li",{parentName:"ul"},"How these properties differ from web development.")),(0,r.kt)("h3",{id:"conclusion-and-assignment"},"Conclusion and Assignment"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Summarizing the main points covered."),(0,r.kt)("li",{parentName:"ul"},"Assignment: Write about React Native's ",(0,r.kt)("inlineCode",{parentName:"li"},"alignItems")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"justifyContent"),".")))}u.isMDXComponent=!0}}]);