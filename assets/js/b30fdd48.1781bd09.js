"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[322],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=m(a),g=r,d=c["".concat(p,".").concat(g)]||c[g]||u[g]||o;return a?n.createElement(d,i(i({ref:t},s),{},{components:a})):n.createElement(d,i({ref:t},s))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=g;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var m=2;m<o;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},1683:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:10},i="Image Component",l={unversionedId:"6 React Native/Section 2: Components/10 Image",id:"6 React Native/Section 2: Components/10 Image",title:"Image Component",description:"- Welcome back! The next core component we have is the image component.",source:"@site/docs/6 React Native/Section 2: Components/10 Image.md",sourceDirName:"6 React Native/Section 2: Components",slug:"/6 React Native/Section 2: Components/10 Image",permalink:"/fundamentals/6 React Native/Section 2: Components/10 Image",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Text Component",permalink:"/fundamentals/6 React Native/Section 2: Components/9 Text"},next:{title:"ScrollView Component",permalink:"/fundamentals/6 React Native/Section 2: Components/11 Scroll View"}},p={},m=[{value:"Rendering a Static Image",id:"rendering-a-static-image",level:4},{value:"Loading a Network Image",id:"loading-a-network-image",level:4},{value:"Setting a Background Image",id:"setting-a-background-image",level:4},{value:"Summary",id:"summary",level:4}],s={toc:m},c="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"image-component"},"Image Component"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Welcome back! The next core component we have is the image component.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The image component enables us to display various types of images including static images, network images, and images from the local disk such as the camera roll.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"React Native seamlessly translates the image component to platform-specific counterparts: UIImage view for iOS, ImageView for Android, and the image tag for the web.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Let's return to VS Code and understand more."))),(0,r.kt)("h4",{id:"rendering-a-static-image"},"Rendering a Static Image"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To begin, let's render a static image located in the assets folder.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Start by importing the image component from react native.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Next, import the image from the assets folder.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The const, let's call it logo image, and we use the required function from './assets/adaptive-icon.png'.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In the JSX code, invoke the image component and specify the source prop so image which is self-closing and we specify the source prop equal to logo image."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, Text, Image } from 'react-native'\nconst logoImage = require('./assets/adaptive-icon.png')\n\nfunction App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <Text>\n        <Text style={{ color: 'white' }}>Hello</Text> World\n      </Text>\n      <Image source={logoImage} />\n    </View>\n  )\n}\n\nexport default App\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If we save the file and check both the devices, we'll see that the image renders but appears too large.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To fix this, let's add a width and height to the image, so style prop with 300 and height 300."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, Text, Image } from 'react-native'\nconst logoImage = require('./assets/adaptive-icon.png')\n\nfunction App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <Text>\n        <Text style={{ color: 'white' }}>Hello</Text> World\n      </Text>\n      <<Image source={logoImage} style={{ width: 300, height: 300 }} />\n    </View>\n  )\n}\n\nexport default App\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Save the file and now we can see the image within the view much better.")),(0,r.kt)("h4",{id:"loading-a-network-image"},"Loading a Network Image"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Next, let's load an image by making a network request.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Duplicate the line with the image component and change the source prop to a remote image URI.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"A convenient place to find placeholder images is picsum.photos.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Scroll down and find the URL for a square image. (",(0,r.kt)("inlineCode",{parentName:"p"},"https://picsum/photos/200"),")")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Copy and paste the URL as a string into the source attribute.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Let's adjust the size to 300 by 300, (",(0,r.kt)("inlineCode",{parentName:"p"},"https://picsum/photos/300"),")"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, Text, Image } from 'react-native'\nconst logoImage = require('./assets/adaptive-icon.png')\n\nfunction App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <Text>\n        <Text style={{ color: 'white' }}>Hello</Text> World\n      </Text>\n      <Image source={logoImage} style={{ width: 300, height: 300 }} />\n      <Image source={'https://picsum.photos/200'} style={{ width: 300, height: 300 }} />\n    </View>\n  )\n}\n\nexport default App\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"When we save the file, we encounter a warning.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The warning is because the source prop expects a number but we have provided a string.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"When using logo image as a value we are actually passing in a number that references the image in the assets folder.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In order to specify a remote image as the source, we need to convert the value into an object and include a key called uri.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The string is set as the value for uri."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, Text, Image } from 'react-native'\nconst logoImage = require('./assets/adaptive-icon.png')\n\nfunction App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <Text>\n        <Text style={{ color: 'white' }}>Hello</Text> World\n      </Text>\n      <Image source={logoImage} style={{ width: 300, height: 300 }} />\n      <Image source={{ uri: 'https://picsum.photos/200' }} style={{ width: 300, height: 300 }} />\n    </View>\n  )\n}\n\nexport default App\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If we go back to our screens, we'll see the image being rendered.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"It's very important to note that ",(0,r.kt)("inlineCode",{parentName:"p"},"specifying width and height is mandatory for Network images."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For static images, React Native can infer the dimensions from the file data."))),(0,r.kt)("h4",{id:"setting-a-background-image"},"Setting a Background Image"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Finally, let's explore setting a background image for a view.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"React Native provides a second image component called ",(0,r.kt)("inlineCode",{parentName:"p"},"imageBackground")," for this purpose.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Import it at the top and then comment out the two image components in the JSX.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Instead, add the image background component opening and closing tags.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"We pass the source attribute is equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"logoImage")," which is the Adaptive icon.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"And then ,as children for the image background component, Let's add a text component that says IMAGE TEXT."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, Text, Image, ImageBackground } from 'react-native'\nconst logoImage = require('./assets/adaptive-icon.png')\n\nfunction App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <Text>\n        <Text style={{ color: 'white' }}>Hello</Text> World\n      </Text>\n      <Image source={logoImage} style={{ width: 300, height: 300 }} />\n      <Image source={{ uri: 'https://picsum.photos/200' }} style={{ width: 300, height: 300 }} />\n    </View>\n  )\n}\n\nexport default App\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Save the file and we can observe that the image appears in the background with the text overlaid on top.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, Text, Image, ImageBackground } from 'react-native'\nconst logoImage = require('./assets/adaptive-icon.png')\n\nfunction App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <Text>\n        <Text style={{ color: 'white' }}>Hello</Text> World\n      </Text>\n\n      {/* <Image source={logoImage} style={{ width: 300, height: 300 }} />\n      <Image source={{ uri: 'https://picsum.photos/200' }} style={{ width: 300, height: 300 }} /> */}\n\n      <ImageBackground source={logoImage}>\n        <Text>IMAGE TEXT</Text>\n      </ImageBackground>\n    </View>\n  )\n}\n\nexport default App\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If you want the image to occupy the entire available space, rely on the flex property.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Style Flex set to 1."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, Text, Image, ImageBackground } from 'react-native'\nconst logoImage = require('./assets/adaptive-icon.png')\n\nfunction App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <Text>\n        <Text style={{ color: 'white' }}>Hello</Text> World\n      </Text>\n\n      {/* <Image source={logoImage} style={{ width: 300, height: 300 }} />\n      <Image source={{ uri: 'https://picsum.photos/200' }} style={{ width: 300, height: 300 }} /> */}\n\n      <ImageBackground source={logoImage} style={{ flex: 1 }}>\n        <Text>IMAGE TEXT</Text>\n      </ImageBackground>\n    </View>\n  )\n}\n\nexport default App\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"We see the image now takes up the available space.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Let's not worry too much about centering the text for now, as I mentioned in every video we will cover styling and layouts in the upcoming sections."))),(0,r.kt)("h4",{id:"summary"},"Summary"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In summary, the image component is utilized to render images in React Native.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You can display static images, network images, and even local images from the camera roll (although that topic is beyond the scope of this video).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To render an image, import the image component from React Native and specify the source prop.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For remote images, ensure to use the URI option.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To render a background image, utilize the image background component nesting the desired content inside."))))}u.isMDXComponent=!0}}]);