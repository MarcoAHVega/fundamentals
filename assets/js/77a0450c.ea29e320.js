"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[3721],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(t),d=i,h=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return t?a.createElement(h,r(r({ref:n},c),{},{components:t})):a.createElement(h,r({ref:n},c))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[m]="string"==typeof e?e:i,r[1]=l;for(var s=2;s<o;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1186:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=t(7462),i=(t(7294),t(3905));const o={sidebar_position:4},r=void 0,l={unversionedId:"7 React 2023/PART 1: REACT FUNDAMENTALS/Section 5: Components, Props, and JSX",id:"7 React 2023/PART 1: REACT FUNDAMENTALS/Section 5: Components, Props, and JSX",title:"Section 5: Components, Props, and JSX",description:"---",source:"@site/docs/7 React 2023/PART 1: REACT FUNDAMENTALS/Section 5: Components, Props, and JSX.md",sourceDirName:"7 React 2023/PART 1: REACT FUNDAMENTALS",slug:"/7 React 2023/PART 1: REACT FUNDAMENTALS/Section 5: Components, Props, and JSX",permalink:"/fundamentals/7 React 2023/PART 1: REACT FUNDAMENTALS/Section 5: Components, Props, and JSX",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Section 4: Essential JavaScript for React",permalink:"/fundamentals/7 React 2023/PART 1: REACT FUNDAMENTALS/Section 4: Essential JavaScript for React"},next:{title:"Section 6: State, Events, and Forms",permalink:"/fundamentals/7 React 2023/PART 1: REACT FUNDAMENTALS/Section 6: State, Events, and Forms"}},p={},s=[{value:"- Section Overview",id:"--section-overview",level:2},{value:"Core Concepts of Building React Apps",id:"core-concepts-of-building-react-apps",level:3},{value:"Components",id:"components",level:3},{value:"Props",id:"props",level:3},{value:"JSX Syntax",id:"jsx-syntax",level:3},{value:"Sharing Data between Components",id:"sharing-data-between-components",level:3},{value:"Rendering Lists and Conditional Rendering",id:"rendering-lists-and-conditional-rendering",level:3},{value:"Building a Developer Profile Card",id:"building-a-developer-profile-card",level:3},{value:"<strong>- Rendering the Root Component and Strict Mode</strong>",id:"--rendering-the-root-component-and-strict-mode",level:2},{value:"Building the Pizza Menu Project",id:"building-the-pizza-menu-project",level:3},{value:"Importing React and ReactDOM",id:"importing-react-and-reactdom",level:3},{value:"Creating the App Component",id:"creating-the-app-component",level:3},{value:"Rendering the App Component",id:"rendering-the-app-component",level:3},{value:"Rendering in Older Versions of React",id:"rendering-in-older-versions-of-react",level:3},{value:"Activating Strict Mode",id:"activating-strict-mode",level:3},{value:"- Before We Start Coding: Debugging",id:"--before-we-start-coding-debugging",level:2},{value:"Checking if the Application is Running",id:"checking-if-the-application-is-running",level:3},{value:"Hard Reloading the Browser",id:"hard-reloading-the-browser",level:3},{value:"Keeping the Terminal and Dev Tools Open",id:"keeping-the-terminal-and-dev-tools-open",level:3},{value:"Understanding Error Messages",id:"understanding-error-messages",level:3},{value:"Working with ESLint",id:"working-with-eslint",level:3},{value:"Troubleshooting Extensions",id:"troubleshooting-extensions",level:3},{value:"Comparing Code for Bugs",id:"comparing-code-for-bugs",level:3},{value:"Handling Legacy Code",id:"handling-legacy-code",level:3},{value:"Conclusion",id:"conclusion",level:3},{value:"- Components as Building Blocks",id:"--components-as-building-blocks",level:2},{value:"- Creating And Reusing a Component",id:"--creating-and-reusing-a-component",level:2},{value:"Getting Starter Files",id:"getting-starter-files",level:3},{value:"Creating a New Component",id:"creating-a-new-component",level:3},{value:"React Component Rules",id:"react-component-rules",level:3},{value:"Including the New Component",id:"including-the-new-component",level:3},{value:"Handling Errors",id:"handling-errors",level:3},{value:"Nesting vs Declaring",id:"nesting-vs-declaring",level:3},{value:"Making Component More Interesting",id:"making-component-more-interesting",level:3},{value:"Reusing Components",id:"reusing-components",level:3},{value:"- What is JSX?",id:"--what-is-jsx",level:2},{value:"JSX and its Importance in React",id:"jsx-and-its-importance-in-react",level:3},{value:"JSX Conversion and React&#39;s Abstraction from the DOM",id:"jsx-conversion-and-reacts-abstraction-from-the-dom",level:3},{value:"- ## Creating More Components",id:"---creating-more-components",level:2},{value:"The header component",id:"the-header-component",level:3},{value:"The menu component",id:"the-menu-component",level:3},{value:"The footer component",id:"the-footer-component",level:3},{value:"We can use these components as if they were HTML elements, thanks to JSX.",id:"we-can-use-these-components-as-if-they-were-html-elements-thanks-to-jsx",level:3},{value:"- JavaScript Logic in Components",id:"--javascript-logic-in-components",level:2},{value:"Example",id:"example",level:3},{value:"- Separation of Concerns",id:"--separation-of-concerns",level:2},{value:"Understanding the reason behind React&#39;s design around components is crucial.",id:"understanding-the-reason-behind-reacts-design-around-components-is-crucial",level:3},{value:"- Styling React Applications",id:"--styling-react-applications",level:2},{value:"Inline styling",id:"inline-styling",level:3},{value:"External CSS",id:"external-css",level:3},{value:"CSS modules or styled components",id:"css-modules-or-styled-components",level:3},{value:"In conclusion",id:"in-conclusion",level:3},{value:"- Passing and Receiving Props",id:"--passing-and-receiving-props",level:2},{value:"Customizing pizza components",id:"customizing-pizza-components",level:3},{value:"The Power of props:",id:"the-power-of-props",level:3},{value:"- Props, Immutability, and One-Way Data Flow",id:"--props-immutability-and-one-way-data-flow",level:2},{value:"Props in React",id:"props-in-react",level:3},{value:"Understanding Data in React",id:"understanding-data-in-react",level:3},{value:"One-Way Data Flow",id:"one-way-data-flow",level:3},{value:"Passing Data to Parent Components",id:"passing-data-to-parent-components",level:3},{value:"- CHALLENGE ##1: Profile Card (v1)",id:"--challenge-1-profile-card-v1",level:2},{value:"- The Rules of JSX",id:"--the-rules-of-jsx",level:2},{value:"- Rendering Lists",id:"--rendering-lists",level:2},{value:"- Conditional Rendering With &amp;&amp;",id:"--conditional-rendering-with-",level:2},{value:"- Conditional Rendering With Ternaries",id:"--conditional-rendering-with-ternaries",level:2},{value:"- Conditional Rendering With Multiple Returns",id:"--conditional-rendering-with-multiple-returns",level:2},{value:"- Extracting JSX Into a New Component",id:"--extracting-jsx-into-a-new-component",level:2},{value:"- Destructuring Props",id:"--destructuring-props",level:2},{value:"- React Fragments",id:"--react-fragments",level:2},{value:"- Setting Classes and Text Conditionally",id:"--setting-classes-and-text-conditionally",level:2},{value:"- Section Summary",id:"--section-summary",level:2},{value:"- CHALLENGE ##2: Profile Card (v2)",id:"--challenge-2-profile-card-v2",level:2}],c={toc:s},m="wrapper";function u(e){let{components:n,...t}=e;return(0,i.kt)(m,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"--section-overview"},"- Section Overview"),(0,i.kt)("h3",{id:"core-concepts-of-building-react-apps"},"Core Concepts of Building React Apps"),(0,i.kt)("p",null,"In this section, we will explore three core concepts of building React apps."),(0,i.kt)("h3",{id:"components"},"Components"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Components are the building blocks of React applications.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"They serve as the foundation for creating UI elements.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Components can be reused and combined to create complex UI structures."))),(0,i.kt)("h3",{id:"props"},"Props"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Props allow data to be passed from a parent component to a child component.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"They provide a way to customize and configure components.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Props are read-only and should not be modified within the child component."))),(0,i.kt)("h3",{id:"jsx-syntax"},"JSX Syntax"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"JSX is a syntax extension for JavaScript that allows writing HTML-like code in JavaScript files.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"It simplifies the process of creating and rendering components.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"JSX elements can be used to define the structure and appearance of UI components."))),(0,i.kt)("h3",{id:"sharing-data-between-components"},"Sharing Data between Components"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Components can communicate and share data with each other using props.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Props enable the transfer of information from a parent component to its child components.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"This allows for dynamic and interactive rendering of data within the app."))),(0,i.kt)("h3",{id:"rendering-lists-and-conditional-rendering"},"Rendering Lists and Conditional Rendering"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React provides methods for rendering lists of items dynamically.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Conditional rendering allows components to display different content based on certain conditions.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"These techniques enhance the flexibility and versatility of React applications."))),(0,i.kt)("h3",{id:"building-a-developer-profile-card"},"Building a Developer Profile Card"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Throughout this section, we will build a developer profile card as a practical project.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"This project will serve as a hands-on exercise to apply the core concepts we learn.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"By building the profile card, you will gain experience in creating components, using props, and implementing JSX syntax.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"This project will provide a solid foundation for further React development."))),(0,i.kt)("h2",{id:"--rendering-the-root-component-and-strict-mode"},(0,i.kt)("strong",{parentName:"h2"},"- Rendering the Root Component and Strict Mode")),(0,i.kt)("h3",{id:"building-the-pizza-menu-project"},"Building the Pizza Menu Project"),(0,i.kt)("p",null,"In this section, we will build the Pizza Menu project from scratch."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Let's start by ",(0,i.kt)("inlineCode",{parentName:"p"},"deleting all files in the src folder"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Create a new file called ",(0,i.kt)("inlineCode",{parentName:"p"},"index.js")," in the src folder, as the entry point for our project."))),(0,i.kt)("h3",{id:"importing-react-and-reactdom"},"Importing React and ReactDOM"),(0,i.kt)("p",null,"In the index.js file, we need to import React and ReactDOM."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport ReactDOM from 'react-dom/client'\n")),(0,i.kt)("h3",{id:"creating-the-app-component"},"Creating the App Component"),(0,i.kt)("p",null,"Next, we will create the App component."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Define a function called App.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Return the JSX code ",(0,i.kt)("inlineCode",{parentName:"p"},"<h1>Hello React!</h1>")," ."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nfunction App() {\n  return <h1>Hello React!!</h1>\n}\n")),(0,i.kt)("h3",{id:"rendering-the-app-component"},"Rendering the App Component"),(0,i.kt)("p",null,"To render our app component, we need to select the root element and render the app inside it."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"document.getElementById"),' method to select the root element with the id "root".')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ReactDOM.createRoot")," method to create a root element.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Render the app component inside the root element using the ",(0,i.kt)("inlineCode",{parentName:"p"},"root.render")," method."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nfunction App() {\n  return <h1>Hello React!!</h1>\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(<App />)\n")),(0,i.kt)("h3",{id:"rendering-in-older-versions-of-react"},"Rendering in Older Versions of React"),(0,i.kt)("p",null,"If you are working with an older codebase before React v18, rendering works differently."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"React.render")," method to render the app component.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Make sure to import ",(0,i.kt)("inlineCode",{parentName:"p"},"react-dom/client")," for this method to work."))),(0,i.kt)("h3",{id:"activating-strict-mode"},"Activating Strict Mode"),(0,i.kt)("p",null,"We can activate strict mode by wrapping the app component with the ",(0,i.kt)("inlineCode",{parentName:"p"},"React.StrictMode")," component."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Use the ",(0,i.kt)("inlineCode",{parentName:"li"},"React.StrictMode")," component to wrap the app component.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nfunction App() {\n  return <h1>Hello React!!</h1>\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Strict mode helps catch bugs and outdated API usage during development.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"It renders all components twice to identify potential issues.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"It's a good practice to always activate strict mode when developing React applications."))),(0,i.kt)("h2",{id:"--before-we-start-coding-debugging"},"- Before We Start Coding: Debugging"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Techniques for dealing with errors and problems")),(0,i.kt)("h3",{id:"checking-if-the-application-is-running"},"Checking if the Application is Running"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Making sure the application is actually running")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Restarting the application if it's not updating"))),(0,i.kt)("h3",{id:"hard-reloading-the-browser"},"Hard Reloading the Browser"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Sometimes a hard reload is necessary to fix issues")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Clicking the reloading button in the browser"))),(0,i.kt)("h3",{id:"keeping-the-terminal-and-dev-tools-open"},"Keeping the Terminal and Dev Tools Open"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Keeping the terminal and dev tools open at all times")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Monitoring for unexpected errors in the console"))),(0,i.kt)("h3",{id:"understanding-error-messages"},"Understanding Error Messages"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React's error messages and error overlays")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Using error messages to identify and fix issues")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Googling error messages for solutions"))),(0,i.kt)("h3",{id:"working-with-eslint"},"Working with ESLint"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Using ESLint to catch potential issues")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Working with ESLint warnings and errors")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Checking the Problems tab for ESLint issues"))),(0,i.kt)("h3",{id:"troubleshooting-extensions"},"Troubleshooting Extensions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Issues with the Prettier and ESLint extensions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Checking the Output tab for extension errors"))),(0,i.kt)("h3",{id:"comparing-code-for-bugs"},"Comparing Code for Bugs"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Comparing code with the final project code")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Identifying and fixing bugs in your code"))),(0,i.kt)("h3",{id:"handling-legacy-code"},"Handling Legacy Code"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Handling older versions of React")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Making necessary adjustments for older code bases"))),(0,i.kt)("h3",{id:"conclusion"},"Conclusion"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Tips for dealing with problems in React applications")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Importance of debugging skills in the coding process"))),(0,i.kt)("h2",{id:"--components-as-building-blocks"},"- Components as Building Blocks"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React is all about components.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Components are the most fundamental concept in React.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React applications are made entirely out of components.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Components are the building blocks of any user interface in React.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React renders a view for each component, which makes up the user interface.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Each component has its own data, JavaScript logic, and appearance.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Components describe how they work and what they look like.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Complex UIs in React are built by combining multiple components.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Components can be nested inside each other.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Nesting components and component reusability are key aspects of using components in React.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Components can be easily reused by passing different data using props.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Breaking a design into components is a crucial skill in React development"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A component tree shows the hierarchy and relationships between components.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Parent and child components are terms used in React to describe relationships.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A component tree helps understand how components are nested and relate to each other."))),(0,i.kt)("h2",{id:"--creating-and-reusing-a-component"},"- Creating And Reusing a Component"),(0,i.kt)("p",null,"Let's continue building our application by creating a brand new component and by taking a first look at reusability."),(0,i.kt)("h3",{id:"getting-starter-files"},"Getting Starter Files"),(0,i.kt)("p",null,"First, let's get the starter files for this project from the files that we downloaded from GitHub."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jonasschmedtmann/ultimate-react-course/tree/main/03-pizza-menu/starter"},"https://github.com/jonasschmedtmann/ultimate-react-course/tree/main/03-pizza-menu/starter")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In the starter folder, take these three files , ",(0,i.kt)("inlineCode",{parentName:"p"},"index.css, data.js, pizzas folder"),", copy and then go into your project folder.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Copy them for now into the ",(0,i.kt)("inlineCode",{parentName:"p"},"public")," folder."))),(0,i.kt)("h3",{id:"creating-a-new-component"},"Creating a New Component"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In React we write new components using functions.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Create a function called Pizza because it will contain some data about a pizza.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For now, we have no parameters to this function and then the function body."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nfunction App() {\n  return <h1>Hello React!!</h1>\n}\n\nfunction Pizza() {\n  return <h2>Pizza</h2>\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n")),(0,i.kt)("h3",{id:"react-component-rules"},"React Component Rules"),(0,i.kt)("p",null,"In React, there are two important rules when we write components as functions."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"First, the function name ",(0,i.kt)("inlineCode",{parentName:"p"},"needs to start with an uppercase letter"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Second, the function needs to return some markup, usually in the form of JSX."))),(0,i.kt)("h3",{id:"including-the-new-component"},"Including the New Component"),(0,i.kt)("p",null,"Nothing will appear in the user interface because we're not including this new component anywhere."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We can use our component just like this.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nfunction App() {\n  return <h1>Hello React!!</h1><Pizza/>\n}\n\nfunction Pizza() {\n  return <h2>Pizza</h2>\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n")),(0,i.kt)("h3",{id:"handling-errors"},"Handling Errors"),(0,i.kt)("p",null,"This however will give us an error because each component can only return exactly one element, not two elements as we have here."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Wrap this into a div.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nfunction App() {\n  return (\n    <div>\n      <h1>Hello React!!</h1>\n      <Pizza />\n    </div>\n  )\n}\n\nfunction Pizza() {\n  return <h2>Pizza</h2>\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Now we get our pizza in the UI because we now nested this pizza component inside this app component.")),(0,i.kt)("h3",{id:"nesting-vs-declaring"},"Nesting vs Declaring"),(0,i.kt)("p",null,"By nesting, we mean that we basically used or called this component here inside app."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"What's very important to notice is that by nesting, we do not mean that we write a function inside this other function.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"When we say nesting components, what we mean is that we call, so we include one component into another."))),(0,i.kt)("h3",{id:"making-component-more-interesting"},"Making Component More Interesting"),(0,i.kt)("p",null,"Let's now make this pizza component here just a little bit more interesting by using our starter data."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Open up data.js and select everything, then copy it and paste it here.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nfunction App() {\n  return (\n    <div>\n      <h1>Hello React!!</h1>\n      <Pizza />\n    </div>\n  )\n}\n\nfunction Pizza() {\n  return <h2>Pizza</h2>\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n")),(0,i.kt)("h3",{id:"reusing-components"},"Reusing Components"),(0,i.kt)("p",null,"We have this component here and now let's talk about the idea of reusing this component."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"To reuse this component, we basically use it several times"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"That now this piece of UI, which is the pizza component, will be included three times."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nfunction App() {\n  return (\n    <div>\n      <h1>Hello React!!</h1>\n      <Pizza />\n      <Pizza />\n      <Pizza />\n    </div>\n  )\n}\n\nfunction Pizza() {\n  return (\n    <div>\n      <img src='pizzas/spinaci.jpg' alt='Pizza spinaci' />\n      <h2>Pizza Spinaci</h2>\n      <p>Tomato, mozarella, spinach, and ricotta cheese</p>\n    </div>\n  )\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n)\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The data here in all of them is now the same because we didn't customize that data yet, but we will do that later.")),(0,i.kt)("h2",{id:"--what-is-jsx"},"- What is JSX?"),(0,i.kt)("h3",{id:"jsx-and-its-importance-in-react"},"JSX and its Importance in React"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"JSX is a declarative syntax used in React to describe the appearance and behavior of components based on their data and logic.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"JSX allows us to combine HTML, CSS, and JavaScript into one block of code.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"JSX is an extension of JavaScript and can be converted to JavaScript using tools like Babel.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Browsers do not understand JSX, so it needs to be converted to nested ",(0,i.kt)("inlineCode",{parentName:"p"},"React.createElement")," function calls, which create the HTML elements.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React can be used without JSX, but JSX makes the code more readable and easier to understand.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"JSX follows a declarative approach, where we describe what the UI should look like based on the current data (props and state) in the component.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In the declarative approach, we use JSX to describe the UI without manipulating the DOM directly.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React automatically synchronizes the UI with the data, eliminating the need for manual DOM manipulation.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The declarative approach has advantages over the imperative approach, such as easier code maintenance and better scalability."))),(0,i.kt)("h3",{id:"jsx-conversion-and-reacts-abstraction-from-the-dom"},"JSX Conversion and React's Abstraction from the DOM"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"JSX is converted to nested ",(0,i.kt)("inlineCode",{parentName:"p"},"React.createElement")," function calls to create the HTML elements.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React acts as a huge abstraction layer between developers and the DOM, allowing us to work with the UI as a reflection of the current data.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The declarative approach in React allows us to focus on describing the UI based on the data, without specifying step-by-step instructions for DOM manipulation.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React automatically handles the synchronization between the UI and the data, providing many advantages in terms of code simplicity and maintainability."))),(0,i.kt)("h2",{id:"---creating-more-components"},"- ## Creating More Components"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We will now create additional components to further build our application using JSX.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We will create components for the ",(0,i.kt)("inlineCode",{parentName:"p"},"header"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"menu"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"footer"),"."))),(0,i.kt)("h3",{id:"the-header-component"},"The header component"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The header component will display the name of the pizzeria.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Header() {\n  return <h1>Fast React Pizza Co.</h1>\n}\n")),(0,i.kt)("h3",{id:"the-menu-component"},"The menu component"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The menu component will include the menu items, specifically the pizzas.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Menu() {\n  return (\n    <div>\n      <h2>Menu</h2>\n      <Pizza />\n      <Pizza />\n      <Pizza />\n      <Pizza />\n    </div>\n  )\n}\n")),(0,i.kt)("h3",{id:"the-footer-component"},"The footer component"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The footer component will indicate that the restaurant is currently open.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Footer() {\n  return <footer>{new Date().toLocaleTimeString()}. We're currently open!</footer>\n}\n")),(0,i.kt)("h3",{id:"we-can-use-these-components-as-if-they-were-html-elements-thanks-to-jsx"},"We can use these components as if they were HTML elements, thanks to JSX."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport ReactDOM from 'react-dom/client\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Menu />\n      <Footer />\n    </div>\n  )\n}\n\nfunction Header() {\n  return <h1>Fast React Pizza Co.</h1>\n}\n\nfunction Menu() {\n  return (\n    <div>\n      <h2>Menu</h2>\n      <Pizza />\n      <Pizza />\n      <Pizza />\n      <Pizza />\n    </div>\n  )\n}\n\nfunction Footer() {\n  return <footer>{new Date().toLocaleTimeString()}. We're currently open!</footer>\n}\n\nfunction Pizza() {\n  return (\n    <div>\n      <img src='pizzas/spinaci.jpg' alt='Pizza spinaci' />\n      <h2>Pizza Spinaci</h2>\n      <p>Tomato, mozarella, spinach, and ricotta cheese</p>\n    </div>\n  )\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We can nest components within each other to create complex user interfaces.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The app component is the main component that contains the header, menu, and footer components.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The pizza component will be reused multiple times within the menu component to display each pizza.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"By combining small components into bigger ones, we can build complex user interfaces.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We can also use JavaScript within JSX to dynamically display content, such as the current time in the footer component.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"JSX allows us to write code that combines HTML, CSS, and JavaScript in a single block."))),(0,i.kt)("h2",{id:"--javascript-logic-in-components"},"- JavaScript Logic in Components"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Components in React are JavaScript functions, allowing us to write any JavaScript logic inside them.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The logic is executed as soon as the component is initialized."))),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We can create variables and perform operations within the component.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For example, we can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"getHours")," method of the ",(0,i.kt)("inlineCode",{parentName:"p"},"Date")," object to retrieve the current hour.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The console can be used to log the value of variables, providing visibility into the logic."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Footer() {\n  const hour = new Date().getHours()\n  console.log(hour)\n\n  return <footer>{new Date().toLocaleTimeString()}. We're currently open!</footer>\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We can use conditional statements, such as an ",(0,i.kt)("inlineCode",{parentName:"p"},"if-else")," statement, to execute different code based on certain conditions.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"alert")," function can be used to display messages to the user."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Footer() {\n  const hour = new Date().getHours()\n  const openHour = 12\n  const closeHour = 20\n\n  if (hour >= openHour && hour <= closeHour) alert('We are currently open!')\n  else alert('Sorry we are closed')\n\n  return <footer>{new Date().toLocaleTimeString()}. We're currently open!</footer>\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"It is important to note that the ",(0,i.kt)("inlineCode",{parentName:"p"},"alert")," function blocks JavaScript execution until the user interacts with the alert.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"While this demonstration shows the usage of JavaScript logic in components, it is not recommended to use blocking functions like ",(0,i.kt)("inlineCode",{parentName:"p"},"alert")," in real applications.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We can create variables to store boolean values based on certain conditions, allowing us to determine if something is true or false."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Menu />\n      <Footer />\n    </div>\n  )\n}\n\nfunction Header() {\n  return <h1>Fast React Pizza Co.</h1>\n}\n\nfunction Menu() {\n  return (\n    <div>\n      <h2>Menu</h2>\n      <Pizza />\n      <Pizza />\n      <Pizza />\n      <Pizza />\n    </div>\n  )\n}\n\nfunction Footer() {\n  const hour = new Date().getHours()\n  const openHour = 12\n  const closeHour = 20\n\n  const isOpen = hour >= openHour && hour <= closeHour\n\n  console.log(isOpen)\n\n  // if () alert('We are currently open!')\n  // else alert('Sorry we are closed')\n\n  return <footer>{new Date().toLocaleTimeString()}. We're currently open!</footer>\n}\n\nfunction Pizza() {\n  return (\n    <div>\n      <img src='pizzas/spinaci.jpg' alt='Pizza spinaci' />\n      <h2>Pizza Spinaci</h2>\n      <p>Tomato, mozarella, spinach, and ricotta cheese</p>\n    </div>\n  )\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The console can be used to verify the value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"isOpen")," variable.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"By using JavaScript logic in components, we can incorporate dynamic behavior and make our components more interactive."))),(0,i.kt)("h2",{id:"--separation-of-concerns"},"- Separation of Concerns"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"At this point, we have used JSX to describe the appearance of some components and have also used JavaScript inside them.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React combines HTML, CSS, and JavaScript into one single block of code, which might raise the question of why React introduced this concept."))),(0,i.kt)("h3",{id:"understanding-the-reason-behind-reacts-design-around-components-is-crucial"},"Understanding the reason behind React's design around components is crucial."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Let's delve into this topic from the beginning, starting with the rise of interactive single-page applications.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In the past, we had separate files for HTML, JavaScript, and CSS, following the traditional separation of concerns with one technology per file.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"However, as pages became more interactive and transformed into single-page applications, JavaScript started to play a significant role in determining the user interface and content.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"JavaScript became more responsible for the HTML"),", resulting in tight coupling between JavaScript logic and HTML presentation.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"In modern web applications, React components and JSX emerged as a solution to address this tight coupling between logic and UI"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React components encapsulate the data, logic, and appearance of a specific UI element, aligning with the tight coupling between logic and UI.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"This fundamental reason is why React revolves around components, a concept shared by most modern front-end frameworks.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Within a React component, JavaScript and HTML markup coexist seamlessly.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Components contain JavaScript logic, JSX, and even more JavaScript within JSX, demonstrating how content and logic are closely intertwined.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Despite initial resistance to JSX and the departure from traditional separation of concerns, React does have separation of concerns.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React's separation of concerns is different from the traditional approach, focusing on one concern per component rather than per file.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Each component is dedicated to one piece of the UI, while HTML, CSS, and JavaScript remain intertwined within the component.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React's approach, although initially unfamiliar, has proven to be highly effective by consolidating all the information about a component in one place.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In conclusion, React's separation of concerns is achieved through components, with each component dedicated to one aspect of the UI.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"This lecture aimed to provide additional fundamental React knowledge, enhancing the understanding of React's separation of concerns."))),(0,i.kt)("h2",{id:"--styling-react-applications"},"- Styling React Applications"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React components can include CSS styles to define their appearance.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React does not impose any specific way of styling components and allows developers to choose from various options.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Some of the popular styling options in React include inline styling, external CSS files, CSS modules, styled components, and frameworks like Tailwind CSS.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"This lecture will focus on inline styling and external CSS files, but other options will be covered later."))),(0,i.kt)("h3",{id:"inline-styling"},"Inline styling"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Inline styling in JSX is done using a JavaScript object, where ",(0,i.kt)("inlineCode",{parentName:"p"},"the style attribute contains the object"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"So if we need to write a JavaScript object we first need to enter JavaScript mode. So that's what the curly braces are for.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"But then we need another set of curly braces. And so that is again, to now create an object."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Header() {\n  return <h1 style={{ color: 'red' }}>Fast React Pizza Co.</h1>\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"CSS property names in JSX follow the camel case notation")," instead of hyphen-separated format used in regular CSS.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Inline styles are defined using JavaScript objects, and ",(0,i.kt)("inlineCode",{parentName:"p"},"the values are typically strings"),"."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Header() {\n  return (\n    <h1 style={{ color: 'red', fontSize: '48px', textTransform: 'Uppercase' }}>\n      Fast React Pizza Co.\n    </h1>\n  )\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Because again, this is in the end just a JavaScript object and you could even extract this out here.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Header() {\n  const style = {\n    color: 'red',\n    fontSize: '48px',\n    textTransform: 'Uppercase',\n  }\n\n  return <h1 style={style}>Fast React Pizza Co.</h1>\n}\n")),(0,i.kt)("h3",{id:"external-css"},"External CSS"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"External CSS files can be imported into React components using the import statement.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Webpack takes care of injecting the styles from the CSS file into the application."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport './index.css'\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Class names from the CSS file can be added to JSX elements using the ",(0,i.kt)("inlineCode",{parentName:"p"},"className")," attribute instead of the regular ",(0,i.kt)("inlineCode",{parentName:"p"},"class")," attribute.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"className")," attribute is used to avoid conflicts with the reserved keyword ",(0,i.kt)("inlineCode",{parentName:"p"},"class")," in JavaScript."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport './index.css'\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Header />\n      <Menu />\n      <Footer />\n    </div>\n  )\n}\n\nfunction Header() {\n  // const style = {\n  //   color: 'red',\n  //   fontSize: '48px',\n  //   textTransform: 'Uppercase',\n  // }\n  const style = {}\n\n  return (\n    <header className='header'>\n      <h1 style={style}>Fast React Pizza Co.</h1>\n    </header>\n  )\n}\n\nfunction Menu() {\n  return (\n    <main className='menu'>\n      <h2>Our Menu</h2>\n      <Pizza />\n      <Pizza />\n      <Pizza />\n      <Pizza />\n    </main>\n  )\n}\n\nfunction Footer() {\n  const hour = new Date().getHours()\n  const openHour = 12\n  const closeHour = 20\n  const isOpen = hour >= openHour && hour <= closeHour\n\n  console.log(isOpen)\n\n  // if () alert('We are currently open!')\n  // else alert('Sorry we are closed')\n\n  return (\n    <footer className='footer'>{new Date().toLocaleTimeString()}. We're currently open!</footer>\n  )\n}\n\nfunction Pizza() {\n  return (\n    <div>\n      <img src='pizzas/spinaci.jpg' alt='Pizza spinaci' />\n      <h3>Pizza Spinaci</h3>\n      <p>Tomato, mozarella, spinach, and ricotta cheese</p>\n    </div>\n  )\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"External CSS styles")," are applied globally, affecting all components in the application.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Global styles can be overridden by adding specific class names to JSX elements.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"It is important to note that global styles can result in conflicts and unintended styling effects."))),(0,i.kt)("h3",{id:"css-modules-or-styled-components"},"CSS modules or styled components"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For more scoped styling, other techniques like CSS modules or styled components can be used.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"CSS modules")," allow for local scoping of styles by generating unique class names for each component.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Styled components")," provide a way to write CSS directly in JavaScript, making it easier to manage component-specific styles."))),(0,i.kt)("h3",{id:"in-conclusion"},"In conclusion"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"React provides flexibility in choosing how to style components, including options like inline styling and external CSS files.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Global styles can be imported and applied to components, but conflicts and unintended effects should be considered.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"More advanced techniques like CSS modules and styled components offer scoped styling options for better code organization."))),(0,i.kt)("h2",{id:"--passing-and-receiving-props"},"- Passing and Receiving Props"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Props are a fundamental React concept for passing data between components.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Props act as a communication channel between parent component, (in this case ",(0,i.kt)("inlineCode",{parentName:"p"},"Menu"),") and child components (",(0,i.kt)("inlineCode",{parentName:"p"},"Pizza"),")."))),(0,i.kt)("h3",{id:"customizing-pizza-components"},"Customizing pizza components"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We will customize each pizza component by passing different data using props.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Step 1: Pass props into the component as normal attributes. (",(0,i.kt)("inlineCode",{parentName:"p"},"from the parent to the child"),")"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Menu() {\n  return (\n    <main className='menu'>\n      <h2>Our Menu</h2>\n      <Pizza\n        name='Pizza Spinaci'\n        ingredients='Tomato, mozarella, spinach, and ricotta cheese'\n        photoName='pizzas/spinaci.jpg'\n      />\n    </main>\n  )\n}\n\nfunction Pizza() {\n  return (\n    <div>\n      <img src='pizzas/spinaci.jpg' alt='Pizza spinaci' />\n      <h3>Pizza Spinaci</h3>\n      <p>Tomato, mozarella, spinach, and ricotta cheese</p>\n    </div>\n  )\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Step 2: Receive ",(0,i.kt)("inlineCode",{parentName:"p"},"props"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"in the child component by accepting a props parameter. (",(0,i.kt)("inlineCode",{parentName:"p"},"function Pizza(props)"),")"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Menu() {\n  return (\n    <main className='menu'>\n      <h2>Our Menu</h2>\n      <Pizza\n        name='Pizza Spinaci'\n        ingredients='Tomato, mozarella, spinach, and ricotta cheese'\n        photoName='pizzas/spinaci.jpg'\n        price='10'\n      />\n    </main>\n  )\n}\n\nfunction Pizza(props) {\n  return (\n    <div>\n      <img src='pizzas/spinaci.jpg' alt='Pizza spinaci' />\n      <h3>Pizza Spinaci</h3>\n      <p>Tomato, mozarella, spinach, and ricotta cheese</p>\n    </div>\n  )\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Step 3: Utilizing props")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Replace values in the component with props values using JavaScript mode. (",(0,i.kt)("inlineCode",{parentName:"p"},"<img src={props.photoName} alt={props.name} />")," etc)"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Menu() {\n  return (\n    <main className='menu'>\n      <h2>Our Menu</h2>\n      <Pizza\n        name='Pizza Spinaci'\n        ingredients='Tomato, mozarella, spinach, and ricotta cheese'\n        photoName='pizzas/spinaci.jpg'\n        price='10'\n      />\n    </main>\n  )\n}\n\nfunction Pizza(props) {\n  return (\n    <div>\n      <img src={props.photoName} alt={props.name} />\n      <h3>{props.name}</h3>\n      <p>{props.ingredients}</p>\n    </div>\n  )\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"step 4: Reusing and configuring components")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We can reuse and configure components to display unique data. (",(0,i.kt)("inlineCode",{parentName:"p"},"Second Pizza component"),")"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Menu() {\n  return (\n    <main className='menu'>\n      <h2>Our Menu</h2>\n      <Pizza\n        name='Pizza Spinaci'\n        ingredients='Tomato, mozarella, spinach, and ricotta cheese'\n        photoName='pizzas/spinaci.jpg'\n        price='10'\n      />\n      <Pizza\n        name='Pizza Funghi'\n        ingredients='Tomato, mushroom, onion'\n        photoName='pizzas/funghi.jpg'\n        price='12'\n      />\n    </main>\n  )\n}\n\nfunction Pizza(props) {\n  return (\n    <div>\n      <img src={props.photoName} alt={props.name} />\n      <h3>{props.name}</h3>\n      <p>{props.ingredients}</p>\n    </div>\n  )\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Step 5: Improving the pizza component")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Add className (",(0,i.kt)("inlineCode",{parentName:"p"},"<div className='pizza'>"),") , div (for h3,p and span), and span (",(0,i.kt)("inlineCode",{parentName:"p"},"<span>{props.price}</span>"),") to enhance the component's appearance."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Menu() {\n  return (\n    <main className='menu'>\n      <h2>Our Menu</h2>\n      <Pizza\n        name='Pizza Spinaci'\n        ingredients='Tomato, mozarella, spinach, and ricotta cheese'\n        photoName='pizzas/spinaci.jpg'\n        price='10'\n      />\n      <Pizza\n        name='Pizza Funghi'\n        ingredients='Tomato, mushroom, onion'\n        photoName='pizzas/funghi.jpg'\n        price='12'\n      />\n    </main>\n  )\n}\n\nfunction Pizza(props) {\n  return (\n    <div className='pizza'>\n      <img src={props.photoName} alt={props.name} />\n      <div>\n        <h3>{props.name}</h3>\n        <p>{props.ingredients}</p>\n        <span>{props.price}</span>\n      </div>\n    </div>\n  )\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Step 6:Handling non-string props")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Use JavaScript mode to pass non-string values as props.(",(0,i.kt)("inlineCode",{parentName:"p"},"price={12}"),")"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Menu() {\n  return (\n    <main className='menu'>\n      <h2>Our Menu</h2>\n      <Pizza\n        name='Pizza Spinaci'\n        ingredients='Tomato, mozarella, spinach, and ricotta cheese'\n        photoName='pizzas/spinaci.jpg'\n        price={10}\n      />\n      <Pizza\n        name='Pizza Funghi'\n        ingredients='Tomato, mushroom, onion'\n        photoName='pizzas/funghi.jpg'\n        price={12}\n      />\n    </main>\n  )\n}\n\nfunction Pizza(props) {\n  return (\n    <div className='pizza'>\n      <img src={props.photoName} alt={props.name} />\n      <div>\n        <h3>{props.name}</h3>\n        <p>{props.ingredients}</p>\n        <span>{props.price + 3}</span>\n      </div>\n    </div>\n  )\n}\n")),(0,i.kt)("h3",{id:"the-power-of-props"},"The Power of props:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Props can be anything, not just strings or numbers. They ",(0,i.kt)("inlineCode",{parentName:"p"},"can include arrays, objects, or even other React components"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"So props is really really powerful and really one of the most fundamental things in React"))),(0,i.kt)("h2",{id:"--props-immutability-and-one-way-data-flow"},"- Props, Immutability, and One-Way Data Flow"),(0,i.kt)("h3",{id:"props-in-react"},"Props in React"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Used to pass data from parent components to child components."),(0,i.kt)("li",{parentName:"ul"},"Facilitate communication between parent and child components."),(0,i.kt)("li",{parentName:"ul"},"Essential for configuring and customizing components."),(0,i.kt)("li",{parentName:"ul"},"Similar to arguments passed to JavaScript functions."),(0,i.kt)("li",{parentName:"ul"},"Can pass any type of value as a prop.")),(0,i.kt)("h3",{id:"understanding-data-in-react"},"Understanding Data in React"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"React uses data from props and state to render components."),(0,i.kt)("li",{parentName:"ul"},"State: Internal component data that can be updated by the component."),(0,i.kt)("li",{parentName:"ul"},"Props: Data coming from the parent component, read-only and immutable."),(0,i.kt)("li",{parentName:"ul"},"React enforces immutability to optimize the application and avoid bugs.")),(0,i.kt)("h3",{id:"one-way-data-flow"},"One-Way Data Flow"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"React follows a one-way data flow."),(0,i.kt)("li",{parentName:"ul"},"Data can only be passed from parent to child components using props."),(0,i.kt)("li",{parentName:"ul"},"Data flows from top to bottom in the component tree."),(0,i.kt)("li",{parentName:"ul"},"Provides predictability, easier understanding, and debugging."),(0,i.kt)("li",{parentName:"ul"},"Two-way data binding (used in other frameworks) is less efficient.")),(0,i.kt)("h3",{id:"passing-data-to-parent-components"},"Passing Data to Parent Components"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"There is a clever way to pass data from child to parent components."),(0,i.kt)("li",{parentName:"ul"},"Will be covered in the next section."),(0,i.kt)("li",{parentName:"ul"},"Learning React involves multiple concepts, but everything will fall into place with time.")),(0,i.kt)("h2",{id:"--challenge-1-profile-card-v1"},"- CHALLENGE ##1: Profile Card (v1)"),(0,i.kt)("h2",{id:"--the-rules-of-jsx"},"- The Rules of JSX"),(0,i.kt)("h2",{id:"--rendering-lists"},"- Rendering Lists"),(0,i.kt)("h2",{id:"--conditional-rendering-with-"},"- Conditional Rendering With &&"),(0,i.kt)("h2",{id:"--conditional-rendering-with-ternaries"},"- Conditional Rendering With Ternaries"),(0,i.kt)("h2",{id:"--conditional-rendering-with-multiple-returns"},"- Conditional Rendering With Multiple Returns"),(0,i.kt)("h2",{id:"--extracting-jsx-into-a-new-component"},"- Extracting JSX Into a New Component"),(0,i.kt)("h2",{id:"--destructuring-props"},"- Destructuring Props"),(0,i.kt)("h2",{id:"--react-fragments"},"- React Fragments"),(0,i.kt)("h2",{id:"--setting-classes-and-text-conditionally"},"- Setting Classes and Text Conditionally"),(0,i.kt)("h2",{id:"--section-summary"},"- Section Summary"),(0,i.kt)("h2",{id:"--challenge-2-profile-card-v2"},"- CHALLENGE ##2: Profile Card (v2)"))}u.isMDXComponent=!0}}]);