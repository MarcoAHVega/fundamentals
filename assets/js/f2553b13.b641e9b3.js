"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[8503],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,f=c["".concat(l,".").concat(d)]||c[d]||m[d]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4893:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:57},i="Inputs and Forms",s={unversionedId:"6 React Native Expo CLI/Section 8: Inputs and Forms/57 Inputs and Forms",id:"6 React Native Expo CLI/Section 8: Inputs and Forms/57 Inputs and Forms",title:"Inputs and Forms",description:"Inputs and Forms",source:"@site/docs/6 React Native Expo CLI/Section 8: Inputs and Forms/57 Inputs and Forms.md",sourceDirName:"6 React Native Expo CLI/Section 8: Inputs and Forms",slug:"/6 React Native Expo CLI/Section 8: Inputs and Forms/57 Inputs and Forms",permalink:"/fundamentals/6 React Native Expo CLI/Section 8: Inputs and Forms/57 Inputs and Forms",draft:!1,tags:[],version:"current",sidebarPosition:57,frontMatter:{sidebar_position:57},sidebar:"tutorialSidebar",previous:{title:"Section 8: Inputs and Forms ",permalink:"/fundamentals/category/section-8-inputs-and-forms-"},next:{title:"TextInput",permalink:"/fundamentals/6 React Native Expo CLI/Section 8: Inputs and Forms/58 TextInput"}},l={},p=[{value:"<strong>Inputs and Forms</strong>",id:"inputs-and-forms-1",level:2},{value:"<strong>=&gt;</strong> Intro",id:"-intro",level:3},{value:"<strong>=&gt;</strong> Input Options in React Native",id:"-input-options-in-react-native",level:3},{value:"<strong>=&gt;</strong> Expo Expands Input Options",id:"-expo-expands-input-options",level:3},{value:"<strong>=&gt;</strong> Challenges in React Native Forms",id:"-challenges-in-react-native-forms",level:3},{value:"<strong>=&gt;</strong> Future Topics",id:"-future-topics",level:3},{value:"<strong>=&gt;</strong> Project Setup",id:"-project-setup",level:3},{value:"<strong>=&gt;</strong> Next Video",id:"-next-video",level:3}],u={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"inputs-and-forms"},"Inputs and Forms"),(0,a.kt)("h2",{id:"inputs-and-forms-1"},(0,a.kt)("strong",{parentName:"h2"},"Inputs and Forms")),(0,a.kt)("blockquote",null),(0,a.kt)("h3",{id:"-intro"},(0,a.kt)("strong",{parentName:"h3"},"=>")," Intro"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Welcome back to the eighth section of our course, where we will focus on inputs and fonts in React Native.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"In this introductory video, we will clarify some key aspects and set expectations for what we are about to learn."))),(0,a.kt)("h3",{id:"-input-options-in-react-native"},(0,a.kt)("strong",{parentName:"h3"},"=>")," Input Options in React Native"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"In web applications, we have numerous HTML elements for capturing user input, such as input fields, text areas, drop-down menus, checkboxes, radio buttons, and more.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"However, in React Native, our input options are more limited. As of this recording, the core React Native library provides only two input components: Text Input and Switch. These will be our primary focus in this section."))),(0,a.kt)("h3",{id:"-expo-expands-input-options"},(0,a.kt)("strong",{parentName:"h3"},"=>")," Expo Expands Input Options"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Expo, an additional toolkit for React Native, offers more input components like checkboxes and date pickers as part of the Expo SDK. We will explore these in a separate section.")),(0,a.kt)("h3",{id:"-challenges-in-react-native-forms"},(0,a.kt)("strong",{parentName:"h3"},"=>")," Challenges in React Native Forms"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Working with forms in React Native presents challenges. We typically focus on four key aspects:")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Managing form state."),(0,a.kt)("li",{parentName:"ol"},"Handling form validation."),(0,a.kt)("li",{parentName:"ol"},"Displaying validation messages."),(0,a.kt)("li",{parentName:"ol"},"Submitting form data.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"While libraries like React Hook Form can streamline these steps, we will learn how to handle forms manually without external dependencies in this section.")),(0,a.kt)("h3",{id:"-future-topics"},(0,a.kt)("strong",{parentName:"h3"},"=>")," Future Topics"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In the future, we might dedicate an entire section to combining React Native with React Hook Form, so stay tuned for that.")),(0,a.kt)("h3",{id:"-project-setup"},(0,a.kt)("strong",{parentName:"h3"},"=>")," Project Setup"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'To follow along, I\'ve created a new Expo project named "React Native Forms." You can create a similar project using the command ',(0,a.kt)("inlineCode",{parentName:"li"},"npx create-extra-app"),' followed by the project name, which is "RN Forms."')),(0,a.kt)("h3",{id:"-next-video"},(0,a.kt)("strong",{parentName:"h3"},"=>")," Next Video"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"With our project set up, join me in the next video, where we will learn about the Text Input component in React Native.")))}m.isMDXComponent=!0}}]);