"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[1772],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),f=a,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||i;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9525:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:39},o="Dynamic User Interfaces",l={unversionedId:"6 React Native Expo CLI/Section 5: Dynamic User Interfaces/39 Dynamic User Interfaces",id:"6 React Native Expo CLI/Section 5: Dynamic User Interfaces/39 Dynamic User Interfaces",title:"Dynamic User Interfaces",description:"=> Intro",source:"@site/docs/6 React Native Expo CLI/Section 5: Dynamic User Interfaces/39 Dynamic User Interfaces.md",sourceDirName:"6 React Native Expo CLI/Section 5: Dynamic User Interfaces",slug:"/6 React Native Expo CLI/Section 5: Dynamic User Interfaces/39 Dynamic User Interfaces",permalink:"/fundamentals/6 React Native Expo CLI/Section 5: Dynamic User Interfaces/39 Dynamic User Interfaces",draft:!1,tags:[],version:"current",sidebarPosition:39,frontMatter:{sidebar_position:39},sidebar:"tutorialSidebar",previous:{title:"Section 5: Dynamic User Interfaces",permalink:"/fundamentals/category/section-5-dynamic-user-interfaces"},next:{title:"Dimensions API",permalink:"/fundamentals/6 React Native Expo CLI/Section 5: Dynamic User Interfaces/40 Dimensions API"}},c={},s=[{value:"<strong>=&gt;</strong> Intro",id:"-intro",level:3},{value:"Learning Objectives",id:"learning-objectives",level:3},{value:"Setting Up",id:"setting-up",level:3}],p={toc:s},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"dynamic-user-interfaces"},"Dynamic User Interfaces"),(0,a.kt)("blockquote",null),(0,a.kt)("h3",{id:"-intro"},(0,a.kt)("strong",{parentName:"h3"},"=>")," Intro"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Welcome to the fifth section of the course!")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"In this section, we'll delve into creating ",(0,a.kt)("strong",{parentName:"p"},"Dynamic User Interfaces")," in React Native.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Up until now, we've covered how to style React Native components and design layouts using flexbox.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"While these aspects are vital, there's an essential piece missing.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"All our learning has revolved around iPhone 14 and Pixel 4 devices.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"However, it's crucial to remember that not all users of our apps will be using identical devices.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Device sizes can vary significantly, ranging from more compact phones to larger devices like iPads or Android tablets.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"We must ensure that our app's interface remains responsive to these different device sizes while providing an optimal user experience.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"But that's not all! Even on the same device, users might prefer different orientations\u2014portrait or landscape.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Our UI needs to adeptly accommodate these varying user preferences."))),(0,a.kt)("h3",{id:"learning-objectives"},"Learning Objectives"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In this section, we will dive into several APIs that React Native provides to gracefully adapt to these changes and create dynamic user interfaces.")),(0,a.kt)("h3",{id:"setting-up"},"Setting Up"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'For this section on Dynamic User Interfaces, I\'ve created a new Expo project named "DynamicUI"')),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"In the ",(0,a.kt)("inlineCode",{parentName:"p"},"App")," component:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Remove the ",(0,a.kt)("inlineCode",{parentName:"p"},"StatusBar")," import")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Remove the ",(0,a.kt)("inlineCode",{parentName:"p"},"Text")," component import")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Clear all contents within the ",(0,a.kt)("inlineCode",{parentName:"p"},"View")," component")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Set the ",(0,a.kt)("inlineCode",{parentName:"p"},"backgroundColor")," of the container styles to plum"))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\n\nexport default function App() {\n  return <View style={styles.container}></View>\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'plum',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n")),(0,a.kt)("p",null,"Upon executing these changes, the view component displays a plum-colored background."),(0,a.kt)("p",null,"Alright, let's proceed to the next video where we'll learn how to work with different device sizes."))}u.isMDXComponent=!0}}]);