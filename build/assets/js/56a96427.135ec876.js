"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[1301],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),u=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(a),m=r,k=c["".concat(p,".").concat(m)]||c[m]||d[m]||o;return a?n.createElement(k,i(i({ref:t},s),{},{components:a})):n.createElement(k,i({ref:t},s))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9353:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:15},i="StatusBar component",l={unversionedId:"6 React Native/15 StatusBar",id:"6 React Native/15 StatusBar",title:"StatusBar component",description:"- Welcome back for our next component. Let's take a look at the status part component in React Native.",source:"@site/docs/6 React Native/15 StatusBar.md",sourceDirName:"6 React Native",slug:"/6 React Native/15 StatusBar",permalink:"/fundamentals/6 React Native/15 StatusBar",draft:!1,tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"tutorialSidebar",previous:{title:"Modal Component",permalink:"/fundamentals/6 React Native/14 Modal"},next:{title:"ActivityIndicator Component",permalink:"/fundamentals/6 React Native/16 ActivityIndicator"}},p={},u=[{value:"Code Example",id:"code-example",level:3},{value:"Modifying Appearance",id:"modifying-appearance",level:3},{value:"Visibility and Hidden Prop",id:"visibility-and-hidden-prop",level:3},{value:"Summary",id:"summary",level:3}],s={toc:u},c="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"statusbar-component"},"StatusBar component"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Welcome back for our next component. Let's take a look at the status part component in React Native.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The status bar component provides control over the application's status bar, which is the area typically located at the top of the screen.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The status bar displays various information such as the current time, Wi-Fi and network status, battery level, and other status icons.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Now, our focus will be on the top section of the two devices. You can see they are transparent to begin with."))),(0,r.kt)("h3",{id:"code-example"},"Code Example"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"let's now import the statusBar component")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"and within the view component invoke status bar"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, StatusBar } from 'react-native'\n\nexport default function App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <StatusBar />\n    </View>\n  )\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"When we save the file, there is no visible change in iOS, but in Android, it adds a status bar component with a dark background.")),(0,r.kt)("h3",{id:"modifying-appearance"},"Modifying Appearance"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Let's now modify its appearance by adding some props:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Set the background color using the backgroundColor prop. For example, backgroundColor: 'lightgreen' (specific to Android).")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, StatusBar } from 'react-native'\n\nexport default function App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <StatusBar backgroundColor='lightgreen' />\n    </View>\n  )\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Please note that this prop is specific to Android. The iOS simulator has no background color, while the Android device shows a green background.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Although we can't change the background color on iOS, we can adjust the text color on both platforms.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The prop to control the text color is called",(0,r.kt)("inlineCode",{parentName:"p"}," barStyle")," , and its default value is ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," ."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, StatusBar } from 'react-native'\n\nexport default function App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <StatusBar backgroundColor='lightgreen' barStyle='default' />\n    </View>\n  )\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This corresponds to dark text on iOS and light text on Android.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Currently, we see black text on iOS and white text on Android.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"We can change the value of barStyle to ",(0,r.kt)("inlineCode",{parentName:"p"},"dark-content")," , which results in black text on both platforms,")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"or ",(0,r.kt)("inlineCode",{parentName:"p"},"light-content")," , which gives us white text on both platforms."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, StatusBar } from 'react-native'\n\nexport default function App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <StatusBar backgroundColor='lightgreen' barStyle='dark-content' />\n    </View>\n  )\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Depending on your application's background color, choose the appropriate value to ensure good visibility and contrast.")),(0,r.kt)("h3",{id:"visibility-and-hidden-prop"},"Visibility and Hidden Prop"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Speaking of visibility, you can use the ",(0,r.kt)("inlineCode",{parentName:"li"},"hidden")," prop to hide the status bar.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, StatusBar } from 'react-native'\n\nexport default function App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <StatusBar backgroundColor='lightgreen' barStyle='dark-content' hidden />\n    </View>\n  )\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Add the hidden prop, and you'll notice that the status bar is now hidden.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"As an exercise, I encourage you to try toggling the visibility of the status bar by using a state variable and a button click event, similar to how you control the visibility of a modal."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { useState } from 'react'\nimport { View, StatusBar, Button, Text } from 'react-native'\n\nexport default function App() {\n  const [isStatusBarHidden, setIsStatusBarHidden] = useState(false)\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum', padding: 60 }}>\n      <StatusBar backgroundColor='lightgreen' barStyle='dark-content' hidden={isStatusBarHidden} />\n      <Button title='Hidden' onPress={() => setIsStatusBarHidden(true)} color='midnightblue' />\n      <Text> </Text>\n      <Button title='Visible' onPress={() => setIsStatusBarHidden(false)} color='midnightblue' />\n    </View>\n  )\n}\n")),(0,r.kt)("h3",{id:"summary"},"Summary"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To summarize, the status bar component allows you to control the application's status bar.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You can adjust the background color on Android using the backgroundColor prop,")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"change the text color using the barStyle prop,")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"and toggle visibility using the hidden prop."))))}d.isMDXComponent=!0}}]);