"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[8926],{3905:(e,o,t)=>{t.d(o,{Zo:()=>x,kt:()=>m});var n=t(7294);function a(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function r(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?r(Object(t),!0).forEach((function(o){a(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function i(e,o){if(null==e)return{};var t,n,a=function(e,o){if(null==e)return{};var t,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],o.indexOf(t)>=0||(a[t]=e[t]);return a}(e,o);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),p=function(e){var o=n.useContext(c),t=o;return e&&(t="function"==typeof e?e(o):l(l({},o),e)),t},x=function(e){var o=p(e.components);return n.createElement(c.Provider,{value:o},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},d=n.forwardRef((function(e,o){var t=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,x=i(e,["components","mdxType","originalType","parentName"]),s=p(t),d=a,m=s["".concat(c,".").concat(d)]||s[d]||u[d]||r;return t?n.createElement(m,l(l({ref:o},x),{},{components:t})):n.createElement(m,l({ref:o},x))}));function m(e,o){var t=arguments,a=o&&o.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=d;var i={};for(var c in o)hasOwnProperty.call(o,c)&&(i[c]=o[c]);i.originalType=e,i[s]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<r;p++)l[p]=t[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1604:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var n=t(7462),a=(t(7294),t(3905));const r={sidebar_position:27},l="Flex",i={unversionedId:"6 React Native/Section 4: Layout/27 Flex",id:"6 React Native/Section 4: Layout/27 Flex",title:"Flex",description:"- The flex property plays a crucial role in defining how much of a view will fill the screen along the main axis.",source:"@site/docs/6 React Native/Section 4: Layout/27 Flex.md",sourceDirName:"6 React Native/Section 4: Layout",slug:"/6 React Native/Section 4: Layout/27 Flex",permalink:"/fundamentals/6 React Native/Section 4: Layout/27 Flex",draft:!1,tags:[],version:"current",sidebarPosition:27,frontMatter:{sidebar_position:27},sidebar:"tutorialSidebar",previous:{title:"Code Setup",permalink:"/fundamentals/6 React Native/Section 4: Layout/26 Code Setup"},next:{title:"Flex Direction",permalink:"/fundamentals/6 React Native/Section 4: Layout/28 Flex Direction"}},c={},p=[{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3},{value:"Example 3",id:"example-3",level:3},{value:"Example 4",id:"example-4",level:3},{value:"Summary",id:"summary",level:3}],x={toc:p},s="wrapper";function u(e){let{components:o,...t}=e;return(0,a.kt)(s,(0,n.Z)({},x,t,{components:o,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"flex"},"Flex"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The flex property plays a crucial role in defining how much of a view will fill the screen along the main axis.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"It accepts an integer value greater than or equal to zero indicating the fraction of the available space the component should occupy.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"In react native The View component is automatically set to display Flex by default")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"so in our case the view container is already a flex container and the boxes inside are considered Flex items"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n=>\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,a.kt)("h3",{id:"example-1"},"Example 1"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Replace the entire View component with a simple View that has an inline Style.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Set the background color of the View component to Plum."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={{ backgroundColor: 'plum' }}></View>\n    // <View style={styles.container}>\n    //   <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n    //   <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n    //   <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n    //   <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n    //   <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n    //   <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n    //   <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    // </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The View component only occupies enough space to accommodate its children by default.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"To make the View occupy the entire available space, add the flex property and set it to a value of 1."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={{ flex: 1, backgroundColor: 'plum' }}></View>\n    // <View style={styles.container}>\n    //   <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n    //   <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n    //   <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n    //   <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n    //   <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n    //   <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n    //   <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    // </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"we can see the plum colored background now occupies the entire available space")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"and this is a common approach in react native apps")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"adding a view component and setting the flex property to 1 to occupy all available space"))),(0,a.kt)("h3",{id:"example-2"},"Example 2"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"for the second example let's work with the code that we set up in the previous video")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    // <View style={{ flex: 1, backgroundColor: 'plum' }}></View>\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"if we save the file and take a look at the devices, we can see the space occupied by the flex container it is indicated by the red border")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"To ensure the container occupies the entire available space, set the flex property of the container to 1."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    // <View style={{ flex: 1, backgroundColor: 'plum' }}></View>\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,a.kt)("h3",{id:"example-3"},"Example 3"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The flex property is not limited to the flex container; it is also applicable to flex items.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add Flex 1 to the first box component."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    // <View style={{ flex: 1, backgroundColor: 'plum' }}></View>\n    <View style={styles.container}>\n      <Box style={{ flex: 1, backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The first box now occupies all the available space within the container.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The flex value indicates the fraction of available space the component should take up.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"When Flex 1 is set on the second box,"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    // <View style={{ flex: 1, backgroundColor: 'plum' }}></View>\n    <View style={styles.container}>\n      <Box style={{ flex: 1, backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ flex: 1, backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"both box 1 and box 2 equally share the available space between them, taking up 50 percent of the available space each.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"When Flex 1 is set on the third box,"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    // <View style={{ flex: 1, backgroundColor: 'plum' }}></View>\n    <View style={styles.container}>\n      <Box style={{ flex: 1, backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ flex: 1, backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ flex: 1, backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the first three boxes each take up 33 percent of the available space.")),(0,a.kt)("h3",{id:"example-4"},"Example 4"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Remove the flex property from the third box and instead set Flex 3 on box 2.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    // <View style={{ flex: 1, backgroundColor: 'plum' }}></View>\n    <View style={styles.container}>\n      <Box style={{ flex: 1, backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ flex: 3, backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The available space is divided into one plus three, which equals four parts.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Box 1 takes 1/4 (25 percent) of the space, and box 2 takes three by four (75 percent) of the available space.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Box 2 is three times larger than box one.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"boxes that don't have the flex property will continue to take up space as dictated by the Box model properties"))),(0,a.kt)("h3",{id:"summary"},"Summary"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"In React Native, a View component has display Flex by default.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"When you set flex 1 on a container, it takes up the entire available space.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"If you set Flex on an item, it takes up a fraction or percentage of the available space.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The flex property allows for the distribution of available space among components."))))}u.isMDXComponent=!0}}]);