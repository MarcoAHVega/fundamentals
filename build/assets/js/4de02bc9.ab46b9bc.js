"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[7254],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),s=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(u.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(t),g=r,h=d["".concat(u,".").concat(g)]||d[g]||p[g]||o;return t?a.createElement(h,l(l({ref:n},c),{},{components:t})):a.createElement(h,l({ref:n},c))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=g;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},6206:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const o={sidebar_position:17},l="- Introducing Functions",i={unversionedId:"8 Max JS/Section 11: Understanding the JavaScript Basics/Introducing Functions",id:"8 Max JS/Section 11: Understanding the JavaScript Basics/Introducing Functions",title:"- Introducing Functions",description:"- Functions are a key feature of programming, not just of JavaScript. Functions are basically our own commands, which we can define as a developer to then execute them anywhere in our code.",source:"@site/docs/8 Max JS/Section 11: Understanding the JavaScript Basics/233. Introducing Functions.md",sourceDirName:"8 Max JS/Section 11: Understanding the JavaScript Basics",slug:"/8 Max JS/Section 11: Understanding the JavaScript Basics/Introducing Functions",permalink:"/fundamentals/8 Max JS/Section 11: Understanding the JavaScript Basics/Introducing Functions",draft:!1,tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_position:17},sidebar:"tutorialSidebar",previous:{title:"- Onwards To Custom Commands! (functions)",permalink:"/fundamentals/8 Max JS/Section 11: Understanding the JavaScript Basics/Onwards To Custom Commands"},next:{title:"  LOCOFY",permalink:"/fundamentals/category/--locofy"}},u={},s=[{value:"Creating a Custom Function",id:"creating-a-custom-function",level:3},{value:"Naming the Function",id:"naming-the-function",level:3},{value:"Adding Code to the Function",id:"adding-code-to-the-function",level:3},{value:"Storing the Function Result",id:"storing-the-function-result",level:3},{value:"Executing the Function",id:"executing-the-function",level:3},{value:"Reusing the Function",id:"reusing-the-function",level:3}],c={toc:s},d="wrapper";function p(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"--introducing-functions"},"- Introducing Functions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Functions are a key feature of programming, not just of JavaScript. Functions are basically our own commands, which we can define as a developer to then execute them anywhere in our code.")),(0,r.kt)("h3",{id:"creating-a-custom-function"},"Creating a Custom Function"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To create a custom function, you can add a new function by typing the function keyword.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let age = 32\nlet userName = 'Max'\nlet hobbies = ['Sports', 'Cooking', 'Reading']\nlet job = {\ntitle: 'developer',\nplace: 'New York',\nsalary: 50000,\n}\nfunction\nlet adultYears = age - 18\nalert(adultYears)\nage = 45\nadultYears = age - 18\nalert(adultYears)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Function names should not describe what's in them, but instead, what this operation does.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Function names should describe as operation."))),(0,r.kt)("h3",{id:"naming-the-function"},"Naming the Function"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"So here, I wanna calculate my adult years and hence I'll name this function calculateAdultYears.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let age = 32\nlet userName = 'Max'\nlet hobbies = ['Sports', 'Cooking', 'Reading']\nlet job = {\ntitle: 'developer',\nplace: 'New York',\nsalary: 50000,\n}\nfunction calculateAdultYears\nlet adultYears = age - 18\nalert(adultYears)\nage = 45\nadultYears = age - 18\nalert(adultYears)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We don't use the equal sign as we did it for a variables, instead, for functions, we now add opening and closing parentheses, and then, curly braces, opening and closing curly braces.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let age = 32\nlet userName = 'Max'\nlet hobbies = ['Sports', 'Cooking', 'Reading']\nlet job = {\n  title: 'developer',\n  place: 'New York',\n  salary: 50000,\n}\nfunction calculateAdultYears() {}\nlet adultYears = age - 18\nalert(adultYears)\nage = 45\nadultYears = age - 18\nalert(adultYears)\n")),(0,r.kt)("h3",{id:"adding-code-to-the-function"},"Adding Code to the Function"),(0,r.kt)("p",null,"And now, between those curly braces, we put our operation code, so the code that makes up this operation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let age = 32\nlet userName = 'Max'\nlet hobbies = ['Sports', 'Cooking', 'Reading']\nlet job = {\n  title: 'developer',\n  place: 'New York',\n  salary: 50000,\n}\nlet adultYears\nfunction calculateAdultYears() {\n  adultYears = age - 18\n}\nlet adultYears = age - 18\nalert(adultYears)\nage = 45\nadultYears = age - 18\nalert(adultYears)\n")),(0,r.kt)("h3",{id:"storing-the-function-result"},"Storing the Function Result"),(0,r.kt)("p",null,"We could store this in adultYears, however, not by using let here, but without let, and actually define this adult years variable before we define this function."),(0,r.kt)("h3",{id:"executing-the-function"},"Executing the Function"),(0,r.kt)("p",null,"To execute a function, you repeat its name, so calculateAdultYears in my case, and then you add parentheses, opening and closing thereafter."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let age = 32\nlet userName = 'Max'\nlet hobbies = ['Sports', 'Cooking', 'Reading']\nlet job = {\n  title: 'developer',\n  place: 'New York',\n  salary: 50000,\n}\nlet adultYears\nfunction calculateAdultYears() {\n  adultYears = age - 18\n}\ncalculateAdultYears()\nalert(adultYears)\nage = 45\nadultYears = age - 18\nalert(adultYears)\n")),(0,r.kt)("h3",{id:"reusing-the-function"},"Reusing the Function"),(0,r.kt)("p",null,"We can also calculate adult years here instead of that operation, which we had before."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let age = 32\nlet userName = 'Max'\nlet hobbies = ['Sports', 'Cooking', 'Reading']\nlet job = {\n  title: 'developer',\n  place: 'New York',\n  salary: 50000,\n}\nlet adultYears\nfunction calculateAdultYears() {\n  adultYears = age - 18\n}\ncalculateAdultYears()\nalert(adultYears)\nage = 45\ncalculateAdultYears()\nalert(adultYears)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The advantage of this is that we only have this operation once in our function, and then we just called this function into different places where we wanna perform this operation.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Functions allow us to define code, which is not executed immediately, but which we instead trigger in different parts of our code when we need that code to run."))))}p.isMDXComponent=!0}}]);