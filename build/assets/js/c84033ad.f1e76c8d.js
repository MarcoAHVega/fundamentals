"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[5491],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},y=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(n),y=r,u=c["".concat(s,".").concat(y)]||c[y]||d[y]||a;return n?o.createElement(u,i(i({ref:t},m),{},{components:n})):o.createElement(u,i({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=y;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}y.displayName="MDXCreateElement"},8721:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:55},i="List Header and Footer",l={unversionedId:"6 React Native Expo CLI/Section 7: How to render list/55 List Header and Footer",id:"6 React Native Expo CLI/Section 7: How to render list/55 List Header and Footer",title:"List Header and Footer",description:"=> Intro",source:"@site/docs/6 React Native Expo CLI/Section 7: How to render list/55 List Header and Footer.md",sourceDirName:"6 React Native Expo CLI/Section 7: How to render list",slug:"/6 React Native Expo CLI/Section 7: How to render list/55 List Header and Footer",permalink:"/fundamentals/6 React Native Expo CLI/Section 7: How to render list/55 List Header and Footer",draft:!1,tags:[],version:"current",sidebarPosition:55,frontMatter:{sidebar_position:55},sidebar:"tutorialSidebar",previous:{title:"listEmpty",permalink:"/fundamentals/6 React Native Expo CLI/Section 7: How to render list/54 ListEmpty"},next:{title:"SectionList",permalink:"/fundamentals/6 React Native Expo CLI/Section 7: How to render list/56 SectionList"}},s={},p=[{value:"<strong>=&gt;</strong> Intro",id:"-intro",level:3},{value:"ListHeaderComponent",id:"listheadercomponent",level:3},{value:"List Footer Component",id:"list-footer-component",level:3}],m={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"list-header-and-footer"},"List Header and Footer"),(0,r.kt)("blockquote",null),(0,r.kt)("h3",{id:"-intro"},(0,r.kt)("strong",{parentName:"h3"},"=>")," Intro"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"two more props supported by FlatList component the ",(0,r.kt)("inlineCode",{parentName:"p"},"ListHeaderComponent")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"ListFooterComponent"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"they allow you to add custom header and footer components to your lists"))),(0,r.kt)("h3",{id:"listheadercomponent"},"ListHeaderComponent"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"This prop allows you to add a custom header component to the top of the list."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"It accepts a React component and renders it at the top of the list.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Perfect for adding titles, descriptions, or any other content you want to display above your list items."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'Example: Add a simple text component that says "Pok\xe9mon List" with the style set to ',(0,r.kt)("inlineCode",{parentName:"p"},"styles.header_text"),"."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, Text, View, ScrollView, SafeAreaView, StatusBar, FlatList } from 'react-native'\nimport pokemonList from './data.json'\n\nexport default function App() {\n  return (\n    <SafeAreaView style={styles.container}>\n      {/* <ScrollView style={styles.scrollView}>\n        {pokemonList.map(pokemon => {\n          return (\n            <View\n              style={styles.card}\n              key={pokemon.id}>\n              <Text style={styles.cardText}>{pokemon.type}</Text>\n              <Text style={styles.cardText}>{pokemon.name}</Text>\n            </View>\n          )\n        })}\n      </ScrollView> */}\n      <View style={styles.scrollView}>\n        <FlatList\n          data={[]}\n          renderItem={({ item }) => {\n            console.log(item.id)\n            return (\n              <View\n                style={styles.card}\n                key={item.id}>\n                <Text style={styles.cardText}>{item.type}</Text>\n                <Text style={styles.cardText}>{item.name}</Text>\n              </View>\n            )\n          }}\n          keyExtractor={item => item.id.toString()}\n          ItemSeparatorComponent={<View style={{ height: 16 }} />}\n          ListEmptyComponent={\n            <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n              <Text style={{ fontSize: 35 }}>No items found</Text>\n            </View>\n          }\n          ListHeaderComponent={<Text style={styles.headerText}>Pokemon List</Text>}\n          // horizontal={true}\n        />\n      </View>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f5f5f5',\n    paddingTop: StatusBar.currentHeight,\n  },\n  scrollView: {\n    paddingHorizontal: 16,\n  },\n  card: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    // marginBottom: 16,\n  },\n  cardText: {\n    fontSize: 30,\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In the Styles section, define the styles with a font size of 24, text-align center, and a bottom margin of 12.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'When you change the header to "Pok\xe9mon List" and view the UI,'))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, Text, View, ScrollView, SafeAreaView, StatusBar, FlatList } from 'react-native'\nimport pokemonList from './data.json'\n\nexport default function App() {\n  return (\n    <SafeAreaView style={styles.container}>\n      {/* <ScrollView style={styles.scrollView}>\n        {pokemonList.map(pokemon => {\n          return (\n            <View\n              style={styles.card}\n              key={pokemon.id}>\n              <Text style={styles.cardText}>{pokemon.type}</Text>\n              <Text style={styles.cardText}>{pokemon.name}</Text>\n            </View>\n          )\n        })}\n      </ScrollView> */}\n      <View style={styles.scrollView}>\n        <FlatList\n          data={pokemonList}\n          renderItem={({ item }) => {\n            console.log(item.id)\n            return (\n              <View\n                style={styles.card}\n                key={item.id}>\n                <Text style={styles.cardText}>{item.type}</Text>\n                <Text style={styles.cardText}>{item.name}</Text>\n              </View>\n            )\n          }}\n          keyExtractor={item => item.id.toString()}\n          ItemSeparatorComponent={<View style={{ height: 16 }} />}\n          ListEmptyComponent={\n            <Text style={{ fontSize: 35, textAlign: 'center' }}>No items found</Text>\n          }\n          ListHeaderComponent={<Text style={styles.headerText}>Pokemon List</Text>}\n          // horizontal={true}\n        />\n      </View>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f5f5f5',\n    paddingTop: StatusBar.currentHeight,\n  },\n  scrollView: {\n    paddingHorizontal: 16,\n  },\n  card: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    // marginBottom: 16,\n  },\n  cardText: {\n    fontSize: 30,\n  },\n  headerText: {\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 12,\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'you can see the text "Pok\xe9mon List" at the top.')),(0,r.kt)("h3",{id:"list-footer-component"},"List Footer Component"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"This prop allows you to add a custom footer component to the bottom of the list."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"It accepts a React component and renders it at the bottom of the list."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Useful for adding footnotes, pagination controls, or indicating the end of the list.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'Example: Add a text component that says "End of List" with the style set to ',(0,r.kt)("inlineCode",{parentName:"p"},"styles.footer_text"),"."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"In the Styles section, define the styles with a font size of 24, text-align center, and a margin-top of 12.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, Text, View, ScrollView, SafeAreaView, StatusBar, FlatList } from 'react-native'\nimport pokemonList from './data.json'\n\nexport default function App() {\n  return (\n    <SafeAreaView style={styles.container}>\n      {/* <ScrollView style={styles.scrollView}>\n        {pokemonList.map(pokemon => {\n          return (\n            <View\n              style={styles.card}\n              key={pokemon.id}>\n              <Text style={styles.cardText}>{pokemon.type}</Text>\n              <Text style={styles.cardText}>{pokemon.name}</Text>\n            </View>\n          )\n        })}\n      </ScrollView> */}\n      <View style={styles.scrollView}>\n        <FlatList\n          data={pokemonList}\n          renderItem={({ item }) => {\n            console.log(item.id)\n            return (\n              <View\n                style={styles.card}\n                key={item.id}>\n                <Text style={styles.cardText}>{item.type}</Text>\n                <Text style={styles.cardText}>{item.name}</Text>\n              </View>\n            )\n          }}\n          keyExtractor={item => item.id.toString()}\n          ItemSeparatorComponent={<View style={{ height: 16 }} />}\n          ListEmptyComponent={\n            <Text style={{ fontSize: 35, textAlign: 'center' }}>No items found</Text>\n          }\n          ListHeaderComponent={<Text style={styles.headerText}>Pokemon List</Text>}\n          ListFooterComponent={<Text style={styles.footerText}>End if list</Text>}\n          // horizontal={true}\n        />\n      </View>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f5f5f5',\n    paddingTop: StatusBar.currentHeight,\n  },\n  scrollView: {\n    paddingHorizontal: 16,\n  },\n  card: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    // marginBottom: 16,\n  },\n  cardText: {\n    fontSize: 30,\n  },\n  headerText: {\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 12,\n  },\n  footerText: {\n    fontSize: 24,\n    textAlign: 'center',\n    marginTop: 12,\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'When you scroll all the way to the bottom of the list, you can see the text "End of List."')),(0,r.kt)("p",null,"Whether you're displaying a catalog of products, a collection of articles, or a list of Pok\xe9mon, both these props can help you create more engaging and user-friendly interfaces."))}d.isMDXComponent=!0}}]);