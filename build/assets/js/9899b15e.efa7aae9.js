"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[8936],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},u="mdxType",x={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(t),d=r,m=u["".concat(s,".").concat(d)]||u[d]||x[d]||a;return t?o.createElement(m,l(l({ref:n},p),{},{components:t})):o.createElement(m,l({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<a;c++)l[c]=t[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4505:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>x,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=t(7462),r=(t(7294),t(3905));const a={sidebar_position:33},l="Align Content",i={unversionedId:"6 React Native/Section 4: Layout/33 Align Content",id:"6 React Native/Section 4: Layout/33 Align Content",title:"Align Content",description:"- In this tutorial, we will cover the Align Content property in Flexbox.",source:"@site/docs/6 React Native/Section 4: Layout/33 Align Content.md",sourceDirName:"6 React Native/Section 4: Layout",slug:"/6 React Native/Section 4: Layout/33 Align Content",permalink:"/fundamentals/6 React Native/Section 4: Layout/33 Align Content",draft:!1,tags:[],version:"current",sidebarPosition:33,frontMatter:{sidebar_position:33},sidebar:"tutorialSidebar",previous:{title:"Flex Wrap",permalink:"/fundamentals/6 React Native/Section 4: Layout/32 Flex Wrap"},next:{title:"Gap",permalink:"/fundamentals/6 React Native/Section 4: Layout/34 Gap"}},s={},c=[{value:"Align Content Property Overview",id:"align-content-property-overview",level:3},{value:"Understanding Values",id:"understanding-values",level:3},{value:"Value 1: Flex Start",id:"value-1-flex-start",level:3},{value:"Value 2: Flex End",id:"value-2-flex-end",level:3},{value:"Value 3: Center",id:"value-3-center",level:3},{value:"Value 4: Stretch",id:"value-4-stretch",level:3},{value:"Value 5: Space Between",id:"value-5-space-between",level:3},{value:"Fixing Styles for Space Between",id:"fixing-styles-for-space-between",level:3},{value:"Value 6: Space Around",id:"value-6-space-around",level:3},{value:"Summary",id:"summary",level:3}],p={toc:c},u="wrapper";function x(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"align-content"},"Align Content"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In this tutorial, we will cover the ",(0,r.kt)("strong",{parentName:"p"},"Align Content")," property in Flexbox.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This property is used to align lines of content along the cross axis within a container."))),(0,r.kt)("h3",{id:"align-content-property-overview"},"Align Content Property Overview"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"align-content")," property aligns lines of content along the cross axis, similar to how the ",(0,r.kt)("inlineCode",{parentName:"p"},"align-items")," property aligns individual items along the cross axis.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"However, a crucial condition is that multiple columns or rows must exist within the container."))),(0,r.kt)("h3",{id:"understanding-values"},"Understanding Values"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To better understand the different possible values, let's make adjustments in our code using VS Code.")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Set a height on the container: ",(0,r.kt)("inlineCode",{parentName:"li"},"height: 300px;")),(0,r.kt)("li",{parentName:"ol"},"Enable wrapping: ",(0,r.kt)("inlineCode",{parentName:"li"},"flex-wrap: wrap;")),(0,r.kt)("li",{parentName:"ol"},"Comment out ",(0,r.kt)("inlineCode",{parentName:"li"},"flex: 1;")," to ensure wrapping into 2 columns.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    height: 300,\n    flexWrap: 'wrap',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("h3",{id:"value-1-flex-start"},"Value 1: Flex Start"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The default value for ",(0,r.kt)("inlineCode",{parentName:"p"},"align-content")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"flex-start"),", which places both columns at the start of the cross axis.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The cross axis runs from left to right."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    height: 300,\n    flexWrap: 'wrap',\n    alignContent: 'flex-start',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("h3",{id:"value-2-flex-end"},"Value 2: Flex End"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Setting ",(0,r.kt)("inlineCode",{parentName:"li"},"align-content")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"flex-end")," pushes the content to the end of the cross axis.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    height: 300,\n    flexWrap: 'wrap',\n    alignContent: 'flex-end',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("h3",{id:"value-3-center"},"Value 3: Center"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Using a value of ",(0,r.kt)("inlineCode",{parentName:"li"},"center")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"align-content")," centers the content along the cross axis.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    height: 300,\n    flexWrap: 'wrap',\n    alignContent: 'center',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("h3",{id:"value-4-stretch"},"Value 4: Stretch"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"stretch")," value stretches the columns from the start to the end of the cross axis.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    height: 300,\n    flexWrap: 'wrap',\n    alignContent: 'stretch',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This makes both columns take up the entire horizontal space available.")),(0,r.kt)("h3",{id:"value-5-space-between"},"Value 5: Space Between"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"space-between")," takes extra space and places it between the lines.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    height: 300,\n    flexWrap: 'wrap',\n    alignContent: 'space-between',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("h3",{id:"fixing-styles-for-space-between"},"Fixing Styles for Space Between"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You might encounter styling issues when using ",(0,r.kt)("inlineCode",{parentName:"p"},"space-between"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To resolve this, add a fixed width and height to the box component, e.g., ",(0,r.kt)("inlineCode",{parentName:"p"},"width: 50px;")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"height: 50px;"),"."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, StyleSheet } from 'react-native'\n\nexport default function Box({ children, style }) {\n  return (\n    <View style={[styles.box, style]}>\n      <Text style={styles.text}>{children}</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  box: {\n    backgroundColor: '#fff',\n    padding: 20,\n    width: 50,\n    height: 50,\n  },\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'white',\n  },\n})\n")),(0,r.kt)("h3",{id:"value-6-space-around"},"Value 6: Space Around"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"space-around")," distributes space around the columns.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    height: 300,\n    flexWrap: 'wrap',\n    alignContent: 'space-around',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The center portion has twice the space as the edges.")),(0,r.kt)("h3",{id:"summary"},"Summary"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In React Native, the ",(0,r.kt)("inlineCode",{parentName:"p"},"align-content")," property aligns lines of content along the cross axis and distributes any extra spacing in the parent container.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The possible values are:")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"flex-start")," (default)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"flex-end"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"center"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"stretch"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"space-between"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"space-around")))),(0,r.kt)("p",null,"By using these values, you can control how content is aligned and distributed within a flex container."))}x.isMDXComponent=!0}}]);