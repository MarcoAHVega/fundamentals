"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[3838],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>u});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),p=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return i.createElement(l.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},y=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(t),y=r,u=d["".concat(l,".").concat(y)]||d[y]||m[y]||a;return t?i.createElement(u,o(o({ref:n},c),{},{components:t})):i.createElement(u,o({ref:n},c))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=y;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<a;p++)o[p]=t[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}y.displayName="MDXCreateElement"},2124:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var i=t(7462),r=(t(7294),t(3905));const a={sidebar_position:5},o="Keycode Mini-project",s={unversionedId:"3 Javascript/events-docs/keycode-mini-project",id:"3 Javascript/events-docs/keycode-mini-project",title:"Keycode Mini-project",description:"In the last video, we learned how to get the key that was pressed using the key, keyCode, and code properties. In this mini-project, we will create a simple keyboard event listener that will display all 3 of these properties on the screen. I think you'll be surprised how easy this will be.",source:"@site/docs/3 Javascript/07-events-docs/05-keycode-mini-project.md",sourceDirName:"3 Javascript/07-events-docs",slug:"/3 Javascript/events-docs/keycode-mini-project",permalink:"/fundamentals/3 Javascript/events-docs/keycode-mini-project",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Keyboard Events",permalink:"/fundamentals/3 Javascript/events-docs/keyboard-events"},next:{title:"Input Events",permalink:"/fundamentals/3 Javascript/events-docs/input-events"}},l={},p=[{value:"The HTML",id:"the-html",level:3},{value:"The CSS",id:"the-css",level:3},{value:"The JavaScript",id:"the-javascript",level:3}],c={toc:p},d="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"keycode-mini-project"},"Keycode Mini-project"),(0,r.kt)("p",null,"In the last video, we learned how to get the key that was pressed using the ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"keyCode"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"code")," properties. In this mini-project, we will create a simple keyboard event listener that will display all 3 of these properties on the screen. I think you'll be surprised how easy this will be."),(0,r.kt)("h3",{id:"the-html"},"The HTML"),(0,r.kt)("p",null,"The HTML is really simple:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-HTML"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <link rel="stylesheet" href="style.css" />\n    <title>Event KeyCodes</title>\n  </head>\n  <body>\n    <div id="insert">\n      <div class="key">\n        Press any key to get the keyCode\n      </div>\n    </div>\n    <script src="script.js"><\/script>\n  </body>\n</html>\n')),(0,r.kt)("p",null,"We have a wrapper div with an id of ",(0,r.kt)("inlineCode",{parentName:"p"},"insert"),". This is where we will display the information."),(0,r.kt)("h3",{id:"the-css"},"The CSS"),(0,r.kt)("p",null,"Here is some basic styling. We have a class of ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," that is styled like a card or a box. We will wrap each output in a ",(0,r.kt)("inlineCode",{parentName:"p"},"div")," with the class of ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-CSS"},"@import url('https://fonts.googleapis.com/css?family=Muli&display=swap');\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: #e1e1e1;\n  font-family: 'Muli', sans-serif;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  height: 100vh;\n  overflow: hidden;\n  margin: 0;\n}\n\n.key {\n  border: 1px solid #999;\n  background-color: #eee;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);\n  display: inline-flex;\n  align-items: center;\n  font-size: 20px;\n  font-weight: bold;\n  padding: 20px;\n  flex-direction: column;\n  margin: 10px;\n  min-width: 150px;\n  position: relative;\n}\n\n.key small {\n  position: absolute;\n  top: -24px;\n  left: 0;\n  text-align: center;\n  width: 100%;\n  color: #555;\n  font-size: 14px;\n}\n")),(0,r.kt)("h3",{id:"the-javascript"},"The JavaScript"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const insert = document.getElementById('insert')\n\nwindow.addEventListener('keydown', (e) => {\n  insert.innerHTML = `\n  <div class=\"key\">\n  ${e.key === ' ' ? 'Space' : e.key}\n  <small>e.key</small>\n</div>\n\n<div class=\"key\">\n  ${e.keyCode}\n  <small>e.keyCode</small>\n</div>\n\n<div class=\"key\">\n  ${e.code}\n  <small>event.code</small>\n</div>\n  `\n})\n")),(0,r.kt)("p",null,"As you can see, it's very simple. We add an event listener to the window and insert some HTML into the ",(0,r.kt)("inlineCode",{parentName:"p"},"insert")," div. The HTML includes 3 ",(0,r.kt)("inlineCode",{parentName:"p"},"div"),"s with the class of ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),". Each ",(0,r.kt)("inlineCode",{parentName:"p"},"div")," has a ",(0,r.kt)("inlineCode",{parentName:"p"},"small")," that displays the 3 properties."))}m.isMDXComponent=!0}}]);