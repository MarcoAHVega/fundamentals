"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[9559],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>y});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),m=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=m(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=m(t),u=i,y=d["".concat(s,".").concat(u)]||d[u]||c[u]||o;return t?a.createElement(y,r(r({ref:n},p),{},{components:t})):a.createElement(y,r({ref:n},p))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:i,r[1]=l;for(var m=2;m<o;m++)r[m]=t[m];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1346:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var a=t(7462),i=(t(7294),t(3905));const o={sidebar_position:48},r="Build a Pokemon Card 4",l={unversionedId:"6 React Native Expo CLI/Section 6: Exercise One/48 Build a Pokemon Card 4",id:"6 React Native Expo CLI/Section 6: Exercise One/48 Build a Pokemon Card 4",title:"Build a Pokemon Card 4",description:"=> Intro",source:"@site/docs/6 React Native Expo CLI/Section 6: Exercise One/48 Build a Pokemon Card 4.md",sourceDirName:"6 React Native Expo CLI/Section 6: Exercise One",slug:"/6 React Native Expo CLI/Section 6: Exercise One/48 Build a Pokemon Card 4",permalink:"/fundamentals/6 React Native Expo CLI/Section 6: Exercise One/48 Build a Pokemon Card 4",draft:!1,tags:[],version:"current",sidebarPosition:48,frontMatter:{sidebar_position:48},sidebar:"tutorialSidebar",previous:{title:"Build a Pokemon Card 3",permalink:"/fundamentals/6 React Native Expo CLI/Section 6: Exercise One/47 Build a Pokemon Card 3"},next:{title:"Build a Pokemon Card 5",permalink:"/fundamentals/6 React Native Expo CLI/Section 6: Exercise One/49 Build a Pokemon Card 5"}},s={},m=[{value:"<strong>=&gt;</strong> Intro",id:"-intro",level:3},{value:"Step 14: Styling the Name and HP Block",id:"step-14-styling-the-name-and-hp-block",level:3},{value:"nameContainer Style:",id:"namecontainer-style",level:3},{value:"Name Text Style:",id:"name-text-style",level:3},{value:"HP Text Style:",id:"hp-text-style",level:3},{value:"Step 15: Styling the Image Block",id:"step-15-styling-the-image-block",level:3},{value:"Conclusion:",id:"conclusion",level:3}],p={toc:m},d="wrapper";function c(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"build-a-pokemon-card-4"},"Build a Pokemon Card 4"),(0,i.kt)("blockquote",null),(0,i.kt)("h3",{id:"-intro"},(0,i.kt)("strong",{parentName:"h3"},"=>")," Intro"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Welcome to Part 4 of building a Pok\xe9mon card in React Native.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In Part 3, we focused on the card component's content.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In this video, let's shift our concentration to styling the content.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Once again, we're picking up where we left off."))),(0,i.kt)("h3",{id:"step-14-styling-the-name-and-hp-block"},"Step 14: Styling the Name and HP Block"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Start with the first block that renders the name and HP.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Apply styles to each of the elements in this block."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"style")," prop for the wrapping view: ",(0,i.kt)("inlineCode",{parentName:"p"},"Styles.nameContainer"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"style")," prop for the name text element: ",(0,i.kt)("inlineCode",{parentName:"p"},"Styles.name"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"style")," prop for HP text element: ",(0,i.kt)("inlineCode",{parentName:"p"},"Styles.hp"),"."))))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, StyleSheet, Platform, Image } from 'react-native'\n\nexport default function PokemonCard({ name, image, type, hp, moves, weaknesses }) {\n  return (\n    <View style={styles.card}>\n      <View style={styles.nameContainer}>\n        <Text style={styles.name}>{name}</Text>\n        <Text style={styles.hp}>{hp}</Text>\n      </View>\n\n      {/* <Image\n        source={image}\n        accessibilityLabel={`${name} pokemon`}\n      /> */}\n\n      <View>\n        <Text>{type}</Text>\n      </View>\n\n      <View>\n        <Text>Moves: {moves.join(', ')}</Text>\n      </View>\n      <View>\n        <Text>Weakness: {weaknesses.join(', ')}</Text>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 16,\n    borderWidth: 2,\n    padding: 16,\n    margin: 16,\n    ...Platform.select({\n      ios: {\n        shadowOffset: { width: 2, height: 2 },\n        shadowColor: '333',\n        shadowOpacity: 0.3,\n        shadowRadius: 4,\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n  },\n})\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Now Define these styles in the stylesheet object.")),(0,i.kt)("h3",{id:"namecontainer-style"},"nameContainer Style:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Set ",(0,i.kt)("inlineCode",{parentName:"p"},"flexDirection")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"row")," to align the name and HP horizontally.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Add spacing between the text items with ",(0,i.kt)("inlineCode",{parentName:"p"},"justifyContent: 'space-between'"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Set a bottom margin for spacing with the next block."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, StyleSheet, Platform, Image } from 'react-native'\n\nexport default function PokemonCard({ name, image, type, hp, moves, weaknesses }) {\n  return (\n    <View style={styles.card}>\n      <View style={styles.nameContainer}>\n        <Text style={styles.name}>{name}</Text>\n        <Text style={styles.hp}>{hp}</Text>\n      </View>\n\n      {/* <Image\n        source={image}\n        accessibilityLabel={`${name} pokemon`}\n      /> */}\n\n      <View>\n        <Text>{type}</Text>\n      </View>\n\n      <View>\n        <Text>Moves: {moves.join(', ')}</Text>\n      </View>\n      <View>\n        <Text>Weakness: {weaknesses.join(', ')}</Text>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 16,\n    borderWidth: 2,\n    padding: 16,\n    margin: 16,\n    ...Platform.select({\n      ios: {\n        shadowOffset: { width: 2, height: 2 },\n        shadowColor: '333',\n        shadowOpacity: 0.3,\n        shadowRadius: 4,\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 32,\n  },\n})\n")),(0,i.kt)("h3",{id:"name-text-style"},"Name Text Style:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Increase font size.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Set font weight to bold."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, StyleSheet, Platform, Image } from 'react-native'\n\nexport default function PokemonCard({ name, image, type, hp, moves, weaknesses }) {\n  return (\n    <View style={styles.card}>\n      <View style={styles.nameContainer}>\n        <Text style={styles.name}>{name}</Text>\n        <Text style={styles.hp}>{hp}</Text>\n      </View>\n\n      {/* <Image\n        source={image}\n        accessibilityLabel={`${name} pokemon`}\n      /> */}\n\n      <View>\n        <Text>{type}</Text>\n      </View>\n\n      <View>\n        <Text>Moves: {moves.join(', ')}</Text>\n      </View>\n      <View>\n        <Text>Weakness: {weaknesses.join(', ')}</Text>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 16,\n    borderWidth: 2,\n    padding: 16,\n    margin: 16,\n    ...Platform.select({\n      ios: {\n        shadowOffset: { width: 2, height: 2 },\n        shadowColor: '333',\n        shadowOpacity: 0.3,\n        shadowRadius: 4,\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 32,\n  },\n  name: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n})\n")),(0,i.kt)("h3",{id:"hp-text-style"},"HP Text Style:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Set font size to 22.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Add a heart emoji in the jsx to represent HP."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, StyleSheet, Platform, Image } from 'react-native'\n\nexport default function PokemonCard({ name, image, type, hp, moves, weaknesses }) {\n  return (\n    <View style={styles.card}>\n      <View style={styles.nameContainer}>\n        <Text style={styles.name}>{name}</Text>\n        <Text style={styles.hp}>\u2764\ufe0f{hp}</Text>\n      </View>\n\n      {/* <Image\n        source={image}\n        accessibilityLabel={`${name} pokemon`}\n      /> */}\n\n      <View>\n        <Text>{type}</Text>\n      </View>\n\n      <View>\n        <Text>Moves: {moves.join(', ')}</Text>\n      </View>\n      <View>\n        <Text>Weakness: {weaknesses.join(', ')}</Text>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 16,\n    borderWidth: 2,\n    padding: 16,\n    margin: 16,\n    ...Platform.select({\n      ios: {\n        shadowOffset: { width: 2, height: 2 },\n        shadowColor: '333',\n        shadowOpacity: 0.3,\n        shadowRadius: 4,\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 32,\n  },\n  name: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n  hp: {\n    fontSize: 22,\n  },\n})\n")),(0,i.kt)("h3",{id:"step-15-styling-the-image-block"},"Step 15: Styling the Image Block"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"For the second block (image), add ",(0,i.kt)("inlineCode",{parentName:"li"},"style")," prop: ",(0,i.kt)("inlineCode",{parentName:"li"},"Styles.image"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, StyleSheet, Platform, Image } from 'react-native'\n\nexport default function PokemonCard({ name, image, type, hp, moves, weaknesses }) {\n  return (\n    <View style={styles.card}>\n      <View style={styles.nameContainer}>\n        <Text style={styles.name}>{name}</Text>\n        <Text style={styles.hp}>\u2764\ufe0f{hp}</Text>\n      </View>\n\n      <Image\n        style={styles.image}\n        source={image}\n        accessibilityLabel={`${name} pokemon`}\n      />\n\n      <View>\n        <Text>{type}</Text>\n      </View>\n\n      <View>\n        <Text>Moves: {moves.join(', ')}</Text>\n      </View>\n      <View>\n        <Text>Weakness: {weaknesses.join(', ')}</Text>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 16,\n    borderWidth: 2,\n    padding: 16,\n    margin: 16,\n    ...Platform.select({\n      ios: {\n        shadowOffset: { width: 2, height: 2 },\n        shadowColor: '333',\n        shadowOpacity: 0.3,\n        shadowRadius: 4,\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 32,\n  },\n  name: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n  hp: {\n    fontSize: 22,\n  },\n})\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Define this style in the stylesheet object."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Set width to 100%.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Set height to 200.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Add margin bottom for spacing."))))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, StyleSheet, Platform, Image } from 'react-native'\n\nexport default function PokemonCard({ name, image, type, hp, moves, weaknesses }) {\n  return (\n    <View style={styles.card}>\n      <View style={styles.nameContainer}>\n        <Text style={styles.name}>{name}</Text>\n        <Text style={styles.hp}>\u2764\ufe0f{hp}</Text>\n      </View>\n\n      <Image\n        style={styles.image}\n        source={image}\n        accessibilityLabel={`${name} pokemon`}\n      />\n\n      <View>\n        <Text>{type}</Text>\n      </View>\n\n      <View>\n        <Text>Moves: {moves.join(', ')}</Text>\n      </View>\n      <View>\n        <Text>Weakness: {weaknesses.join(', ')}</Text>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 16,\n    borderWidth: 2,\n    padding: 16,\n    margin: 16,\n    ...Platform.select({\n      ios: {\n        shadowOffset: { width: 2, height: 2 },\n        shadowColor: '333',\n        shadowOpacity: 0.3,\n        shadowRadius: 4,\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 32,\n  },\n  name: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n  hp: {\n    fontSize: 22,\n  },\n  image: {\n    width: '100%',\n    height: 200,\n    marginBottom: 16,\n  },\n})\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"To fix cropping, add ",(0,i.kt)("inlineCode",{parentName:"li"},"resizeMode")," prop to the image component and set it to ",(0,i.kt)("inlineCode",{parentName:"li"},"contain"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, StyleSheet, Platform, Image } from 'react-native'\n\nexport default function PokemonCard({ name, image, type, hp, moves, weaknesses }) {\n  return (\n    <View style={styles.card}>\n      <View style={styles.nameContainer}>\n        <Text style={styles.name}>{name}</Text>\n        <Text style={styles.hp}>\u2764\ufe0f{hp}</Text>\n      </View>\n\n      <Image\n        style={styles.image}\n        source={image}\n        accessibilityLabel={`${name} pokemon`}\n        resizeMode='contain'\n      />\n\n      <View>\n        <Text>{type}</Text>\n      </View>\n\n      <View>\n        <Text>Moves: {moves.join(', ')}</Text>\n      </View>\n      <View>\n        <Text>Weakness: {weaknesses.join(', ')}</Text>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 16,\n    borderWidth: 2,\n    padding: 16,\n    margin: 16,\n    ...Platform.select({\n      ios: {\n        shadowOffset: { width: 2, height: 2 },\n        shadowColor: '333',\n        shadowOpacity: 0.3,\n        shadowRadius: 4,\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 32,\n  },\n  name: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n  hp: {\n    fontSize: 22,\n  },\n  image: {\n    width: '100%',\n    height: 200,\n    marginBottom: 16,\n  },\n})\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Now the image block is perfectly positioned.")),(0,i.kt)("h3",{id:"conclusion"},"Conclusion:"),(0,i.kt)("p",null,"I'll stop here as we're halfway through the styling process. Let's continue with the remaining styles in Part 5."))}c.isMDXComponent=!0}}]);