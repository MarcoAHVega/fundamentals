"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[2022],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>x});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),s=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=s(n),d=r,x=c["".concat(p,".").concat(d)]||c[d]||m[d]||a;return n?o.createElement(x,l(l({ref:t},u),{},{components:n})):o.createElement(x,l({ref:t},u))}));function x(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1949:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:34},l="Gap",i={unversionedId:"6 React Native/Section 4: Layout/34 Gap",id:"6 React Native/Section 4: Layout/34 Gap",title:"Gap",description:"- In this video, we will delve into the flex properties that allow us to manage spacing between rows and columns in React Native.",source:"@site/docs/6 React Native/Section 4: Layout/34 Gap.md",sourceDirName:"6 React Native/Section 4: Layout",slug:"/6 React Native/Section 4: Layout/34 Gap",permalink:"/fundamentals/6 React Native/Section 4: Layout/34 Gap",draft:!1,tags:[],version:"current",sidebarPosition:34,frontMatter:{sidebar_position:34},sidebar:"tutorialSidebar",previous:{title:"Align Content",permalink:"/fundamentals/6 React Native/Section 4: Layout/33 Align Content"},next:{title:"Flex Basis",permalink:"/fundamentals/6 React Native/Section 4: Layout/35 Flex Basis"}},p={},s=[{value:"Getting Started",id:"getting-started",level:3},{value:"Row Gap Property",id:"row-gap-property",level:3},{value:"Column Gap Property",id:"column-gap-property",level:3},{value:"Shorthand Gap Property",id:"shorthand-gap-property",level:3},{value:"Summary",id:"summary",level:3}],u={toc:s},c="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"gap"},"Gap"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In this video, we will delve into the flex properties that allow us to manage spacing between rows and columns in React Native.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The three main properties we will cover are ",(0,r.kt)("inlineCode",{parentName:"p"},"rowGap"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"columnGap"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"gap"),"."))),(0,r.kt)("h3",{id:"getting-started"},"Getting Started"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Let's jump into VS Code and explore how these properties work.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Setting Up Rows and Columns:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"First, ensure that we have multiple rows and columns of items within the container.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To achieve this, let's:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Comment out ",(0,r.kt)("inlineCode",{parentName:"p"},"flex: 1"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Add a ",(0,r.kt)("inlineCode",{parentName:"p"},"height")," of 300")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Set ",(0,r.kt)("inlineCode",{parentName:"p"},"flexWrap")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"wrap")))))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    height: 300,\n    flexWrap: 'wrap',\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"also in Box.js, comment out the width and height to te box.abs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { View, Text, StyleSheet } from 'react-native'\n\nexport default function Box({ children, style }) {\n  return (\n    <View style={[styles.box, style]}>\n      <Text style={styles.text}>{children}</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  box: {\n    backgroundColor: '#fff',\n    padding: 20,\n    // width: 50,\n    // height: 50,\n  },\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'white',\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"With these styles applied, if we examine the UI, we can observe that items are organized in rows and columns.")),(0,r.kt)("h3",{id:"row-gap-property"},"Row Gap Property"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"rowGap")," property allows us to set the gap between rows.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For instance, if we set ",(0,r.kt)("inlineCode",{parentName:"p"},"rowGap")," to 20 and save the file,"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    height: 300,\n    flexWrap: 'wrap',\n    rowGap: 20,\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"we will notice a gap introduced between the rows.")),(0,r.kt)("h3",{id:"column-gap-property"},"Column Gap Property"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Similarly, the ",(0,r.kt)("inlineCode",{parentName:"p"},"columnGap")," property sets the gap between columns.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"By setting it to 30 and saving the file,"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    height: 300,\n    flexWrap: 'wrap',\n    rowGap: 20,\n    columnGap: 30,\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"we will see spacing between the columns.")),(0,r.kt)("h3",{id:"shorthand-gap-property"},"Shorthand Gap Property"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To specify the same gap for both rows and columns, you can utilize the ",(0,r.kt)("inlineCode",{parentName:"p"},"gap")," property.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Set ",(0,r.kt)("inlineCode",{parentName:"p"},"gap")," to 10,")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"comment out ",(0,r.kt)("inlineCode",{parentName:"p"},"rowGap")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"columnGap"),",")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"and save the file."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { StyleSheet, View } from 'react-native'\nimport Box from './components/Box'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Box style={{ backgroundColor: '#8e9b00' }}>Box 1</Box>\n      <Box style={{ backgroundColor: '#b65d1f' }}>Box 2</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 3</Box>\n      <Box style={{ backgroundColor: '#ab9156' }}>Box 4</Box>\n      <Box style={{ backgroundColor: '#6b0803' }}>Box 5</Box>\n      <Box style={{ backgroundColor: '#1c4c56' }}>Box 6</Box>\n      <Box style={{ backgroundColor: '#b95f21' }}>Box 7</Box>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    height: 300,\n    flexWrap: 'wrap',\n    // rowGap: 20,\n    // columnGap: 30,\n    gap: 10,\n    marginTop: 64,\n    borderWidth: 6,\n    borderColor: 'red',\n  },\n})\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This results in the same smaller gap between both rows and columns.")),(0,r.kt)("h3",{id:"summary"},"Summary"),(0,r.kt)("p",null,"In summary:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To set the gap between columns, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"columnGap")," property.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To set the gap between rows, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"rowGap")," property.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For a consistent gap between both rows and columns, employ the shorthand ",(0,r.kt)("inlineCode",{parentName:"p"},"gap")," property."))),(0,r.kt)("p",null,"By leveraging these properties, you can precisely control the spacing between rows and columns in your React Native layouts."))}m.isMDXComponent=!0}}]);