"use strict";(self.webpackChunkfundamentals=self.webpackChunkfundamentals||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"WEB DEVELOPMENT","href":"/fundamentals/","docId":"landing"},{"type":"category","label":"HTML","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HTML BASICS","href":"/fundamentals/1 HTML/1 HTML-basics","docId":"1 HTML/1 HTML-basics"}],"href":"/fundamentals/category/html"},{"type":"category","label":"CSS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CSS BASICS","href":"/fundamentals/2 CSS/1 CSS-basics","docId":"2 CSS/1 CSS-basics"},{"type":"link","label":"RESPONSIVE DESIGN","href":"/fundamentals/2 CSS/2 Responsive Design","docId":"2 CSS/2 Responsive Design"},{"type":"link","label":"FLEXBOX","href":"/fundamentals/2 CSS/3 Flexbox","docId":"2 CSS/3 Flexbox"},{"type":"link","label":"ADVANCED SELECTORS","href":"/fundamentals/2 CSS/4 Selectors","docId":"2 CSS/4 Selectors"},{"type":"link","label":"SHADOWS & VARIABLES","href":"/fundamentals/2 CSS/5 Shadows and Variables","docId":"2 CSS/5 Shadows and Variables"},{"type":"link","label":"ANIMATIONS","href":"/fundamentals/2 CSS/6 Animations Transitions and Transform","docId":"2 CSS/6 Animations Transitions and Transform"},{"type":"link","label":"CSS GRID","href":"/fundamentals/2 CSS/7 CSS Grid","docId":"2 CSS/7 CSS Grid"},{"type":"link","label":"SASS","href":"/fundamentals/2 CSS/8 Sass","docId":"2 CSS/8 Sass"}],"href":"/fundamentals/category/css"},{"type":"category","label":"JAVASCRIPT","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Section 0:  Introduction","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What Is JavaScript?","href":"/fundamentals/3 Javascript/introduction/What Is JavaScript","docId":"3 Javascript/introduction/What Is JavaScript"}],"href":"/fundamentals/category/section-0--introduction"},{"type":"category","label":"Section 1: Variables, Data Types, Methods & More","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"The JavaScript Console","href":"/fundamentals/3 Javascript/variables-data-types-docs/console","docId":"3 Javascript/variables-data-types-docs/console"},{"type":"link","label":"Comments & Shortcuts","href":"/fundamentals/3 Javascript/variables-data-types-docs/comments-shortcuts","docId":"3 Javascript/variables-data-types-docs/comments-shortcuts"},{"type":"link","label":"Variables","href":"/fundamentals/3 Javascript/variables-data-types-docs/variables","docId":"3 Javascript/variables-data-types-docs/variables"},{"type":"link","label":"Data Types","href":"/fundamentals/3 Javascript/variables-data-types-docs/data-types","docId":"3 Javascript/variables-data-types-docs/data-types"},{"type":"link","label":"Stack vs Heap Memory Allocation","href":"/fundamentals/3 Javascript/variables-data-types-docs/stack_heap","docId":"3 Javascript/variables-data-types-docs/stack_heap"},{"type":"link","label":"Type Conversion","href":"/fundamentals/3 Javascript/variables-data-types-docs/type-conversion","docId":"3 Javascript/variables-data-types-docs/type-conversion"},{"type":"link","label":"Operators & Arithmetic","href":"/fundamentals/3 Javascript/variables-data-types-docs/operators","docId":"3 Javascript/variables-data-types-docs/operators"},{"type":"link","label":"Type Coercion","href":"/fundamentals/3 Javascript/variables-data-types-docs/type-coercion","docId":"3 Javascript/variables-data-types-docs/type-coercion"},{"type":"link","label":"Working with Strings","href":"/fundamentals/3 Javascript/variables-data-types-docs/strings","docId":"3 Javascript/variables-data-types-docs/strings"},{"type":"link","label":"Capitalize Challenge","href":"/fundamentals/3 Javascript/variables-data-types-docs/capitalize-challenge","docId":"3 Javascript/variables-data-types-docs/capitalize-challenge"},{"type":"link","label":"Working with Numbers","href":"/fundamentals/3 Javascript/variables-data-types-docs/numbers","docId":"3 Javascript/variables-data-types-docs/numbers"},{"type":"link","label":"Math Object","href":"/fundamentals/3 Javascript/variables-data-types-docs/math-object","docId":"3 Javascript/variables-data-types-docs/math-object"},{"type":"link","label":"Number Challenge","href":"/fundamentals/3 Javascript/variables-data-types-docs/number-challenge","docId":"3 Javascript/variables-data-types-docs/number-challenge"},{"type":"link","label":"Working With Dates","href":"/fundamentals/3 Javascript/variables-data-types-docs/dates-and-times","docId":"3 Javascript/variables-data-types-docs/dates-and-times"},{"type":"link","label":"Date Methods","href":"/fundamentals/3 Javascript/variables-data-types-docs/date-methods","docId":"3 Javascript/variables-data-types-docs/date-methods"}],"href":"/fundamentals/category/section-1-variables-data-types-methods--more"},{"type":"category","label":"Section 2: Arrays & Objects","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Array Basics","href":"/fundamentals/3 Javascript/arrays-and-objects-docs/array-basics","docId":"3 Javascript/arrays-and-objects-docs/array-basics"},{"type":"link","label":"Array Methods","href":"/fundamentals/3 Javascript/arrays-and-objects-docs/array-methods","docId":"3 Javascript/arrays-and-objects-docs/array-methods"},{"type":"link","label":"Nesting, concat, spread & Array Object Methods","href":"/fundamentals/3 Javascript/arrays-and-objects-docs/array-nesting-concat-spread","docId":"3 Javascript/arrays-and-objects-docs/array-nesting-concat-spread"},{"type":"link","label":"Array Challenges","href":"/fundamentals/3 Javascript/arrays-and-objects-docs/array-challenges","docId":"3 Javascript/arrays-and-objects-docs/array-challenges"},{"type":"link","label":"Object Literals","href":"/fundamentals/3 Javascript/arrays-and-objects-docs/object-literals","docId":"3 Javascript/arrays-and-objects-docs/object-literals"},{"type":"link","label":"Object Nesting, spreading, methods and more","href":"/fundamentals/3 Javascript/arrays-and-objects-docs/object-spread-methods","docId":"3 Javascript/arrays-and-objects-docs/object-spread-methods"},{"type":"link","label":"Destructuring & Naming","href":"/fundamentals/3 Javascript/arrays-and-objects-docs/destructuring-naming","docId":"3 Javascript/arrays-and-objects-docs/destructuring-naming"},{"type":"link","label":"An Intro to JSON","href":"/fundamentals/3 Javascript/arrays-and-objects-docs/json-intro","docId":"3 Javascript/arrays-and-objects-docs/json-intro"},{"type":"link","label":"Object Challenge","href":"/fundamentals/3 Javascript/arrays-and-objects-docs/object-challenge","docId":"3 Javascript/arrays-and-objects-docs/object-challenge"}],"href":"/fundamentals/category/section-2-arrays--objects"},{"type":"category","label":"Section 3: Functions, Scope & Execution Context","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Function Basics","href":"/fundamentals/3 Javascript/functions-scope-docs/function-basics","docId":"3 Javascript/functions-scope-docs/function-basics"},{"type":"link","label":"More on Params & Arguments","href":"/fundamentals/3 Javascript/functions-scope-docs/function-arguments","docId":"3 Javascript/functions-scope-docs/function-arguments"},{"type":"link","label":"Global & Function Scope","href":"/fundamentals/3 Javascript/functions-scope-docs/global-function-scope","docId":"3 Javascript/functions-scope-docs/global-function-scope"},{"type":"link","label":"Block Scope","href":"/fundamentals/3 Javascript/functions-scope-docs/block-scope","docId":"3 Javascript/functions-scope-docs/block-scope"},{"type":"link","label":"Nested Scope","href":"/fundamentals/3 Javascript/functions-scope-docs/nested-scope","docId":"3 Javascript/functions-scope-docs/nested-scope"},{"type":"link","label":"Function Declaration vs Function Expression","href":"/fundamentals/3 Javascript/functions-scope-docs/declaration-vs-expression","docId":"3 Javascript/functions-scope-docs/declaration-vs-expression"},{"type":"link","label":"Arrow Functions","href":"/fundamentals/3 Javascript/functions-scope-docs/arrow-functions","docId":"3 Javascript/functions-scope-docs/arrow-functions"},{"type":"link","label":"Immediately Invoked Function Expressions (IIFE)","href":"/fundamentals/3 Javascript/functions-scope-docs/immediately-invoked-functions","docId":"3 Javascript/functions-scope-docs/immediately-invoked-functions"},{"type":"link","label":"Function Challenges","href":"/fundamentals/3 Javascript/functions-scope-docs/function-challenges","docId":"3 Javascript/functions-scope-docs/function-challenges"},{"type":"link","label":"Execution context","href":"/fundamentals/3 Javascript/functions-scope-docs/execution-context","docId":"3 Javascript/functions-scope-docs/execution-context"},{"type":"link","label":"The Call Stack","href":"/fundamentals/3 Javascript/functions-scope-docs/call-stack","docId":"3 Javascript/functions-scope-docs/call-stack"}],"href":"/fundamentals/category/section-3-functions-scope--execution-context"},{"type":"category","label":"Section 4: Logic & Control Flow","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"If Statements","href":"/fundamentals/3 Javascript/logic-control-scope-docs/if-statements","docId":"3 Javascript/logic-control-scope-docs/if-statements"},{"type":"link","label":"Else-if and Nesting","href":"/fundamentals/3 Javascript/logic-control-scope-docs/else-if-and-nesting","docId":"3 Javascript/logic-control-scope-docs/else-if-and-nesting"},{"type":"link","label":"Switches","href":"/fundamentals/3 Javascript/logic-control-scope-docs/switches","docId":"3 Javascript/logic-control-scope-docs/switches"},{"type":"link","label":"Calculator Challenge","href":"/fundamentals/3 Javascript/logic-control-scope-docs/calculator-challenge","docId":"3 Javascript/logic-control-scope-docs/calculator-challenge"},{"type":"link","label":"Truthy & Falsy Values","href":"/fundamentals/3 Javascript/logic-control-scope-docs/truthy-falsy","docId":"3 Javascript/logic-control-scope-docs/truthy-falsy"},{"type":"link","label":"Logical Operators","href":"/fundamentals/3 Javascript/logic-control-scope-docs/logical-operators","docId":"3 Javascript/logic-control-scope-docs/logical-operators"},{"type":"link","label":"Logical Assignment","href":"/fundamentals/3 Javascript/logic-control-scope-docs/logical-assignment","docId":"3 Javascript/logic-control-scope-docs/logical-assignment"},{"type":"link","label":"Ternary operator","href":"/fundamentals/3 Javascript/logic-control-scope-docs/ternary-operator","docId":"3 Javascript/logic-control-scope-docs/ternary-operator"}],"href":"/fundamentals/category/section-4-logic--control-flow"},{"type":"category","label":"Section 5: Loops, Iteration & High Order Array Methods","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"For Loop","href":"/fundamentals/3 Javascript/iteration-array-methods-docs/for-loop","docId":"3 Javascript/iteration-array-methods-docs/for-loop"},{"type":"link","label":"Break & Continue","href":"/fundamentals/3 Javascript/iteration-array-methods-docs/break-and-continue","docId":"3 Javascript/iteration-array-methods-docs/break-and-continue"},{"type":"link","label":"While Loops & Do While Loops","href":"/fundamentals/3 Javascript/iteration-array-methods-docs/while-do-while-loop","docId":"3 Javascript/iteration-array-methods-docs/while-do-while-loop"},{"type":"link","label":"FizzBuzz Challenge","href":"/fundamentals/3 Javascript/iteration-array-methods-docs/fizzbuzz-challenge","docId":"3 Javascript/iteration-array-methods-docs/fizzbuzz-challenge"},{"type":"link","label":"For Of Loop","href":"/fundamentals/3 Javascript/iteration-array-methods-docs/for-of-loop","docId":"3 Javascript/iteration-array-methods-docs/for-of-loop"},{"type":"link","label":"For In Loop","href":"/fundamentals/3 Javascript/iteration-array-methods-docs/for-in-loop","docId":"3 Javascript/iteration-array-methods-docs/for-in-loop"},{"type":"link","label":"forEach","href":"/fundamentals/3 Javascript/iteration-array-methods-docs/forEach","docId":"3 Javascript/iteration-array-methods-docs/forEach"},{"type":"link","label":"Filter() Method","href":"/fundamentals/3 Javascript/iteration-array-methods-docs/filter","docId":"3 Javascript/iteration-array-methods-docs/filter"},{"type":"link","label":"map() Method","href":"/fundamentals/3 Javascript/iteration-array-methods-docs/map","docId":"3 Javascript/iteration-array-methods-docs/map"},{"type":"link","label":"reduce() Method","href":"/fundamentals/3 Javascript/iteration-array-methods-docs/reduce","docId":"3 Javascript/iteration-array-methods-docs/reduce"},{"type":"link","label":"Array Method Challenges","href":"/fundamentals/3 Javascript/iteration-array-methods-docs/array-method-challenges","docId":"3 Javascript/iteration-array-methods-docs/array-method-challenges"}],"href":"/fundamentals/category/section-5-loops-iteration--high-order-array-methods"},{"type":"category","label":"Section 6: DOM Manipulation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro To The DOM","href":"/fundamentals/3 Javascript/document-object-model-docs/what-is-the-dom","docId":"3 Javascript/document-object-model-docs/what-is-the-dom"},{"type":"link","label":"Examining the Document Object","href":"/fundamentals/3 Javascript/document-object-model-docs/examining-the-document-object","docId":"3 Javascript/document-object-model-docs/examining-the-document-object"},{"type":"link","label":"DOM Selectors - Single Elements","href":"/fundamentals/3 Javascript/document-object-model-docs/dom-selectors-single-elements","docId":"3 Javascript/document-object-model-docs/dom-selectors-single-elements"},{"type":"link","label":"DOM Selectors - Multiple Elements","href":"/fundamentals/3 Javascript/document-object-model-docs/dom-selectors-multiple-elements","docId":"3 Javascript/document-object-model-docs/dom-selectors-multiple-elements"},{"type":"link","label":"Traversing The DOM - Elements","href":"/fundamentals/3 Javascript/document-object-model-docs/traversing-the-dom-elements","docId":"3 Javascript/document-object-model-docs/traversing-the-dom-elements"},{"type":"link","label":"Traversing The DOM - Nodes","href":"/fundamentals/3 Javascript/document-object-model-docs/traversing-the-dom-nodes","docId":"3 Javascript/document-object-model-docs/traversing-the-dom-nodes"},{"type":"link","label":"Create Elements","href":"/fundamentals/3 Javascript/document-object-model-docs/create-elements","docId":"3 Javascript/document-object-model-docs/create-elements"},{"type":"link","label":"Create Item - innerHTML vs createElement()","href":"/fundamentals/3 Javascript/document-object-model-docs/create-item-innerHTML-vs-createElement","docId":"3 Javascript/document-object-model-docs/create-item-innerHTML-vs-createElement"},{"type":"link","label":"Refactor To Use Multiple Functions","href":"/fundamentals/3 Javascript/document-object-model-docs/refactor-to-multiple-functions","docId":"3 Javascript/document-object-model-docs/refactor-to-multiple-functions"},{"type":"link","label":"Insert Elements, Text & HTML","href":"/fundamentals/3 Javascript/document-object-model-docs/insert-elements","docId":"3 Javascript/document-object-model-docs/insert-elements"},{"type":"link","label":"Custom insertAfter() Challenge","href":"/fundamentals/3 Javascript/document-object-model-docs/custom-insertafter","docId":"3 Javascript/document-object-model-docs/custom-insertafter"},{"type":"link","label":"Replacing DOM Elements","href":"/fundamentals/3 Javascript/document-object-model-docs/replace-elements","docId":"3 Javascript/document-object-model-docs/replace-elements"},{"type":"link","label":"Remove DOM Elements","href":"/fundamentals/3 Javascript/document-object-model-docs/remove-elements","docId":"3 Javascript/document-object-model-docs/remove-elements"}],"href":"/fundamentals/category/section-6-dom-manipulation"},{"type":"category","label":"Section 7: Events","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Event Listeners","href":"/fundamentals/3 Javascript/events-docs/event-listeners","docId":"3 Javascript/events-docs/event-listeners"},{"type":"link","label":"Mouse Events","href":"/fundamentals/3 Javascript/events-docs/mouse-events","docId":"3 Javascript/events-docs/mouse-events"},{"type":"link","label":"The Event Object","href":"/fundamentals/3 Javascript/events-docs/event-object","docId":"3 Javascript/events-docs/event-object"},{"type":"link","label":"Keyboard Events","href":"/fundamentals/3 Javascript/events-docs/keyboard-events","docId":"3 Javascript/events-docs/keyboard-events"},{"type":"link","label":"Keycode Mini-project","href":"/fundamentals/3 Javascript/events-docs/keycode-mini-project","docId":"3 Javascript/events-docs/keycode-mini-project"},{"type":"link","label":"Input Events","href":"/fundamentals/3 Javascript/events-docs/input-events","docId":"3 Javascript/events-docs/input-events"},{"type":"link","label":"Form Submission","href":"/fundamentals/3 Javascript/events-docs/form-submission","docId":"3 Javascript/events-docs/form-submission"},{"type":"link","label":"Event Bubbling","href":"/fundamentals/3 Javascript/events-docs/event-bubbling","docId":"3 Javascript/events-docs/event-bubbling"},{"type":"link","label":"Event Delegation","href":"/fundamentals/3 Javascript/events-docs/event-delegation","docId":"3 Javascript/events-docs/event-delegation"},{"type":"link","label":"Window Events & Page Loading","href":"/fundamentals/3 Javascript/events-docs/window-events","docId":"3 Javascript/events-docs/window-events"}],"href":"/fundamentals/category/section-7-events"},{"type":"category","label":"Section 8: Shopping List Project","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Shopping List Project Intro","href":"/fundamentals/3 Javascript/shopping-list-project-docs/project-intro","docId":"3 Javascript/shopping-list-project-docs/project-intro"},{"type":"link","label":"Add Items To List","href":"/fundamentals/3 Javascript/shopping-list-project-docs/add-items-to-list","docId":"3 Javascript/shopping-list-project-docs/add-items-to-list"},{"type":"link","label":"Setting Up Git & GitHub","href":"/fundamentals/3 Javascript/shopping-list-project-docs/setting-up-git","docId":"3 Javascript/shopping-list-project-docs/setting-up-git"},{"type":"link","label":"Remove & Clear Items","href":"/fundamentals/3 Javascript/shopping-list-project-docs/remove-clear-items","docId":"3 Javascript/shopping-list-project-docs/remove-clear-items"},{"type":"link","label":"Clear UI State","href":"/fundamentals/3 Javascript/shopping-list-project-docs/clear-ui-state","docId":"3 Javascript/shopping-list-project-docs/clear-ui-state"},{"type":"link","label":"Filter Items","href":"/fundamentals/3 Javascript/shopping-list-project-docs/filter-items","docId":"3 Javascript/shopping-list-project-docs/filter-items"},{"type":"link","label":"Local Storage Crash Course","href":"/fundamentals/3 Javascript/shopping-list-project-docs/localstorage-crash-course","docId":"3 Javascript/shopping-list-project-docs/localstorage-crash-course"},{"type":"link","label":"Add Items To LocalStorage","href":"/fundamentals/3 Javascript/shopping-list-project-docs/add-items-to-localstorage","docId":"3 Javascript/shopping-list-project-docs/add-items-to-localstorage"},{"type":"link","label":"Display Items From Local Storage","href":"/fundamentals/3 Javascript/shopping-list-project-docs/display-items-from-localstorage","docId":"3 Javascript/shopping-list-project-docs/display-items-from-localstorage"},{"type":"link","label":"Remove Items From Local Storage","href":"/fundamentals/3 Javascript/shopping-list-project-docs/remove-items-from-localstorage","docId":"3 Javascript/shopping-list-project-docs/remove-items-from-localstorage"},{"type":"link","label":"Set Edit Mode","href":"/fundamentals/3 Javascript/shopping-list-project-docs/set-edit-mode","docId":"3 Javascript/shopping-list-project-docs/set-edit-mode"},{"type":"link","label":"Update Item & Reset State","href":"/fundamentals/3 Javascript/shopping-list-project-docs/update-item-reset-state","docId":"3 Javascript/shopping-list-project-docs/update-item-reset-state"},{"type":"link","label":"Prevent Duplicate Entries","href":"/fundamentals/3 Javascript/shopping-list-project-docs/prevent-duplicate-entries","docId":"3 Javascript/shopping-list-project-docs/prevent-duplicate-entries"},{"type":"link","label":"Deploy To Netlify","href":"/fundamentals/3 Javascript/shopping-list-project-docs/deploy-to-netlify","docId":"3 Javascript/shopping-list-project-docs/deploy-to-netlify"}],"href":"/fundamentals/category/section-8-shopping-list-project"},{"type":"category","label":"Section 9: Asynchronous JavaScript","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Thread Of Execution","href":"/fundamentals/3 Javascript/asynchronous-javascript-docs/thread-of-execution","docId":"3 Javascript/asynchronous-javascript-docs/thread-of-execution"}],"href":"/fundamentals/category/section-9-asynchronous-javascript"}],"href":"/fundamentals/category/javascript"},{"type":"category","label":"REACT.JS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What is react?","href":"/fundamentals/4 React 18/1 what is react","docId":"4 React 18/1 what is react"},{"type":"link","label":"Why learn React?","href":"/fundamentals/4 React 18/2 Why learn React","docId":"4 React 18/2 Why learn React"},{"type":"link","label":"Setting up our development environment","href":"/fundamentals/4 React 18/3 Setup","docId":"4 React 18/3 Setup"},{"type":"link","label":"Create a new react app","href":"/fundamentals/4 React 18/4 create a new react app","docId":"4 React 18/4 create a new react app"},{"type":"link","label":"The applications folder structure and files","href":"/fundamentals/4 React 18/5 folder structure and files","docId":"4 React 18/5 folder structure and files"},{"type":"link","label":"React 17 vs React 18","href":"/fundamentals/4 React 18/6 updating to react 18","docId":"4 React 18/6 updating to react 18"},{"type":"link","label":"What is a component?","href":"/fundamentals/4 React 18/7 What is a component","docId":"4 React 18/7 What is a component"},{"type":"link","label":"Function Components","href":"/fundamentals/4 React 18/8 Function Components","docId":"4 React 18/8 Function Components"},{"type":"link","label":"Create a function component","href":"/fundamentals/4 React 18/9 creating a new component","docId":"4 React 18/9 creating a new component"},{"type":"link","label":"Default export vs named export","href":"/fundamentals/4 React 18/10 default and named exports","docId":"4 React 18/10 default and named exports"},{"type":"link","label":"JSX","href":"/fundamentals/4 React 18/11 JSX","docId":"4 React 18/11 JSX"},{"type":"link","label":"Props","href":"/fundamentals/4 React 18/12 props","docId":"4 React 18/12 props"},{"type":"link","label":"State","href":"/fundamentals/4 React 18/13 state","docId":"4 React 18/13 state"},{"type":"link","label":"Hooks at a glance","href":"/fundamentals/4 React 18/14 Hooks at a glance","docId":"4 React 18/14 Hooks at a glance"},{"type":"link","label":"Event handling","href":"/fundamentals/4 React 18/15 event handling","docId":"4 React 18/15 event handling"},{"type":"link","label":"Parent and child component communication","href":"/fundamentals/4 React 18/16 parent and child  communication","docId":"4 React 18/16 parent and child  communication"},{"type":"link","label":"Conditional rendering","href":"/fundamentals/4 React 18/17 conditional rendering","docId":"4 React 18/17 conditional rendering"},{"type":"link","label":"List rendering","href":"/fundamentals/4 React 18/18 list rendering","docId":"4 React 18/18 list rendering"},{"type":"link","label":"Styling","href":"/fundamentals/4 React 18/19 styling","docId":"4 React 18/19 styling"},{"type":"link","label":"Forms","href":"/fundamentals/4 React 18/20 forms","docId":"4 React 18/20 forms"},{"type":"link","label":"HTTP GET & POST request","href":"/fundamentals/4 React 18/21 HTTP GET & POST request","docId":"4 React 18/21 HTTP GET & POST request"},{"type":"link","label":"UseTransition hook","href":"/fundamentals/4 React 18/22 useTransition hook","docId":"4 React 18/22 useTransition hook"},{"type":"link","label":"Further learning","href":"/fundamentals/4 React 18/23 further learning","docId":"4 React 18/23 further learning"}],"href":"/fundamentals/category/reactjs"},{"type":"category","label":"NEXT.JS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Course Overview","href":"/fundamentals/5 Next.js 13/1 Course Overview","docId":"5 Next.js 13/1 Course Overview"},{"type":"link","label":"Introduction to Next.js","href":"/fundamentals/5 Next.js 13/2 Introduction to Next.js","docId":"5 Next.js 13/2 Introduction to Next.js"},{"type":"link","label":"Setup and Create Your First Next.js App","href":"/fundamentals/5 Next.js 13/3 Setup and Create Your First Next.js App","docId":"5 Next.js 13/3 Setup and Create Your First Next.js App"},{"type":"link","label":"new project folder clean up","href":"/fundamentals/5 Next.js 13/4 new project folder clean up","docId":"5 Next.js 13/4 new project folder clean up"},{"type":"link","label":"Pages","href":"/fundamentals/5 Next.js 13/5 Pages","docId":"5 Next.js 13/5 Pages"},{"type":"link","label":"Create Pages","href":"/fundamentals/5 Next.js 13/6 Create Pages","docId":"5 Next.js 13/6 Create Pages"},{"type":"link","label":"Linking and Navigation","href":"/fundamentals/5 Next.js 13/7 Linking and Navigation","docId":"5 Next.js 13/7 Linking and Navigation"},{"type":"link","label":"Layout","href":"/fundamentals/5 Next.js 13/8 Layout","docId":"5 Next.js 13/8 Layout"},{"type":"link","label":"Working with Images, Fonts, and Styling Your App","href":"/fundamentals/5 Next.js 13/9 Working with Images, Fonts, and Styling","docId":"5 Next.js 13/9 Working with Images, Fonts, and Styling"},{"type":"link","label":"Font in Next.js","href":"/fundamentals/5 Next.js 13/10 Font in Next.js","docId":"5 Next.js 13/10 Font in Next.js"},{"type":"link","label":"Styling in Next.js","href":"/fundamentals/5 Next.js 13/11 Styling in Next.js","docId":"5 Next.js 13/11 Styling in Next.js"},{"type":"link","label":"CSS modules","href":"/fundamentals/5 Next.js 13/12 CSS modules","docId":"5 Next.js 13/12 CSS modules"},{"type":"link","label":"Global Styles","href":"/fundamentals/5 Next.js 13/13 Global Styles","docId":"5 Next.js 13/13 Global Styles"},{"type":"link","label":"Image in Next.js","href":"/fundamentals/5 Next.js 13/14 Image in Next.js","docId":"5 Next.js 13/14 Image in Next.js"},{"type":"link","label":"Learning Rendering and Data Fetching","href":"/fundamentals/5 Next.js 13/15 Learning Rendering and Data Fetching","docId":"5 Next.js 13/15 Learning Rendering and Data Fetching"},{"type":"link","label":"Component Level Rendering","href":"/fundamentals/5 Next.js 13/16 Component Level Rendering","docId":"5 Next.js 13/16 Component Level Rendering"},{"type":"link","label":"Data Fetching Approaches","href":"/fundamentals/5 Next.js 13/17 Data Fetching Approaches","docId":"5 Next.js 13/17 Data Fetching Approaches"},{"type":"link","label":"Fetch in Next.js","href":"/fundamentals/5 Next.js 13/18 Fetch in Next.js","docId":"5 Next.js 13/18 Fetch in Next.js"},{"type":"link","label":"Exploring Dynamic Routing in Next.js","href":"/fundamentals/5 Next.js 13/19 Exploring Dynamic Routing in Next.js","docId":"5 Next.js 13/19 Exploring Dynamic Routing in Next.js"},{"type":"link","label":"Generating Static Params","href":"/fundamentals/5 Next.js 13/20 Generating Static Params","docId":"5 Next.js 13/20 Generating Static Params"},{"type":"link","label":"Deploying Your Next.js App and Migrating Existing Apps to Next.js","href":"/fundamentals/5 Next.js 13/21 Deploying and Migrating to Next.js","docId":"5 Next.js 13/21 Deploying and Migrating to Next.js"}],"href":"/fundamentals/category/nextjs"},{"type":"category","label":"REACT NATIVE","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/fundamentals/6 React Native/1 Introduction","docId":"6 React Native/1 Introduction"},{"type":"link","label":"Expo vs React Native","href":"/fundamentals/6 React Native/2 Expo vs React Native","docId":"6 React Native/2 Expo vs React Native"},{"type":"link","label":"Hello World","href":"/fundamentals/6 React Native/3 Hello World","docId":"6 React Native/3 Hello World"},{"type":"link","label":"Running the App on a Device","href":"/fundamentals/6 React Native/4 Running App on Device","docId":"6 React Native/4 Running App on Device"},{"type":"link","label":"Running the App on an iOS Simulator","href":"/fundamentals/6 React Native/5 Running App on iPhone Simulator","docId":"6 React Native/5 Running App on iPhone Simulator"},{"type":"link","label":"Running the App on an Android Emulator","href":"/fundamentals/6 React Native/6 Running App on Android Emulator","docId":"6 React Native/6 Running App on Android Emulator"},{"type":"link","label":"Core Components","href":"/fundamentals/6 React Native/7 Core Components","docId":"6 React Native/7 Core Components"},{"type":"link","label":"View Component","href":"/fundamentals/6 React Native/8 View","docId":"6 React Native/8 View"},{"type":"link","label":"Text Component","href":"/fundamentals/6 React Native/9 Text","docId":"6 React Native/9 Text"},{"type":"link","label":"Image Component","href":"/fundamentals/6 React Native/10 Image","docId":"6 React Native/10 Image"}],"href":"/fundamentals/category/react-native"}]},"docs":{"1 HTML/1 HTML-basics":{"id":"1 HTML/1 HTML-basics","title":"HTML BASICS","description":"1 Doctype & Basic Layout","sidebar":"tutorialSidebar"},"2 CSS/1 CSS-basics":{"id":"2 CSS/1 CSS-basics","title":"CSS BASICS","description":"---","sidebar":"tutorialSidebar"},"2 CSS/2 Responsive Design":{"id":"2 CSS/2 Responsive Design","title":"RESPONSIVE DESIGN","description":"---","sidebar":"tutorialSidebar"},"2 CSS/3 Flexbox":{"id":"2 CSS/3 Flexbox","title":"FLEXBOX","description":"---","sidebar":"tutorialSidebar"},"2 CSS/4 Selectors":{"id":"2 CSS/4 Selectors","title":"ADVANCED SELECTORS","description":"---","sidebar":"tutorialSidebar"},"2 CSS/5 Shadows and Variables":{"id":"2 CSS/5 Shadows and Variables","title":"SHADOWS & VARIABLES","description":"---","sidebar":"tutorialSidebar"},"2 CSS/6 Animations Transitions and Transform":{"id":"2 CSS/6 Animations Transitions and Transform","title":"ANIMATIONS","description":"---","sidebar":"tutorialSidebar"},"2 CSS/7 CSS Grid":{"id":"2 CSS/7 CSS Grid","title":"CSS GRID","description":"---","sidebar":"tutorialSidebar"},"2 CSS/8 Sass":{"id":"2 CSS/8 Sass","title":"SASS","description":"---","sidebar":"tutorialSidebar"},"3 Javascript/arrays-and-objects-docs/array-basics":{"id":"3 Javascript/arrays-and-objects-docs/array-basics","title":"Array Basics","description":"Arrays are a special type of object in JavaScript. Arrays are also what we call a data structure, which is just that, a way of structuring data. Lets look at a basic Array","sidebar":"tutorialSidebar"},"3 Javascript/arrays-and-objects-docs/array-challenges":{"id":"3 Javascript/arrays-and-objects-docs/array-challenges","title":"Array Challenges","description":"Now that we have gone over some basic array stuff, let\'s try some simple challenges. I would suggest trying these using just what you remember from the past sections, but if you need to look back, that\'s fine as well.","sidebar":"tutorialSidebar"},"3 Javascript/arrays-and-objects-docs/array-methods":{"id":"3 Javascript/arrays-and-objects-docs/array-methods","title":"Array Methods","description":"As we talked about earlier, arrays are a special kind of object. Objects have properties and methods. In JavaScript, those methods are stored in the prototype chain. We\'ll talk much more about prototypes later on, but we already saw that both string objects and number objects have properties and methods in their prototypes.","sidebar":"tutorialSidebar"},"3 Javascript/arrays-and-objects-docs/array-nesting-concat-spread":{"id":"3 Javascript/arrays-and-objects-docs/array-nesting-concat-spread","title":"Nesting, concat, spread & Array Object Methods","description":"To get you more familiar with arrays, we are going to look at nesting, concatenation and the spread operator","sidebar":"tutorialSidebar"},"3 Javascript/arrays-and-objects-docs/destructuring-naming":{"id":"3 Javascript/arrays-and-objects-docs/destructuring-naming","title":"Destructuring & Naming","description":"Variables with the same name","sidebar":"tutorialSidebar"},"3 Javascript/arrays-and-objects-docs/json-intro":{"id":"3 Javascript/arrays-and-objects-docs/json-intro","title":"An Intro to JSON","description":"JSON is something that you will be working with a lot as a JavaScript developer. JSON stands for JavaScript Object Notation and is a lightweight data-interchange format. It is essentially a way of storing data in a simple, human-readable format.","sidebar":"tutorialSidebar"},"3 Javascript/arrays-and-objects-docs/object-challenge":{"id":"3 Javascript/arrays-and-objects-docs/object-challenge","title":"Object Challenge","description":"Step 1","sidebar":"tutorialSidebar"},"3 Javascript/arrays-and-objects-docs/object-literals":{"id":"3 Javascript/arrays-and-objects-docs/object-literals","title":"Object Literals","description":"I want to talk about a very common JavaScript data structure that holds key/value pairs called an object literal. We can also create objects using a constructor, but I will get into that later on. The main difference between using a constructor and an object literal is that the object literal is a singleton, meaning that it is a single instance of the object. With a constructor, we can create multiple instances of the object. Most of the time, we will use the object literal syntax.","sidebar":"tutorialSidebar"},"3 Javascript/arrays-and-objects-docs/object-spread-methods":{"id":"3 Javascript/arrays-and-objects-docs/object-spread-methods","title":"Object Nesting, spreading, methods and more","description":"So we saw how to create object literals in JavaScript. I want to go a bit deeper and look at nesting, the spread operator as well as some static methods on the Object constructor.","sidebar":"tutorialSidebar"},"3 Javascript/asynchronous-javascript-docs/thread-of-execution":{"id":"3 Javascript/asynchronous-javascript-docs/thread-of-execution","title":"Thread Of Execution","description":"JavaScript is Synchronous","sidebar":"tutorialSidebar"},"3 Javascript/document-object-model-docs/create-elements":{"id":"3 Javascript/document-object-model-docs/create-elements","title":"Create Elements","description":"So we know how to select elements, navigate to related elements, and manipulate them. Now let\'s look at how to create elements. With JavaScript, we can create any DOM element we want and then insert it into the document.","sidebar":"tutorialSidebar"},"3 Javascript/document-object-model-docs/create-item-innerHTML-vs-createElement":{"id":"3 Javascript/document-object-model-docs/create-item-innerHTML-vs-createElement","title":"Create Item - innerHTML vs createElement()","description":"Now that you know the basics of creating an element within your JavaScript, I want to create a function that we can run to add a new item to the shopping list. There are some really important things I want to show you when it comes to the different ways of doing this. There\'s a quick and dirty solution, which involves just setting the innerHTML to whatever you want and then there\'s a cleaner and more performant way of creating all of your elements and then inserting them into the DOM. I\'m going to show you both ways.","sidebar":"tutorialSidebar"},"3 Javascript/document-object-model-docs/custom-insertafter":{"id":"3 Javascript/document-object-model-docs/custom-insertafter","title":"Custom insertAfter() Challenge","description":"Instructions","sidebar":"tutorialSidebar"},"3 Javascript/document-object-model-docs/dom-selectors-multiple-elements":{"id":"3 Javascript/document-object-model-docs/dom-selectors-multiple-elements","title":"DOM Selectors - Multiple Elements","description":"So we looked at getElementById and querySelector, which will select on element from the DOM so that we can do whatever we want with it. But what if we want to select multiple elements, such as all of the list items in our shopping list? We have a few methods that we can use for this.","sidebar":"tutorialSidebar"},"3 Javascript/document-object-model-docs/dom-selectors-single-elements":{"id":"3 Javascript/document-object-model-docs/dom-selectors-single-elements","title":"DOM Selectors - Single Elements","description":"In the last video, we looked at many of the properties available on the document object including properties that allowed us to select elements from the DOM in the form of HTMLCollections.","sidebar":"tutorialSidebar"},"3 Javascript/document-object-model-docs/examining-the-document-object":{"id":"3 Javascript/document-object-model-docs/examining-the-document-object","title":"Examining the Document Object","description":"Alright, so we know that the DOM is a tree of objects of elements, nodes and attributes. We also know that the document object is the root of the DOM tree. It offers extremely helpful methods for us to use to manipulate the DOM including methods to select elements, create elements, and so on. There\'s also a ton of properties that we can use to get information about the document and that\'s what I want to look at in this video.","sidebar":"tutorialSidebar"},"3 Javascript/document-object-model-docs/insert-elements":{"id":"3 Javascript/document-object-model-docs/insert-elements","title":"Insert Elements, Text & HTML","description":"We know how to select and create elements. We also learned how to insert an item into the DOM using appendChild(). There are other methods that we can use to insert elements, text and HTML into the DOM.","sidebar":"tutorialSidebar"},"3 Javascript/document-object-model-docs/refactor-to-multiple-functions":{"id":"3 Javascript/document-object-model-docs/refactor-to-multiple-functions","title":"Refactor To Use Multiple Functions","description":"In the last lesson, we created a function to add items to our shopping list. In that function, we created multiple elements. We created a list item, a button and an icon. I think that you should generally have functions do one thing. In this case our function did 3 things. Let\'s refactor this code into multiple functions that we can reuse if needed.","sidebar":"tutorialSidebar"},"3 Javascript/document-object-model-docs/remove-elements":{"id":"3 Javascript/document-object-model-docs/remove-elements","title":"Remove DOM Elements","description":"Now let\'s look at methods to remove elements completely from the DOM.","sidebar":"tutorialSidebar"},"3 Javascript/document-object-model-docs/replace-elements":{"id":"3 Javascript/document-object-model-docs/replace-elements","title":"Replacing DOM Elements","description":"In the last video we looked at how to insert elements into the DOM. Now let\'s look at some methods to replace elements.","sidebar":"tutorialSidebar"},"3 Javascript/document-object-model-docs/traversing-the-dom-elements":{"id":"3 Javascript/document-object-model-docs/traversing-the-dom-elements","title":"Traversing The DOM - Elements","description":"Now we know how to select elements from the DOM, but many times, we need to select elements within elements or a sibling of an element, so it is important to know how relationships work so that we can traverse or move up and down the DOM.","sidebar":"tutorialSidebar"},"3 Javascript/document-object-model-docs/traversing-the-dom-nodes":{"id":"3 Javascript/document-object-model-docs/traversing-the-dom-nodes","title":"Traversing The DOM - Nodes","description":"Alright, so we looked at some important properties of the DOM that allow us to work with related elements. However, the DOM has more than just element nodes. In fact, there are 12 different types of nodes.","sidebar":"tutorialSidebar"},"3 Javascript/document-object-model-docs/what-is-the-dom":{"id":"3 Javascript/document-object-model-docs/what-is-the-dom","title":"Intro To The DOM","description":"Alright, so now we get to get to the fun stuff, working in the actual browser body and not just in the console. I think one of the big mistakes people make is they jump into the browser too quickly without understanding the stuff that we have talked about so far. Now that you understand control flow, functions, array methods, etc, you will be able to do more within the browser.","sidebar":"tutorialSidebar"},"3 Javascript/events-docs/event-bubbling":{"id":"3 Javascript/events-docs/event-bubbling","title":"Event Bubbling","description":"In this video, we\'re going to talk about something that is pretty important when it comes to handling events and that\'s event bubbling.","sidebar":"tutorialSidebar"},"3 Javascript/events-docs/event-delegation":{"id":"3 Javascript/events-docs/event-delegation","title":"Event Delegation","description":"Now that you understand how event bubbling works, you\'ll be able to learn how to use a powerful event handling pattern called event delegation.","sidebar":"tutorialSidebar"},"3 Javascript/events-docs/event-listeners":{"id":"3 Javascript/events-docs/event-listeners","title":"Event Listeners","description":"Alright, so we\'ve learned quite a bit about manipulating the DOM, however, many of the things that we have learned, are actions that you\'ll want to happen when some kind of event is triggered. So that\'s what we\'re going to be talking about for the next few sections.","sidebar":"tutorialSidebar"},"3 Javascript/events-docs/event-object":{"id":"3 Javascript/events-docs/event-object","title":"The Event Object","description":"We will look at some other types of events in the next video, but before we do that, I want to talk about the Event object. When we run an event handler (The function that runs when the event is triggered), There is an object that is passed in to it that gives us a bunch of information about the element that is attached to that event.","sidebar":"tutorialSidebar"},"3 Javascript/events-docs/form-submission":{"id":"3 Javascript/events-docs/form-submission","title":"Form Submission","description":"In the last video we looked at events on specific input fields. Now I want to look at form submission,which includes the submit event.","sidebar":"tutorialSidebar"},"3 Javascript/events-docs/input-events":{"id":"3 Javascript/events-docs/input-events","title":"Input Events","description":"Now let\'s look at the events that are fired when the user interacts with inputs. These are events we want to happen right when the user interacts with the input, not on a form submission. We will look at submitting forms in the next video.","sidebar":"tutorialSidebar"},"3 Javascript/events-docs/keyboard-events":{"id":"3 Javascript/events-docs/keyboard-events","title":"Keyboard Events","description":"In this video, we\'re going to look at events that have to do with keyboards. We usually use these on text input fields.","sidebar":"tutorialSidebar"},"3 Javascript/events-docs/keycode-mini-project":{"id":"3 Javascript/events-docs/keycode-mini-project","title":"Keycode Mini-project","description":"In the last video, we learned how to get the key that was pressed using the key, keyCode, and code properties. In this mini-project, we will create a simple keyboard event listener that will display all 3 of these properties on the screen. I think you\'ll be surprised how easy this will be.","sidebar":"tutorialSidebar"},"3 Javascript/events-docs/mouse-events":{"id":"3 Javascript/events-docs/mouse-events","title":"Mouse Events","description":"You now know how to listen for an event, but we have only looked at the click event. There are many more. Everything from mouse events to events that are part of APIs like the web animation API or websockets. In this video, I want to specifically look at mouse events.","sidebar":"tutorialSidebar"},"3 Javascript/events-docs/window-events":{"id":"3 Javascript/events-docs/window-events","title":"Window Events & Page Loading","description":"The global window object has a number of events that are fired when the window is interacted with. We\'re just going to use a simple html page with an h1 and some p tags.","sidebar":"tutorialSidebar"},"3 Javascript/functions-scope-docs/arrow-functions":{"id":"3 Javascript/functions-scope-docs/arrow-functions","title":"Arrow Functions","description":"Arrow functions were introduced in ES6 or ES2015. They are a shorter syntax for writing functions with some advantages such as being more compact, implicit returns and lexical scope. Let\'s look at the syntax.","sidebar":"tutorialSidebar"},"3 Javascript/functions-scope-docs/block-scope":{"id":"3 Javascript/functions-scope-docs/block-scope","title":"Block Scope","description":"Block scope is the scope that is available to all code inside of a block. A block is something like an if statement or any kind of loop. I know we haven\'t talked about these yet, but we\'ll get to them soon. Just know that they have their own scope.","sidebar":"tutorialSidebar"},"3 Javascript/functions-scope-docs/call-stack":{"id":"3 Javascript/functions-scope-docs/call-stack","title":"The Call Stack","description":"So we talked about the execution context in the last video and stepped through some code to see exactly what was happening under the hood. We had our global execution context and we had our function execution context. Well every function that was invoked was added to something we call the call stack. It\'s also referred to as the execution stack and many other terms. This keeps track of the functions that are currently being executed. You think of it as an execution context manager.","sidebar":"tutorialSidebar"},"3 Javascript/functions-scope-docs/declaration-vs-expression":{"id":"3 Javascript/functions-scope-docs/declaration-vs-expression","title":"Function Declaration vs Function Expression","description":"Up to this point, we know how to declare a function and call or invoke it. There is another way that we can create functions and that is with a function expression. Let\'s first declare a function just like we\'ve been doing.","sidebar":"tutorialSidebar"},"3 Javascript/functions-scope-docs/execution-context":{"id":"3 Javascript/functions-scope-docs/execution-context","title":"Execution context","description":"Inside the browser is a JavaScript engine that handles executing our JavaScript. That engine creates a special environment to handle the transformation and execution of code. This environment is called the execution context, and it contains the currently running code and everything that aids in its execution.","sidebar":"tutorialSidebar"},"3 Javascript/functions-scope-docs/function-arguments":{"id":"3 Javascript/functions-scope-docs/function-arguments","title":"More on Params & Arguments","description":"When we create a function, we can allow data to be passed in by creating parameters or \\"params\\". The data that we pass in when we invoke a function is called an argument. I want to look a little more into them.","sidebar":"tutorialSidebar"},"3 Javascript/functions-scope-docs/function-basics":{"id":"3 Javascript/functions-scope-docs/function-basics","title":"Function Basics","description":"Functions are a way to group code together. They make code more readable and easier to understand. Let\'s look at some of the basics.","sidebar":"tutorialSidebar"},"3 Javascript/functions-scope-docs/function-challenges":{"id":"3 Javascript/functions-scope-docs/function-challenges","title":"Function Challenges","description":"Now that you know the basics of how functions work, let\'s try a few challenges.","sidebar":"tutorialSidebar"},"3 Javascript/functions-scope-docs/global-function-scope":{"id":"3 Javascript/functions-scope-docs/global-function-scope","title":"Global & Function Scope","description":"Scope is an important concept, not only in JavaScript, but in many other programming languages. Scope is the current area or context of a specific piece of code. There are certain rules for what is accessible in specific scopes.","sidebar":"tutorialSidebar"},"3 Javascript/functions-scope-docs/immediately-invoked-functions":{"id":"3 Javascript/functions-scope-docs/immediately-invoked-functions","title":"Immediately Invoked Function Expressions (IIFE)","description":"Usually when we deal with functions, we define them and then when we want to run them, we call/invoke them. There may be times where you want to define a function and run it at the same time. In JavaScript, we can do this with an immediately invoked function expression, also called an IIFE (pronounced \\"Iffy\\").","sidebar":"tutorialSidebar"},"3 Javascript/functions-scope-docs/nested-scope":{"id":"3 Javascript/functions-scope-docs/nested-scope","title":"Nested Scope","description":"Nested Functions","sidebar":"tutorialSidebar"},"3 Javascript/introduction/What Is JavaScript":{"id":"3 Javascript/introduction/What Is JavaScript","title":"What Is JavaScript?","description":"What Is JavaScript?","sidebar":"tutorialSidebar"},"3 Javascript/iteration-array-methods-docs/array-method-challenges":{"id":"3 Javascript/iteration-array-methods-docs/array-method-challenges","title":"Array Method Challenges","description":"Challenge 1","sidebar":"tutorialSidebar"},"3 Javascript/iteration-array-methods-docs/break-and-continue":{"id":"3 Javascript/iteration-array-methods-docs/break-and-continue","title":"Break & Continue","description":"Break Statement","sidebar":"tutorialSidebar"},"3 Javascript/iteration-array-methods-docs/filter":{"id":"3 Javascript/iteration-array-methods-docs/filter","title":"Filter() Method","description":"filter() is a useful method that filters an array based on a provided function. Unlike forEach, it returns a value. That value is an array of items that pass a truth test.","sidebar":"tutorialSidebar"},"3 Javascript/iteration-array-methods-docs/fizzbuzz-challenge":{"id":"3 Javascript/iteration-array-methods-docs/fizzbuzz-challenge","title":"FizzBuzz Challenge","description":"When you go to get a job as a web developer, you may be given specific programming challenges. It\'s good to practice challenges like this not only for job interviews, but it sharpens your skills in general. You\'ll find that most challeneges have some kind of iteration involved. One of the most common challenges is the FizzBuzz challenge. This has to do with loops and conditionals, so I think that this is a good challenge at this point in the course.","sidebar":"tutorialSidebar"},"3 Javascript/iteration-array-methods-docs/for-in-loop":{"id":"3 Javascript/iteration-array-methods-docs/for-in-loop","title":"For In Loop","description":"The for in loop is used to loop through the properties of an object.","sidebar":"tutorialSidebar"},"3 Javascript/iteration-array-methods-docs/for-loop":{"id":"3 Javascript/iteration-array-methods-docs/for-loop","title":"For Loop","description":"A loop is a control structure. It provides a way to do iteration in programming. Iteration is a process where you repeat something over and over again until a certain condition is or is met. This can help automate tasks.","sidebar":"tutorialSidebar"},"3 Javascript/iteration-array-methods-docs/for-of-loop":{"id":"3 Javascript/iteration-array-methods-docs/for-of-loop","title":"For Of Loop","description":"The for of loop is used to loop through iterable objects, such as arrays and strings as well as some things that we have not talked about yet like maps and sets. They can replace for loops in many cases.","sidebar":"tutorialSidebar"},"3 Javascript/iteration-array-methods-docs/forEach":{"id":"3 Javascript/iteration-array-methods-docs/forEach","title":"forEach","description":"High Order Array Methods","sidebar":"tutorialSidebar"},"3 Javascript/iteration-array-methods-docs/map":{"id":"3 Javascript/iteration-array-methods-docs/map","title":"map() Method","description":"The map() creates a new array populated with the results of calling a provided function on every element in the array.","sidebar":"tutorialSidebar"},"3 Javascript/iteration-array-methods-docs/reduce":{"id":"3 Javascript/iteration-array-methods-docs/reduce","title":"reduce() Method","description":"The reduce() method can be a bit tricky, but it can be very useful. It takes an array and reduces it to a single value. A common use case is to get a total of all the values in an array. This would be useful in a shopping cart application.","sidebar":"tutorialSidebar"},"3 Javascript/iteration-array-methods-docs/while-do-while-loop":{"id":"3 Javascript/iteration-array-methods-docs/while-do-while-loop","title":"While Loops & Do While Loops","description":"In the last video, we looked at for loops, which are used to iterate over a block of code until a condition is met. A while and do while loop does the same thing using a different syntax. They work a bit different as well.","sidebar":"tutorialSidebar"},"3 Javascript/logic-control-scope-docs/calculator-challenge":{"id":"3 Javascript/logic-control-scope-docs/calculator-challenge","title":"Calculator Challenge","description":"Now that you know how to write functions and use control structures like if statements and switches, let\'s try to write a simple calculator.","sidebar":"tutorialSidebar"},"3 Javascript/logic-control-scope-docs/else-if-and-nesting":{"id":"3 Javascript/logic-control-scope-docs/else-if-and-nesting","title":"Else-if and Nesting","description":"There may be cases where you want to execute different code blocks depending on multiple conditions. In this case, you can use an else if statement.","sidebar":"tutorialSidebar"},"3 Javascript/logic-control-scope-docs/if-statements":{"id":"3 Javascript/logic-control-scope-docs/if-statements","title":"If Statements","description":"In any programming language, there will be times where you need to execute certain blocks of code and commands if a certain condition is true or false. Without the ability to have this type of conditional logic, programming wouldn\'t really be possible.","sidebar":"tutorialSidebar"},"3 Javascript/logic-control-scope-docs/logical-assignment":{"id":"3 Javascript/logic-control-scope-docs/logical-assignment","title":"Logical Assignment","description":"What we looked at in the last video was also technically logical assignment, however what we were evaluation was not necessarily the value that we were assigning. If what we are assigning is what we are evaluating, we can use a shorthand syntax.","sidebar":"tutorialSidebar"},"3 Javascript/logic-control-scope-docs/logical-operators":{"id":"3 Javascript/logic-control-scope-docs/logical-operators","title":"Logical Operators","description":"If we use the && and || in a conditional, this is how they work:","sidebar":"tutorialSidebar"},"3 Javascript/logic-control-scope-docs/switches":{"id":"3 Javascript/logic-control-scope-docs/switches","title":"Switches","description":"If you find yourself with a lot of else-if statements and you are testing a single value, you may want to consider using a switch statement. The switch evaluates an expression and then executes the first case that matches the value.","sidebar":"tutorialSidebar"},"3 Javascript/logic-control-scope-docs/ternary-operator":{"id":"3 Javascript/logic-control-scope-docs/ternary-operator","title":"Ternary operator","description":"In addition to if-else and switch, there is a third way to write conditional logic. This is called the ternary operator. It is basically a shorthand, one line if-else statement. The actual operator is just a question mark. Let\'s take a look at the syntax","sidebar":"tutorialSidebar"},"3 Javascript/logic-control-scope-docs/truthy-falsy":{"id":"3 Javascript/logic-control-scope-docs/truthy-falsy","title":"Truthy & Falsy Values","description":"So we looked at some control structures for evaluating some basic expressions such as if something is greater than a value. We can also pass in a single value.","sidebar":"tutorialSidebar"},"3 Javascript/shopping-list-project-docs/add-items-to-list":{"id":"3 Javascript/shopping-list-project-docs/add-items-to-list","title":"Add Items To List","description":"The first piece of functionality we want to add is the ability to add items to the list. We already have the HTML and CSS in place, so let\'s jump right into the JavaScript.","sidebar":"tutorialSidebar"},"3 Javascript/shopping-list-project-docs/add-items-to-localstorage":{"id":"3 Javascript/shopping-list-project-docs/add-items-to-localstorage","title":"Add Items To LocalStorage","description":"Now that we have add, remove, clear and filter working in the DOM, we need to be able to persist the items to localStorage in the browser.","sidebar":"tutorialSidebar"},"3 Javascript/shopping-list-project-docs/clear-ui-state":{"id":"3 Javascript/shopping-list-project-docs/clear-ui-state","title":"Clear UI State","description":"This is optional, but I want to make the UI a bit more dynamic by not showing the filter input or the clear all button unless there are actual items in the list. If you still have your hardcoded `` items in the HTML, you can remove them now.","sidebar":"tutorialSidebar"},"3 Javascript/shopping-list-project-docs/deploy-to-netlify":{"id":"3 Javascript/shopping-list-project-docs/deploy-to-netlify","title":"Deploy To Netlify","description":"When it comes to hosting, you have many many choices, especially for a simple HTML, CSS and JavaScript application. There are many services that will even host your project for free up to a limit (traffic and users).","sidebar":"tutorialSidebar"},"3 Javascript/shopping-list-project-docs/display-items-from-localstorage":{"id":"3 Javascript/shopping-list-project-docs/display-items-from-localstorage","title":"Display Items From Local Storage","description":"We are now able to add items to localStorage. Now we need to display them on the page when the page loads.","sidebar":"tutorialSidebar"},"3 Javascript/shopping-list-project-docs/filter-items":{"id":"3 Javascript/shopping-list-project-docs/filter-items","title":"Filter Items","description":"Now that we can add, remove and clear, we want to be able to type in the filter input and filter the items in the list.","sidebar":"tutorialSidebar"},"3 Javascript/shopping-list-project-docs/localstorage-crash-course":{"id":"3 Javascript/shopping-list-project-docs/localstorage-crash-course","title":"Local Storage Crash Course","description":"What is Local Storage?","sidebar":"tutorialSidebar"},"3 Javascript/shopping-list-project-docs/prevent-duplicate-entries":{"id":"3 Javascript/shopping-list-project-docs/prevent-duplicate-entries","title":"Prevent Duplicate Entries","description":"In this lesson, we will add a check to prevent duplicate entries from being added to the shopping list.","sidebar":"tutorialSidebar"},"3 Javascript/shopping-list-project-docs/project-intro":{"id":"3 Javascript/shopping-list-project-docs/project-intro","title":"Shopping List Project Intro","description":"Alright, so we have been working with the shopping list UI for a while. Now it\'s time to actually build it out and add the functionality. It may seem like a simple app, but we\'ll be writing about 200+ lines of code. When you don\'t use a framework, you have to account for everything. If you change the look of a button, you have to make sure it gets changed back to it\'s default state. Frameworks make things easier, by repainting the UI and stuff like that, but learning how to do things the vanilla way will make it that much easier for you to learn React or any other frontend framework.","sidebar":"tutorialSidebar"},"3 Javascript/shopping-list-project-docs/remove-clear-items":{"id":"3 Javascript/shopping-list-project-docs/remove-clear-items","title":"Remove & Clear Items","description":"Now that we can add items, let\'s add the ability to remove and clear items.","sidebar":"tutorialSidebar"},"3 Javascript/shopping-list-project-docs/remove-items-from-localstorage":{"id":"3 Javascript/shopping-list-project-docs/remove-items-from-localstorage","title":"Remove Items From Local Storage","description":"Now we want to be able to click the remove button and remove the item from the DOM and localStorage.","sidebar":"tutorialSidebar"},"3 Javascript/shopping-list-project-docs/set-edit-mode":{"id":"3 Javascript/shopping-list-project-docs/set-edit-mode","title":"Set Edit Mode","description":"In this section, we will add the ability to click on an item and enable edit mode which will put that item text into the input. We will also make that item in the list a lighter color and change the button from \'Add\' to \'Edit\'.","sidebar":"tutorialSidebar"},"3 Javascript/shopping-list-project-docs/setting-up-git":{"id":"3 Javascript/shopping-list-project-docs/setting-up-git","title":"Setting Up Git & GitHub","description":"Git is a version control systems that is used to track changes in code. It is a very powerful tool that is very important to learn as a developer. It is used in many different ways, but we will be using it to track changes in our code as we build our shopping list app.","sidebar":"tutorialSidebar"},"3 Javascript/shopping-list-project-docs/update-item-reset-state":{"id":"3 Javascript/shopping-list-project-docs/update-item-reset-state","title":"Update Item & Reset State","description":"We can now set the app to \'edit mode\' by clicking on an item. Now we need to add the ability to update the item.","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/capitalize-challenge":{"id":"3 Javascript/variables-data-types-docs/capitalize-challenge","title":"Capitalize Challenge","description":"We have arrived at our first challenge. Every once in a while I\'m going to ask you to figure out a problem or do something using what we have already learned. I will not ask you to do a challenge that involves doing something that we have not yet gone over.","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/comments-shortcuts":{"id":"3 Javascript/variables-data-types-docs/comments-shortcuts","title":"Comments & Shortcuts","description":"All programming languages have commenting functionality. Comments are used for documenting your code and explaining things in a human readable way. Often times, multiple developers work on the same code base and comments are used to explain what a certain piece of code does.","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/console":{"id":"3 Javascript/variables-data-types-docs/console","title":"The JavaScript Console","description":"When we create front-end websites and applications, we work in the browser environment. We can use JavaScript to manipulate the DOM (Document Object Model) and display different elements and values, but many times, we just need a quick way to show what a value is. We also need a place to see any errors or warnings in our script or any script that runs. This is where the JavaScript console comes in.","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/data-types":{"id":"3 Javascript/variables-data-types-docs/data-types","title":"Data Types","description":"Primitive types vs reference types","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/date-methods":{"id":"3 Javascript/variables-data-types-docs/date-methods","title":"Date Methods","description":"The Date object","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/dates-and-times":{"id":"3 Javascript/variables-data-types-docs/dates-and-times","title":"Working With Dates","description":"Dates and times are very important in any programming language. JavaScript has a Date object that represents a point in time and let\'s you do some basic operations on it.","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/math-object":{"id":"3 Javascript/variables-data-types-docs/math-object","title":"Math Object","description":"JavaScript has a built-in object called Math. This object has a bunch of methods that have to do with mathematical operations. It comes in handy when you need to do things like find the square root or absolute value of a number, when you need to round up or down or when you need to generate a random number. Let\'s see some examples.","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/number-challenge":{"id":"3 Javascript/variables-data-types-docs/number-challenge","title":"Number Challenge","description":"Instructions:","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/numbers":{"id":"3 Javascript/variables-data-types-docs/numbers","title":"Working with Numbers","description":"So we looked at strings and the properties and methods that are available to us. Now let\'s look at numbers. We\'ll also look at the Math object.","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/operators":{"id":"3 Javascript/variables-data-types-docs/operators","title":"Operators & Arithmetic","description":"In order to look at implicit type coercion in the next video, we\'ll be using some operators, so I thought that this would be a good time to go over JavaScript operators. Most of these are in just about every language. This is really easy stuff, but I want to make sure we cover everything.","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/stack_heap":{"id":"3 Javascript/variables-data-types-docs/stack_heap","title":"Stack vs Heap Memory Allocation","description":"Now we\'re going to look at how primitive and reference type data is stored in memory. One thing I really want to mention is that if you\'re a beginner or even intermediate, this may seem a little confusing but that\'s absolutely fine. In all honestly, I have met senior developers that don\'t know some of this stuff, so don\'t let this overwhelm you.","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/strings":{"id":"3 Javascript/variables-data-types-docs/strings","title":"Working with Strings","description":"Alright, so now we\'re going to work with strings. I\'m going to show you how to concatenate strings, use something called template literals as well as look at some methods and properties that we can use on string objects.","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/type-coercion":{"id":"3 Javascript/variables-data-types-docs/type-coercion","title":"Type Coercion","description":"Type Coercion is when data types are converted implicitly by JavaScript.","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/type-conversion":{"id":"3 Javascript/variables-data-types-docs/type-conversion","title":"Type Conversion","description":"In programming, type conversion or type casting is the process of explicitly converting a value from one type to another. For instance, you may have a string value of \'5\' and you want to convert it to a number value of 5 so that you can do some arithmetic operations on it.","sidebar":"tutorialSidebar"},"3 Javascript/variables-data-types-docs/variables":{"id":"3 Javascript/variables-data-types-docs/variables","title":"Variables","description":"Variables are containers for pieces of data. That data can be one of many different data types. It\'s important to know and understand those data types and we will go over them in the next lesson, but right now, we are just going to look at the syntax for creating and re-assigning variables as well as the differences between how we declare them.","sidebar":"tutorialSidebar"},"4 React 18/1 what is react":{"id":"4 React 18/1 what is react","title":"What is react?","description":"react is an open source javascript library for building user interfaces","sidebar":"tutorialSidebar"},"4 React 18/10 default and named exports":{"id":"4 React 18/10 default and named exports","title":"Default export vs named export","description":"export default","sidebar":"tutorialSidebar"},"4 React 18/11 JSX":{"id":"4 React 18/11 JSX","title":"JSX","description":"JSX is a syntax extension to javascript","sidebar":"tutorialSidebar"},"4 React 18/12 props":{"id":"4 React 18/12 props","title":"Props","description":"components are reusable ->","sidebar":"tutorialSidebar"},"4 React 18/13 state":{"id":"4 React 18/13 state","title":"State","description":"props vs state","sidebar":"tutorialSidebar"},"4 React 18/14 Hooks at a glance":{"id":"4 React 18/14 Hooks at a glance","title":"Hooks at a glance","description":"a hook is a special function that lets you hook into react features","sidebar":"tutorialSidebar"},"4 React 18/15 event handling":{"id":"4 React 18/15 event handling","title":"Event handling","description":"let\'s see how to handle events in react","sidebar":"tutorialSidebar"},"4 React 18/16 parent and child  communication":{"id":"4 React 18/16 parent and child  communication","title":"Parent and child component communication","description":"what if a child component wanted to communicate with the parent component","sidebar":"tutorialSidebar"},"4 React 18/17 conditional rendering":{"id":"4 React 18/17 conditional rendering","title":"Conditional rendering","description":"two common ways to conditionally render in react","sidebar":"tutorialSidebar"},"4 React 18/18 list rendering":{"id":"4 React 18/18 list rendering","title":"List rendering","description":"in react we use the javascript map method to repeat some html for each item in the list","sidebar":"tutorialSidebar"},"4 React 18/19 styling":{"id":"4 React 18/19 styling","title":"Styling","description":"there are a couple of options to style react components","sidebar":"tutorialSidebar"},"4 React 18/2 Why learn React":{"id":"4 React 18/2 Why learn React","title":"Why learn React?","description":"it is one of the most popular ui libraries","sidebar":"tutorialSidebar"},"4 React 18/20 forms":{"id":"4 React 18/20 forms","title":"Forms","description":"create a form like regular html","sidebar":"tutorialSidebar"},"4 React 18/21 HTTP GET & POST request":{"id":"4 React 18/21 HTTP GET & POST request","title":"HTTP GET & POST request","description":"how to make a get request","sidebar":"tutorialSidebar"},"4 React 18/22 useTransition hook":{"id":"4 React 18/22 useTransition hook","title":"UseTransition hook","description":"unlike use state and use effect use transition is a hook that is more concerned with performance rather than supporting a core functionality","sidebar":"tutorialSidebar"},"4 React 18/23 further learning":{"id":"4 React 18/23 further learning","title":"Further learning","description":"with that we come to the end of this crash course on the fundamentals of","sidebar":"tutorialSidebar"},"4 React 18/3 Setup":{"id":"4 React 18/3 Setup","title":"Setting up our development environment","description":"for react we need three things, a browser, node.js and a code editor.","sidebar":"tutorialSidebar"},"4 React 18/4 create a new react app":{"id":"4 React 18/4 create a new react app","title":"Create a new react app","description":"to create a new react app we will be making use of create react app ->","sidebar":"tutorialSidebar"},"4 React 18/5 folder structure and files":{"id":"4 React 18/5 folder structure and files","title":"The applications folder structure and files","description":"package.json","sidebar":"tutorialSidebar"},"4 React 18/6 updating to react 18":{"id":"4 React 18/6 updating to react 18","title":"React 17 vs React 18","description":"there is a small update needed in index.js","sidebar":"tutorialSidebar"},"4 React 18/7 What is a component":{"id":"4 React 18/7 What is a component","title":"What is a component?","description":"in react a component represents a part of the user interface","sidebar":"tutorialSidebar"},"4 React 18/8 Function Components":{"id":"4 React 18/8 Function Components","title":"Function Components","description":"in the year 2022 function components are pretty much what you need to learn and our focus is going to be just that","sidebar":"tutorialSidebar"},"4 React 18/9 creating a new component":{"id":"4 React 18/9 creating a new component","title":"Create a function component","description":"create a function component ourselves ->","sidebar":"tutorialSidebar"},"5 Next.js 13/1 Course Overview":{"id":"5 Next.js 13/1 Course Overview","title":"Course Overview","description":"Hi everyone.","sidebar":"tutorialSidebar"},"5 Next.js 13/10 Font in Next.js":{"id":"5 Next.js 13/10 Font in Next.js","title":"Font in Next.js","description":"install @next/font package.","sidebar":"tutorialSidebar"},"5 Next.js 13/11 Styling in Next.js":{"id":"5 Next.js 13/11 Styling in Next.js","title":"Styling in Next.js","description":"Next.js supports different types of styling,","sidebar":"tutorialSidebar"},"5 Next.js 13/12 CSS modules":{"id":"5 Next.js 13/12 CSS modules","title":"CSS modules","description":"Next.js has built\u2011in support for CSS modules","sidebar":"tutorialSidebar"},"5 Next.js 13/13 Global Styles":{"id":"5 Next.js 13/13 Global Styles","title":"Global Styles","description":"CSS modules vs Global styles","sidebar":"tutorialSidebar"},"5 Next.js 13/14 Image in Next.js":{"id":"5 Next.js 13/14 Image in Next.js","title":"Image in Next.js","description":"features of the Next.js Image component","sidebar":"tutorialSidebar"},"5 Next.js 13/15 Learning Rendering and Data Fetching":{"id":"5 Next.js 13/15 Learning Rendering and Data Fetching","title":"Learning Rendering and Data Fetching","description":"Learning Rendering and Data Fetching.","sidebar":"tutorialSidebar"},"5 Next.js 13/16 Component Level Rendering":{"id":"5 Next.js 13/16 Component Level Rendering","title":"Component Level Rendering","description":"what exactly a client and a server really is.","sidebar":"tutorialSidebar"},"5 Next.js 13/17 Data Fetching Approaches":{"id":"5 Next.js 13/17 Data Fetching Approaches","title":"Data Fetching Approaches","description":"in next.js 13, data fetching can be done on a page\u2011by\u2011page basis","sidebar":"tutorialSidebar"},"5 Next.js 13/18 Fetch in Next.js":{"id":"5 Next.js 13/18 Fetch in Next.js","title":"Fetch in Next.js","description":"how to implement data fetching in Next.js","sidebar":"tutorialSidebar"},"5 Next.js 13/19 Exploring Dynamic Routing in Next.js":{"id":"5 Next.js 13/19 Exploring Dynamic Routing in Next.js","title":"Exploring Dynamic Routing in Next.js","description":"Defining Dynamic Routes in Next.js","sidebar":"tutorialSidebar"},"5 Next.js 13/2 Introduction to Next.js":{"id":"5 Next.js 13/2 Introduction to Next.js","title":"Introduction to Next.js","description":"Version Check","sidebar":"tutorialSidebar"},"5 Next.js 13/20 Generating Static Params":{"id":"5 Next.js 13/20 Generating Static Params","title":"Generating Static Params","description":"Generate static parameters is a server function that defines the list of route segment parameters.","sidebar":"tutorialSidebar"},"5 Next.js 13/21 Deploying and Migrating to Next.js":{"id":"5 Next.js 13/21 Deploying and Migrating to Next.js","title":"Deploying Your Next.js App and Migrating Existing Apps to Next.js","description":"Next.js Deployment on Vercel","sidebar":"tutorialSidebar"},"5 Next.js 13/3 Setup and Create Your First Next.js App":{"id":"5 Next.js 13/3 Setup and Create Your First Next.js App","title":"Setup and Create Your First Next.js App","description":"Overview","sidebar":"tutorialSidebar"},"5 Next.js 13/4 new project folder clean up":{"id":"5 Next.js 13/4 new project folder clean up","title":"new project folder clean up","description":"Once you have create a new next up, replace the necessary parts:","sidebar":"tutorialSidebar"},"5 Next.js 13/5 Pages":{"id":"5 Next.js 13/5 Pages","title":"Pages","description":"Current Page","sidebar":"tutorialSidebar"},"5 Next.js 13/6 Create Pages":{"id":"5 Next.js 13/6 Create Pages","title":"Create Pages","description":"it\'s time to start creating the routes","sidebar":"tutorialSidebar"},"5 Next.js 13/7 Linking and Navigation":{"id":"5 Next.js 13/7 Linking and Navigation","title":"Linking and Navigation","description":"using the Link component","sidebar":"tutorialSidebar"},"5 Next.js 13/8 Layout":{"id":"5 Next.js 13/8 Layout","title":"Layout","description":"Layout is basically a UI that is shared between pages.","sidebar":"tutorialSidebar"},"5 Next.js 13/9 Working with Images, Fonts, and Styling":{"id":"5 Next.js 13/9 Working with Images, Fonts, and Styling","title":"Working with Images, Fonts, and Styling Your App","description":"Overview","sidebar":"tutorialSidebar"},"6 React Native/1 Introduction":{"id":"6 React Native/1 Introduction","title":"Introduction","description":"- Hey everyone, my name is Vishwas.","sidebar":"tutorialSidebar"},"6 React Native/10 Image":{"id":"6 React Native/10 Image","title":"Image Component","description":"- Welcome back! The next core component we have is the image component.","sidebar":"tutorialSidebar"},"6 React Native/2 Expo vs React Native":{"id":"6 React Native/2 Expo vs React Native","title":"Expo vs React Native","description":"- Before diving into our first React Native project, let\'s explore a vital topic: Expo versus React Native.","sidebar":"tutorialSidebar"},"6 React Native/3 Hello World":{"id":"6 React Native/3 Hello World","title":"Hello World","description":"Setting Up Development Environment","sidebar":"tutorialSidebar"},"6 React Native/4 Running App on Device":{"id":"6 React Native/4 Running App on Device","title":"Running the App on a Device","description":"- Now that we have learned how to generate a new Expo project and gained an understanding of the project\'s different files and folders, it\'s time to run our application.","sidebar":"tutorialSidebar"},"6 React Native/5 Running App on iPhone Simulator":{"id":"6 React Native/5 Running App on iPhone Simulator","title":"Running the App on an iOS Simulator","description":"- In the previous video, we learned how to run our Expo app on a physical device. Now, let\'s explore how to run the app on an iOS simulator.","sidebar":"tutorialSidebar"},"6 React Native/6 Running App on Android Emulator":{"id":"6 React Native/6 Running App on Android Emulator","title":"Running the App on an Android Emulator","description":"- In this video, we will explore how to run our application on an Android emulator.","sidebar":"tutorialSidebar"},"6 React Native/7 Core Components":{"id":"6 React Native/7 Core Components","title":"Core Components","description":"- In this section, we will explore the core components in React Native.","sidebar":"tutorialSidebar"},"6 React Native/8 View":{"id":"6 React Native/8 View","title":"View Component","description":"- The View component is a fundamental code component in React Native.","sidebar":"tutorialSidebar"},"6 React Native/9 Text":{"id":"6 React Native/9 Text","title":"Text Component","description":"- The text component is a component for displaying text.","sidebar":"tutorialSidebar"},"landing":{"id":"landing","title":"WEB DEVELOPMENT","description":"---","sidebar":"tutorialSidebar"}}}')}}]);